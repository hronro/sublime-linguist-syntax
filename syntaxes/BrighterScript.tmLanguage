<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>name</key>
	<string>BrightScript</string>
	<key>scopeName</key>
	<string>source.brs</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#entire_language</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>annotation</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>^\s*(@)\s*([a-zA-Z0-9_]+)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.decorator.brs</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.brs meta.function-call.brs</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.decorator.brs</string>
					<key>begin</key>
					<string>(@)\s*([a-zA-Z0-9_]+)\s*(\()</string>
					<key>end</key>
					<string>(\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#entire_language</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.decorator.brs</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.brs meta.function-call.brs</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>meta.brace.round.brs</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.brace.round.brs</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>apostrophe_comment</key>
		<dict>
			<key>name</key>
			<string>comment.line.apostrophe.brs</string>
			<key>match</key>
			<string>(&apos;[^\r\n]*)$</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.brs</string>
				</dict>
			</dict>
		</dict>
		<key>class_declaration</key>
		<dict>
			<key>match</key>
			<string>(?i:(class)\s+([a-z0-9_]+)(?:\s+(extends)(?:\s+([a-z0-9_]+))?)?)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.class.brs</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.brs</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.brs</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.brs</string>
				</dict>
			</dict>
		</dict>
		<key>class_roku_builtin</key>
		<dict>
			<key>name</key>
			<string>support.class.brs</string>
			<key>match</key>
			<string>(?i:\bro(R(ss(Parser|Article)|e(sourceManager|ctangle|ad(File|WriteFile)|gistry(Section)?))|G(pio(Button|ControlPort)|lobal)|XML(Element|List)|MessagePort|AppInfo|Array|AssociativeArray|AudioGuide|AudioMetadata|AudioPlayer|AudioResource|Bitmap|Boolean|ByteArray|CaptionRenderer|ChannelStore|CodeRegistrationScreen|Compositor|DataGramSocket|DateTime|DeviceInfo|Double|IntrinsicDouble|EVPCipher|EVPDigest|FileSystem|Float|Font|FontMetrics|FontRegistry|Function|GridScreen|HdmiStatus|HMAC|HttpAgent|ImageCanvas|ImageMetadata|Input|Int|Invalid|KeyboardScreen|List|ListScreen|Localization|LongInteger|MessageDialog|MessagePort|Microphone|OneLineDialog|ParagraphScreen|Path|PinEntryDialog|PosterScreen|ProgramGuide|Regex|Region|Registry|RegistrySection|RSA|Screen|SearchHistory|SearchScreen|SlideShow|SocketAddress|SpringboardScreen|Sprite|StreamSocket|String|SystemLog|TextScreen|TextToSpeech|TextureManager|TextureRequest|Timespan|Tuner|UrlTransfer|VideoPlayer|VideoScreen|XMLElement|XMLList|SGScreen|SGNode|SGNodeEvent|SGScreenEvent|AudioPlayerEvent|CaptionRendererEvent|CECStatusEvent|ChannelStoreEvent|CodeRegistrationScreenEvent|DeviceInfoEvent|FileSystemEvent|GridScreenEvent|HdmiHotPlugEvent|HdmiStatusEvent|ImageCanvasEvent|InputEvent|KeyboardScreenEvent|ListScreenEvent|MessageDialogEvent|MicrophoneEvent|OneLineDialogEvent|ParagraphScreenEvent|PinEntryDialogEvent|PosterScreenEvent|SearchScreenEvent|SlideShowEvent|SocketEvent|SpringboardScreenEvent|SystemLogEvent|TextScreenEvent|TextToSpeechEvent|TextureRequestEvent|TunerEvent|UniversalControlEvent|UrlEvent|VideoPlayerEvent|VideoScreenEvent|B(yteArray|oolean|r(Sub|ightPackage))|S(ystemTime|t(orageInfo|ring( )?)|erialPort( )?)|NetworkConfiguration|C(ontrol(Down( )?|Up|Port)|ecInterface|lockWidget|reateFile)|T(imer|ouchScreen( )?|ext(Field|Widget))|I(RRemote( )?|n(t|valid)|mage(Player|Widget))|D(eviceInfo( )?|at(eTime|agram(Receiver|Sender)))|Url(Transfer|Event)|Video(Mode|Input|Player|Event)|Keyboard(Press( )?| )?|Quadravox(Button( )?|SNS5( )?)|Float|List|A(ssociativeArray|udio(Player|Event)|ppendFile|rray))\b)</string>
		</dict>
		<key>comment</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#rem_comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#apostrophe_comment</string>
				</dict>
			</array>
		</dict>
		<key>component_statement</key>
		<dict>
			<key>name</key>
			<string>meta.component.brs</string>
			<key>begin</key>
			<string>(?i)^[ 	]*(component)\s+(?:([a-z0-9_]+)|(&quot;.*?&quot;))(?:\s+(extends)(?:\s+(?:([a-z0-9_]+)|(&quot;.*?&quot;)))?)?\s*</string>
			<key>end</key>
			<string>(?i)(?&lt;![_[:alnum:]])(?&lt;!\.)\s*(end\s*component)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#entire_language</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.component.brs</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.component.brs</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.quoted.double.brs</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.extends.brs</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.component.brs</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>string.quoted.double.brs</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.component.brs</string>
				</dict>
			</dict>
		</dict>
		<key>end_class</key>
		<dict>
			<key>name</key>
			<string>storage.type.class.brs</string>
			<key>match</key>
			<string>(?i:\s*(end\s*class))</string>
		</dict>
		<key>end_function</key>
		<dict>
			<key>name</key>
			<string>keyword.declaration.function</string>
			<key>match</key>
			<string>(?i)[ \t]*end\s*(sub|function)</string>
		</dict>
		<key>end_namespace</key>
		<dict>
			<key>match</key>
			<string>^(?i:\s*(end\s*namespace)\s*(?=[&apos;\n]))</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.namespace.brs</string>
				</dict>
			</dict>
		</dict>
		<key>end_region_comment</key>
		<dict>
			<key>name</key>
			<string>keyword.preprocessor.region.brs</string>
			<key>match</key>
			<string>^(i?\s*&apos;\s*#endregion(\s*.*)?$)</string>
		</dict>
		<key>entire_language</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#regex</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#if_with_paren</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#component_statement</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#apostrophe_comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#template_string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#rem_comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#import_statement</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#namespace_declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#enum_declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#end_namespace</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#method</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#field</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#class_declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#end_class</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#preprocessor_keywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#region_comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#end_region_comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#global_constants</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keyword_logical_operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function_call</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#object_properties</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vscode_rale_tracker_entry_comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#identifiers_with_type_designators</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#m_and_global</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keyword_return</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#primitive_literal_expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function_declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#inline_function_declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#end_function</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interface_declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#storage_types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#loop_keywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#program_statements</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#try_catch</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#non_identifier_keywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operators</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#support_functions</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variables_and_params</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#annotation</string>
				</dict>
			</array>
		</dict>
		<key>enum_declaration</key>
		<dict>
			<key>name</key>
			<string>meta.enum.declaration.brs</string>
			<key>begin</key>
			<string>(?i)\b(enum)[ \t]+([a-zA-Z0-9_]+)\b</string>
			<key>end</key>
			<string>(?i)[ \t]*(end[ \t]*enum)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#annotation</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\s*\b([a-z0-9_]+)(?:[ \t]*(=))?</string>
					<key>end</key>
					<string>?
</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#primitive_literal_expression</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.object.enummember.brs</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.brs</string>
						</dict>
					</dict>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.enum.brs</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.enum.brs</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.enum.brs</string>
				</dict>
			</dict>
		</dict>
		<key>field</key>
		<dict>
			<key>match</key>
			<string>(?i:(public|protected|private)\s+([a-z0-9_]+))</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.brs</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.object.property.brs</string>
				</dict>
			</dict>
		</dict>
		<key>function_call</key>
		<dict>
			<key>match</key>
			<string>(?i:\b([a-z_][a-z0-9_]*)[ \t]*(?=\())</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.brs</string>
				</dict>
			</dict>
		</dict>
		<key>function_declaration</key>
		<dict>
			<key>match</key>
			<string>(?i:(?:(public|protected|private)\s+)?(?:(override)\s+)?((?:sub|function)[^\w])(?:\s+([a-z_][a-z0-9_]*))?)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.brs</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.brs</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.declaration.function.brs</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.brs</string>
				</dict>
			</dict>
		</dict>
		<key>global_constants</key>
		<dict>
			<key>name</key>
			<string>variable.language</string>
			<key>match</key>
			<string>(?i:\b(line_num)\b)</string>
		</dict>
		<key>identifiers_with_type_designators</key>
		<dict>
			<key>name</key>
			<string>entity.name.variable.local.brs</string>
			<key>match</key>
			<string>(?i:\b([a-z_][a-z0-9_]*)[\$%!#&amp;])</string>
		</dict>
		<key>if_with_paren</key>
		<dict>
			<key>begin</key>
			<string>(?i:(?&lt;!\.)(if)\s*\()</string>
			<key>end</key>
			<string>(then)|
</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#entire_language</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.brs</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.brs</string>
				</dict>
			</dict>
		</dict>
		<key>import_statement</key>
		<dict>
			<key>match</key>
			<string>(?i:(import)\s*(&quot;.*&quot;))</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.import.brs</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.quoted.double.brs</string>
				</dict>
			</dict>
		</dict>
		<key>inline_function_declaration</key>
		<dict>
			<key>match</key>
			<string>(?i)[^a-z0-9_&quot;](function|sub)\s*\(</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.declaration.function</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.declaration.function</string>
				</dict>
			</dict>
		</dict>
		<key>interface_declaration</key>
		<dict>
			<key>name</key>
			<string>meta.interface.brs</string>
			<key>begin</key>
			<string>(?i)\b[\s\t]*(interface)[\s\t]+([a-zA-Z0-9_]+)\b</string>
			<key>end</key>
			<string>(?i)[\s\t]*(end[\s\t]*interface)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#annotation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interface_function</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interface_field</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.interface.brs</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.interface.brs</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.interface.brs</string>
				</dict>
			</dict>
		</dict>
		<key>interface_field</key>
		<dict>
			<key>begin</key>
			<string>(?i)\s*\b([a-z0-9_]+)(?:[\s\t]*(as))?</string>
			<key>end</key>
			<string>?
</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type_expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.object.property.brs</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.control.as.brs</string>
				</dict>
			</dict>
		</dict>
		<key>interface_function</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#interface_function_with_return_type</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interface_function_plain</string>
				</dict>
			</array>
		</dict>
		<key>interface_function_plain</key>
		<dict>
			<key>match</key>
			<string>(?i:\s*\b(function|sub)[\s\t]+([a-z0-9_]+)(\())(\))[\s\t]</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.brs</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.member.brs</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.brs</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.end.brs</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.control.as.brs</string>
				</dict>
			</dict>
		</dict>
		<key>interface_function_with_return_type</key>
		<dict>
			<key>begin</key>
			<string>(?i:\s*\b(function|sub)[\s\t]+([a-z0-9_]+)(\()).*?(\))[\s\t]+(as)</string>
			<key>end</key>
			<string>?
</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type_expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.brs</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.member.brs</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.brs</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.end.brs</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.control.as.brs</string>
				</dict>
			</dict>
		</dict>
		<key>keyword_logical_operator</key>
		<dict>
			<key>name</key>
			<string>keyword.operator.logical.word</string>
			<key>match</key>
			<string>(?i:\b(and|or|not)\b)</string>
		</dict>
		<key>keyword_return</key>
		<dict>
			<key>match</key>
			<string>(?i:\b(return)\b)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.flow.return.brs</string>
				</dict>
			</dict>
		</dict>
		<key>loop_keywords</key>
		<dict>
			<key>name</key>
			<string>keyword.control.loop.brs</string>
			<key>match</key>
			<string>(?i:(?&lt;!\.)(continue\s+(for|while)\b))</string>
		</dict>
		<key>m_and_global</key>
		<dict>
			<key>match</key>
			<string>(?i:(?&lt;!\.)\b(m|global|super)\b)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.this.brs</string>
				</dict>
			</dict>
		</dict>
		<key>method</key>
		<dict>
			<key>match</key>
			<string>(?i:(?:(public|protected|private)\s+)?(?:(override)\s+)?((?:sub|function)[^\w])(?:\s+([a-z_][a-z0-9_]*))?)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.brs</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.brs</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.declaration.function.brs</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.brs</string>
				</dict>
			</dict>
		</dict>
		<key>namespace_declaration</key>
		<dict>
			<key>begin</key>
			<string>(?i:(namespace))\s+</string>
			<key>end</key>
			<string>[\s&apos;\n]</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>entity.name.type.namespace.brs</string>
					<key>match</key>
					<string>(?i:([a-z0-9_]+))</string>
				</dict>
				<dict>
					<key>name</key>
					<string>punctuation.accessor.brs</string>
					<key>match</key>
					<string>\.</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.namespace.brs</string>
				</dict>
			</dict>
		</dict>
		<key>non_identifier_keywords</key>
		<dict>
			<key>match</key>
			<string>(?i:[^\.\w\&quot;](then|stop|run|end|each|next|throw)(?!(\s*:)|[\d\w_]))</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.brs</string>
				</dict>
			</dict>
		</dict>
		<key>object_properties</key>
		<dict>
			<key>match</key>
			<string>(?i:(?&lt;=\.)([a-z0-9_][a-z0-9_\$%!#&amp;]*))</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.other.object.property.brs</string>
				</dict>
			</dict>
		</dict>
		<key>operators</key>
		<dict>
			<key>name</key>
			<string>keyword.operator.brs</string>
			<key>match</key>
			<string>=|&gt;=|&lt;zz|&gt;|&lt;|&lt;&gt;|\+|-|\*|\/|\^|&amp;|\b(?i:(And|Not|Or|Mod))\b</string>
		</dict>
		<key>preprocessor_keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>keyword.preprocessor.if.brs</string>
					<key>match</key>
					<string>(?i:(#const))</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.preprocessor.if.brs</string>
					<key>match</key>
					<string>(?i:(#if))</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.preprocessor.if.brs</string>
					<key>match</key>
					<string>(?i:(#else\s*if))</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.preprocessor.endif.brs</string>
					<key>match</key>
					<string>(?i:(#end\s*if))</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.preprocessor.else.brs</string>
					<key>match</key>
					<string>(?i:(#else))</string>
				</dict>
			</array>
		</dict>
		<key>primitive_literal_expression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>string.quoted.double.brs</string>
					<key>begin</key>
					<string>&quot;</string>
					<key>end</key>
					<string>&quot;</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>name</key>
							<string>constant.character.escape.brs</string>
							<key>match</key>
							<string>&quot;&quot;</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#class_roku_builtin</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.numeric.brs</string>
					<key>match</key>
					<string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f)?\b</string>
				</dict>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>name</key>
							<string>constant.language.boolean.true.brs</string>
							<key>match</key>
							<string>(?i)\b(true)\b</string>
						</dict>
						<dict>
							<key>name</key>
							<string>constant.language.boolean.false.brs</string>
							<key>match</key>
							<string>(?i)\b(false)\b</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i:\b(invalid)\b)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.language.null.brs</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>program_statements</key>
		<dict>
			<key>name</key>
			<string>keyword.control.brs</string>
			<key>match</key>
			<string>(?i:(?&lt;!\.)(if|else\s*if|else|print|library|while|for\s+each|for|end\s*for|exit\s+for|end\s*while|exit\s*while|end\s*if|to|step|in|goto|rem|as)\b)</string>
		</dict>
		<key>regex</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>string.regexp.brs</string>
					<key>begin</key>
					<string>(?&lt;!\+\+|--|})(?&lt;=[=(:,\[?+!]|^return|[^\._$[:alnum:]]return|^case|[^\._$[:alnum:]]case|=&gt;|&amp;&amp;|\|\||\*\/)\s*(\/)(?![\/*])(?=(?:[^\/\\\[\()]|\\.|\[([^\]\\]|\\.)+\]|\(([^\)\\]|\\.)+\))+\/([gmixsuXUAJ]+|(?![\/\*])|(?=\/\*))(?!\s*[a-zA-Z0-9_$]))</string>
					<key>end</key>
					<string>(/)([gmixsuXUAJ]*)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#regexp</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.brs</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.brs</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.brs</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>string.regexp.brs</string>
					<key>begin</key>
					<string>((?&lt;![_$[:alnum:])\]]|\+\+|--|}|\*\/)|((?&lt;=^return|[^\._$[:alnum:]]return|^case|[^\._$[:alnum:]]case))\s*)\/(?![\/*])(?=(?:[^\/\\\[]|\\.|\[([^\]\\]|\\.)*\])+\/([gmixsuXUAJ]+|(?![\/\*])|(?=\/\*))(?!\s*[a-zA-Z0-9_$]))</string>
					<key>end</key>
					<string>(/)([gmixsuXUAJ]*)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#regexp</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.brs</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.brs</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.brs</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>regex-character-class</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.other.character-class.regexp</string>
					<key>match</key>
					<string>\\[wWsSdDtrnvf]|\.</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.numeric.regexp</string>
					<key>match</key>
					<string>\\([0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4})</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.control.regexp</string>
					<key>match</key>
					<string>\\c[A-Z]</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.backslash.regexp</string>
					<key>match</key>
					<string>\\.</string>
				</dict>
			</array>
		</dict>
		<key>regexp</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>keyword.control.anchor.regexp</string>
					<key>match</key>
					<string>\\[bB]|\^|\$</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\[1-9]\d*|\\k&lt;([a-zA-Z_$][\w$]*)&gt;</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.other.back-reference.regexp</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.other.regexp</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.quantifier.regexp</string>
					<key>match</key>
					<string>[?+*]|\{(\d+,\d+|\d+,|,\d+|\d+)\}\??</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.or.regexp</string>
					<key>match</key>
					<string>\|</string>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.group.assertion.regexp</string>
					<key>begin</key>
					<string>(\()((\?=)|(\?!)|(\?\|)|(\?&lt;=)|(\?&lt;!))</string>
					<key>end</key>
					<string>(\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#regexp</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group.regexp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group.assertion.regexp</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>meta.assertion.look-ahead.regexp</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>meta.assertion.negative-look-ahead.regexp</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>meta.assertion.look-behind.regexp</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>meta.assertion.negative-look-behind.regexp</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group.regexp</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.group.regexp</string>
					<key>begin</key>
					<string>\((?:(\?[:&gt;])|(?:\?&lt;([a-zA-Z_$][\w$]*)&gt;))?</string>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#regexp</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group.regexp</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group.no-capture.regexp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.other.regexp</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group.regexp</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.other.character-class.set.regexp</string>
					<key>begin</key>
					<string>(\[)(\^)?</string>
					<key>end</key>
					<string>(\])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>name</key>
							<string>constant.other.character-class.range.regexp</string>
							<key>match</key>
							<string>(?:.|(\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\c[A-Z])|(\\.))\-(?:[^\]\\]|(\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\c[A-Z])|(\\.))</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>constant.character.numeric.regexp</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>constant.character.control.regexp</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>constant.character.escape.backslash.regexp</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>constant.character.numeric.regexp</string>
								</dict>
								<key>5</key>
								<dict>
									<key>name</key>
									<string>constant.character.control.regexp</string>
								</dict>
								<key>6</key>
								<dict>
									<key>name</key>
									<string>constant.character.escape.backslash.regexp</string>
								</dict>
							</dict>
						</dict>
						<dict>
							<key>include</key>
							<string>#regex-character-class</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.character-class.regexp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.negation.regexp</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.character-class.regexp</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>include</key>
					<string>#regex-character-class</string>
				</dict>
			</array>
		</dict>
		<key>region_comment</key>
		<dict>
			<key>match</key>
			<string>(?i:^\s*(&apos;\s*#region)(?:(\s+.*)?))$</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.preprocessor.region.brs</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.unquoted.preprocessor.message.brs</string>
				</dict>
			</dict>
		</dict>
		<key>rem_comment</key>
		<dict>
			<key>name</key>
			<string>comment.line.rem.brs</string>
			<key>match</key>
			<string>^\s*?(?i:rem\s.*)$</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.brs</string>
				</dict>
			</dict>
		</dict>
		<key>storage_types</key>
		<dict>
			<key>match</key>
			<string>(?i:\b(boolean|integer|longinteger|float|double|string|object|function|sub|interface|dynamic|brsub|dim|const)\b)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.brs</string>
				</dict>
			</dict>
		</dict>
		<key>support_builtin_functions</key>
		<dict>
			<key>name</key>
			<string>support.function.brs</string>
			<key>match</key>
			<string>(?i:\b(GetLastRun(RuntimeError|CompileError)|Rnd|Box|Type|objfun|pos|eval)\b)</string>
		</dict>
		<key>support_component_functions</key>
		<dict>
			<key>name</key>
			<string>support.function.component.brs</string>
			<key>match</key>
			<string>(?i:\b(R(ight|e(set(Index)?|ad(B(yte(IfAvailable)?|lock)|File|Line)?|move(Head|Tail|Index)))|Ge(nXML(Header)?|t(Res(ource|ponse(Headers|Code))|X|M(i(nute|llisecond)|o(nth|de(l)?)|essage)|B(yte(sPerBlock|Array)|o(o(tVersion(Number)?|lean)|dy))|S(t(orageCardInfo|a(ndards|tusByte)|ring(Count)?)|i(zeInMegabytes|gnedByte)|ource(Host|Identity|Port)|ub|ec(tionList|ond)|afe(X|Height|Y|Width))|H(o(stName|ur)|e(ight|ad))|Y(ear)?|N(extArticle|ame(dElements)?)|C(hildElements|ontrols|urrent(Standard|Con(trolValue|fig)|Input))|T(i(tle|me(Server|Zone))|o(String|File)|ext|ail)|I(n(t|dex|puts)|dentity)|ZoneDateTime|D(e(scription|vice(BootCount|Name|U(niqueId|ptime)))|a(y(OfWeek)?|ta))|U(se(dInMegabytes|rData)|tcDateTime)|Ent(ityEncode|ry)|V(ersion(Number)?|alue)|KeyList|F(ileSystemType|loat|a(ilureReason|mily)|reeInMegabytes)|W(holeState|idth)|LocalDateTime|Attributes))|M(id|D5|ap(StereoOutput(Aux)?|DigitalOutput))|Boolean|S(h(ift|ow)|canWiFi|t((Clear|Display)?|art|r(i(ng)?)?)|implify|ubtract(Milliseconds|Seconds)|e(nd(RawMessage|B(yte|lock)|Line)?|t(R(ollOverRegion|e(s(ize|olution)|c(tangle|eiveEol)))|X|M(i(n(imumTransferRate|ute)|llisecond)|o(nth|de(CaseSensitive)?)|ultiscreenBezel)|B(yteEventPort|o(olean|dy)|a(ckground(Bitmap|Color)|udRate))|S(t(andard|ring)|ub|e(ndEol|cond)|afeTextRegion)|H(o(stName|ur)|eight)|Y(ear)?|Name|C(hannelVolumes(Aux)?|ontrolValue|ursor(Bitmap|Pos(ition)?))|Time(Server|Zone)?|I(n(t|put)|P4(Gateway|Broadcast|Netmask|Address))|OutputState|D(HCP|omain|e(stination|fault(Mode|Transistion))|a(y(OfWeek)?|te(Time)?))|U(ser(Data|AndPassword)|tcDateTime|rl)|P(o(werSaveMode|rt)|assword|roxy)|E(ntry|cho|ol)|V(iewMode|olume(Aux)?)|F(o(nt|r(egroundColor|groundColor))|l(oat|ashRate))|W(holeState|i(dth|Fi(Passphrase|ESSID)))|L(ineEventPort|o(calDateTime|opMode)|auguage)|Audio(Mode(Aux)?|Stream(Aux)?|Output(Aux)?))|ek(Relative|ToEnd|Absolute)))|H(ide|ead|asAttribute)|N(ormalize|ext)|C(hr|ount|urrentPosition|l(s|ear(Region|Events)?))|T(o(Base64String|HexString|kenize|AsciiString)|estInter(netConnectivity|face)|rim)|I(s(MousePresent|N(ext|ame)|InputActive|Empty|Valid|LittleEndianCPU)|n(str|te(ger)|valid))|Object|D(ynamic|isplay(Preload|File(Ex)?)|o(uble|esExist)|elete)|U(n(shift|pack)|Case)|P(o(st(Message|From(String|File))|p(String(s)?)?)|ush(String)?|eek|lay(StaticImage|File)?|arse(String|File)?|reloadFile(Ex)?)|E(nable(R(ollover|egion)|Cursor|Input|Output)|xists)|Void|F(indIndex|unction|l(oat|ush)|rom(Base64String|HexString|AsciiString))|W(hile|aitMessage|rite(File)?)|L(ookup|e(n|ft))|A(s(ync(GetTo(String|File)|Head|PostFrom(String|File)|Flush)|c)?|tEof|dd(Re(ctangle(Region|_region)|place)|Milliseconds|BodyElement|Seconds|Head(er)?|CircleRegion|Tail|DNSServer|E(vent|lement(WithBody)?)|Attribute)|pp(end(String|File)?|ly))|ToStr)\b)</string>
		</dict>
		<key>support_functions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#support_builtin_functions</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#support_global_functions</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#support_global_string_functions</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#support_global_math_functions</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#support_component_functions</string>
				</dict>
			</array>
		</dict>
		<key>support_global_functions</key>
		<dict>
			<key>name</key>
			<string>support.function.brs</string>
			<key>match</key>
			<string>(?i:\b(Re(adAsciiFile|bootSystem)|GetInterface|MatchFiles|Sleep|C(opyFile|reate(Directory|Object))|Delete(Directory|File)|UpTime|FormatDrive|ListDir|W(ait|riteAsciiFile))\b)</string>
		</dict>
		<key>support_global_math_functions</key>
		<dict>
			<key>name</key>
			<string>support.function.brs</string>
			<key>match</key>
			<string>(?i:\b(S(in|qr|gn)|C(sng|dbl|os)|Tan|Int|Exp|Fix|Log|A(tn|bs))\b)</string>
		</dict>
		<key>support_global_string_functions</key>
		<dict>
			<key>name</key>
			<string>support.function.brs</string>
			<key>match</key>
			<string>(?i:\b(Right|Mid|Str(i(ng(i)?)?)?|Chr|Instr|UCase|Val|Asc|L(Case|e(n|ft)))\b)</string>
		</dict>
		<key>template_string</key>
		<dict>
			<key>begin</key>
			<string>(`)</string>
			<key>end</key>
			<string>(`)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\$\{)</string>
					<key>end</key>
					<string>(\})</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#entire_language</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.template-expression.begin.brs</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.template-expression.end</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>string.template.brs</string>
					<key>match</key>
					<string>(.)</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.template.brs</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.template.brs</string>
				</dict>
			</dict>
		</dict>
		<key>try_catch</key>
		<dict>
			<key>name</key>
			<string>keyword.control.trycatch.brs</string>
			<key>match</key>
			<string>(?i:\b(try|catch|(end[ \t]*try))\b)</string>
		</dict>
		<key>type_expression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)(boolean|integer|longinteger|float|double|string)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.brs</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b([a-z0-9_]+)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.type.brs entity.name.type.brs</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>variables_and_params</key>
		<dict>
			<key>match</key>
			<string>(?i:(?:\b(new)\s)?\b(?&lt;!\.)([a-z_][a-z0-9_\$%!#]*)\b)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.new.brs</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.variable.local.brs</string>
				</dict>
			</dict>
		</dict>
		<key>vscode_rale_tracker_entry_comment</key>
		<dict>
			<key>name</key>
			<string>keyword.preprocessor.brs</string>
			<key>match</key>
			<string>(&apos;\s*vscode_rale_tracker_entry[^\S\r\n]*)</string>
		</dict>
	</dict>
	<key>fileTypes</key>
	<array>
		<string>bs</string>
	</array>
</dict>
</plist>
