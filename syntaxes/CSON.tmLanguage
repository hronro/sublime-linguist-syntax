<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>name</key>
	<string>CoffeeScript</string>
	<key>scopeName</key>
	<string>source.coffee</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#jsx</string>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.class.instance.constructor.coffee</string>
			<key>match</key>
			<string>(new)\s+(?:(?:(class)\s+(\w+(?:\.\w*)*)?)|(\w+(?:\.\w*)*))</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.new.coffee</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.coffee</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.instance.coffee</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.instance.coffee</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>string.quoted.single.heredoc.coffee</string>
			<key>begin</key>
			<string>&apos;&apos;&apos;</string>
			<key>end</key>
			<string>&apos;&apos;&apos;</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.character.escape.backslash.coffee</string>
					<key>match</key>
					<string>(\\).</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.escape.backslash.coffee</string>
						</dict>
					</dict>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.coffee</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.coffee</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>string.quoted.double.heredoc.coffee</string>
			<key>begin</key>
			<string>&quot;&quot;&quot;</string>
			<key>end</key>
			<string>&quot;&quot;&quot;</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.character.escape.backslash.coffee</string>
					<key>match</key>
					<string>(\\).</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.escape.backslash.coffee</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>include</key>
					<string>#interpolated_coffee</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.coffee</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.coffee</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>string.quoted.script.coffee</string>
			<key>match</key>
			<string>(`)(.*)(`)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.coffee</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>source.js.embedded.coffee</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.js</string>
						</dict>
					</array>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.coffee</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>comment.block.coffee</string>
			<key>begin</key>
			<string>(?&lt;!#)###(?!#)</string>
			<key>end</key>
			<string>###</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>storage.type.annotation.coffee</string>
					<key>match</key>
					<string>(?&lt;=^|\s)@\w*(?=\s)</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.coffee</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.coffee</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>comment.line.number-sign.coffee</string>
			<key>begin</key>
			<string>#</string>
			<key>end</key>
			<string>$</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.coffee</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>string.regexp.multiline.coffee</string>
			<key>begin</key>
			<string>///</string>
			<key>end</key>
			<string>(///)[gimuy]*</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#heregexp</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.coffee</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.coffee</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>string.regexp.coffee</string>
			<key>begin</key>
			<string>(?&lt;![\w$])(/)(?=(?![/*+?])(.+)(/)[gimuy]*(?!\s*[\w$/(]))</string>
			<key>end</key>
			<string>(/)[gimuy]*(?!\s*[\w$/(])</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.js.regexp</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.coffee</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.coffee</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.control.coffee</string>
			<key>match</key>
			<string>\b(?&lt;![\.\$])(break|by|catch|continue|else|finally|for|in|of|if|return|switch|then|throw|try|unless|when|while|until|loop|do|export|import|default|from|as|yield|async|await|(?&lt;=for)\s+own)(?!\s*:)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.$1.coffee</string>
			<key>match</key>
			<string>\b(?&lt;![\.\$])(delete|instanceof|new|typeof)(?!\s*:)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.reserved.coffee</string>
			<key>match</key>
			<string>\b(?&lt;![\.\$])(case|function|var|void|with|const|let|enum|native|__hasProp|__extends|__slice|__bind|__indexOf|implements|interface|package|private|protected|public|static)(?!\s*:)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.function.coffee</string>
			<key>begin</key>
			<string>(?x)
(?&lt;=\s|^)((@)?[a-zA-Z_$][\w$]*)
\s*([:=])\s*
(?=(\([^\(\)]*\)\s*)?[=-]&gt;)</string>
			<key>end</key>
			<string>[=-]&gt;</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#function_params</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.coffee</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.other.readwrite.instance.coffee</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment.coffee</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.coffee</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.function.coffee</string>
			<key>begin</key>
			<string>(?x)
(?&lt;=\s|^)(?:((&apos;)([^&apos;]*?)(&apos;))|((&quot;)([^&quot;]*?)(&quot;)))
\s*([:=])\s*
(?=(\([^\(\)]*\)\s*)?[=-]&gt;)</string>
			<key>end</key>
			<string>[=-]&gt;</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#function_params</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.quoted.single.coffee</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.coffee</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.coffee</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.coffee</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>string.quoted.double.coffee</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.coffee</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.coffee</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.coffee</string>
				</dict>
				<key>9</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment.coffee</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.coffee</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.function.inline.coffee</string>
			<key>begin</key>
			<string>(?=(\([^\(\)]*\)\s*)?[=-]&gt;)</string>
			<key>end</key>
			<string>[=-]&gt;</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#function_params</string>
				</dict>
			</array>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.coffee</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.variable.assignment.destructured.object.coffee</string>
			<key>begin</key>
			<string>(?&lt;=\s|^)({)(?=[^&apos;&quot;#]+?}[\s\]}]*=)</string>
			<key>end</key>
			<string>}</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
				<dict>
					<key>name</key>
					<string>variable.assignment.coffee</string>
					<key>match</key>
					<string>[a-zA-Z$_]\w*</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.destructuring.begin.bracket.curly.coffee</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.destructuring.end.bracket.curly.coffee</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.variable.assignment.destructured.array.coffee</string>
			<key>begin</key>
			<string>(?&lt;=\s|^)(\[)(?=[^&apos;&quot;#]+?\][\s\]}]*=)</string>
			<key>end</key>
			<string>\]</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
				<dict>
					<key>name</key>
					<string>variable.assignment.coffee</string>
					<key>match</key>
					<string>[a-zA-Z$_]\w*</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.destructuring.begin.bracket.square.coffee</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.destructuring.end.bracket.square.coffee</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.language.boolean.true.coffee</string>
			<key>match</key>
			<string>\b(?&lt;!\.|::)(true|on|yes)(?!\s*[:=][^=])\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.language.boolean.false.coffee</string>
			<key>match</key>
			<string>\b(?&lt;!\.|::)(false|off|no)(?!\s*[:=][^=])\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.language.null.coffee</string>
			<key>match</key>
			<string>\b(?&lt;!\.|::)null(?!\s*[:=][^=])\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>variable.language.coffee</string>
			<key>match</key>
			<string>\b(?&lt;!\.|::)extends(?!\s*[:=])\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>variable.language.$1.coffee</string>
			<key>match</key>
			<string>(?&lt;!\.)\b(?&lt;!\$)(super|this|arguments)(?!\s*[:=][^=]|\$)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.class.coffee</string>
			<key>match</key>
			<string>(?&lt;=\s|^|\[|\()(class)\s+(extends)\s+(@?[a-zA-Z\$\._][\w\.]*)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.coffee</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.control.inheritance.coffee</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.other.inherited-class.coffee</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.class.coffee</string>
			<key>match</key>
			<string>(?&lt;=\s|^|\[|\()(class\b)\s+(@?[a-zA-Z\$_][\w\.]*)?(?:\s+(extends)\s+(@?[a-zA-Z\$\._][\w\.]*))?</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.coffee</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.coffee</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.control.inheritance.coffee</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.other.inherited-class.coffee</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.other.coffee</string>
			<key>match</key>
			<string>\b(debugger|\\)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.class.coffee</string>
			<key>match</key>
			<string>\b(Array|ArrayBuffer|Blob|Boolean|Date|document|Function|Int(8|16|32|64)Array|Math|Map|Number|Object|Proxy|RegExp|Set|String|WeakMap|window|Uint(8|16|32|64)Array|XMLHttpRequest)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>entity.name.type.object.coffee</string>
			<key>match</key>
			<string>\b(console)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.console.coffee</string>
			<key>match</key>
			<string>((?&lt;=console\.)(debug|warn|info|log|error|time|timeEnd|assert))\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.method.array.coffee</string>
			<key>match</key>
			<string>((?&lt;=\.)(apply|call|concat|every|filter|forEach|from|hasOwnProperty|indexOf|isPrototypeOf|join|lastIndexOf|map|of|pop|propertyIsEnumerable|push|reduce(Right)?|reverse|shift|slice|some|sort|splice|to(Locale)?String|unshift|valueOf))\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.static.array.coffee</string>
			<key>match</key>
			<string>((?&lt;=Array\.)(isArray))\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.static.object.coffee</string>
			<key>match</key>
			<string>((?&lt;=Object\.)(create|definePropert(ies|y)|freeze|getOwnProperty(Descriptors?|Names)|getProperty(Descriptor|Names)|getPrototypeOf|is(Extensible|Frozen|Sealed)?|isnt|keys|preventExtensions|seal))\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.static.math.coffee</string>
			<key>match</key>
			<string>((?&lt;=Math\.)(abs|acos|acosh|asin|asinh|atan|atan2|atanh|ceil|cos|cosh|exp|expm1|floor|hypot|log|log10|log1p|log2|max|min|pow|random|round|sign|sin|sinh|sqrt|tan|tanh|trunc))\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.static.number.coffee</string>
			<key>match</key>
			<string>((?&lt;=Number\.)(is(Finite|Integer|NaN)|toInteger))\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.variable.coffee</string>
			<key>match</key>
			<string>(?&lt;!\.)\b(module|exports|__filename|__dirname|global|process)(?!\s*:)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.language.coffee</string>
			<key>match</key>
			<string>\b(Infinity|NaN|undefined)\b</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#operators</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#method_calls</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#function_calls</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#numbers</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#objects</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#properties</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.prototype.coffee</string>
			<key>match</key>
			<string>::</string>
		</dict>
		<dict>
			<key>name</key>
			<string>invalid.illegal.identifier.coffee</string>
			<key>match</key>
			<string>(?&lt;!\$)\b[0-9]+[\w$]*</string>
		</dict>
		<dict>
			<key>name</key>
			<string>punctuation.terminator.statement.coffee</string>
			<key>match</key>
			<string>;</string>
		</dict>
		<dict>
			<key>name</key>
			<string>punctuation.separator.delimiter.coffee</string>
			<key>match</key>
			<string>,</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>{</string>
			<key>end</key>
			<string>}</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.brace.curly.coffee</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.brace.curly.coffee</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>begin</key>
			<string>\[</string>
			<key>end</key>
			<string>\]</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>keyword.operator.slice.exclusive.coffee</string>
					<key>match</key>
					<string>(?&lt;!\.)\.{3}</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.slice.inclusive.coffee</string>
					<key>match</key>
					<string>(?&lt;!\.)\.{2}</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.array.begin.bracket.square.coffee</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.array.end.bracket.square.coffee</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>begin</key>
			<string>\(</string>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.brace.round.coffee</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.brace.round.coffee</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>include</key>
			<string>#instance_variable</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#single_quoted_string</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#double_quoted_string</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>arguments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.arguments.coffee</string>
					<key>begin</key>
					<string>\(</string>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.begin.bracket.round.coffee</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.end.bracket.round.coffee</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.arguments.coffee</string>
					<key>begin</key>
					<string>(?=(@|@?[\w$]+|[=-]&gt;|\-\d|\[|{|&quot;|&apos;))</string>
					<key>end</key>
					<string>(?=\s*(?&lt;![\w$])(of|in|then|is|isnt|and|or|for|else|when|if|unless|by|instanceof)(?![\w$]))|(?=\s*(}|\]|\)|#|$))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>double_quoted_string</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>string.quoted.double.coffee</string>
					<key>begin</key>
					<string>&quot;</string>
					<key>end</key>
					<string>&quot;</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>name</key>
							<string>constant.character.escape.backslash.coffee</string>
							<key>match</key>
							<string>(\\)(x[0-9A-Fa-f]{2}|[0-2][0-7]{0,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.escape.backslash.coffee</string>
								</dict>
							</dict>
						</dict>
						<dict>
							<key>include</key>
							<string>#interpolated_coffee</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.coffee</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.coffee</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>embedded_comment</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.line.number-sign.coffee</string>
					<key>match</key>
					<string>(?&lt;!\\)(#).*$\n?</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.coffee</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>function_calls</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.function-call.coffee</string>
					<key>begin</key>
					<string>(@)?([\w$]+)(?=\()</string>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#arguments</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.other.readwrite.instance.coffee</string>
						</dict>
						<key>2</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#function_names</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.function-call.coffee</string>
					<key>begin</key>
					<string>(?x)
(@)?([\w$]+)
\s*
(?=\s+(?!(?&lt;![\w$])(of|in|then|is|isnt|and|or|for|else|when|if|unless|by|instanceof)(?![\w$]))(?=(@?[\w$]+|[=-]&gt;|\-\d|\[|{|&quot;|&apos;)))</string>
					<key>end</key>
					<string>(?=\s*(?&lt;![\w$])(of|in|then|is|isnt|and|or|for|else|when|if|unless|by|instanceof)(?![\w$]))|(?=\s*(}|\]|\)|#|$))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#arguments</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.other.readwrite.instance.coffee</string>
						</dict>
						<key>2</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#function_names</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>function_names</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>support.function.coffee</string>
					<key>match</key>
					<string>(?x)
\b(isNaN|isFinite|eval|uneval|parseInt|parseFloat|decodeURI|
decodeURIComponent|encodeURI|encodeURIComponent|escape|unescape|
require|set(Interval|Timeout)|clear(Interval|Timeout))\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>entity.name.function.coffee</string>
					<key>match</key>
					<string>[a-zA-Z_$][\w$]*</string>
				</dict>
				<dict>
					<key>name</key>
					<string>invalid.illegal.identifier.coffee</string>
					<key>match</key>
					<string>\d[\w$]*</string>
				</dict>
			</array>
		</dict>
		<key>function_params</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.parameters.coffee</string>
					<key>begin</key>
					<string>\(</string>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>([a-zA-Z_$][\w$]*)(\.\.\.)?</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>variable.parameter.function.coffee</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.splat.coffee</string>
								</dict>
							</dict>
						</dict>
						<dict>
							<key>match</key>
							<string>(@(?:[a-zA-Z_$][\w$]*)?)(\.\.\.)?</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>variable.parameter.function.readwrite.instance.coffee</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.splat.coffee</string>
								</dict>
							</dict>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.bracket.round.coffee</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.bracket.round.coffee</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>heregexp</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>keyword.control.anchor.regexp</string>
					<key>match</key>
					<string>\\[bB]|\^|\$</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.other.back-reference.regexp</string>
					<key>match</key>
					<string>\\[1-9]\d*</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.quantifier.regexp</string>
					<key>match</key>
					<string>[?+*]|\{(\d+,\d+|\d+,|,\d+|\d+)\}\??</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.or.regexp</string>
					<key>match</key>
					<string>\|</string>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.group.assertion.regexp</string>
					<key>begin</key>
					<string>(\()((\?=)|(\?!))</string>
					<key>end</key>
					<string>(\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#heregexp</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group.regexp</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>meta.assertion.look-ahead.regexp</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>meta.assertion.negative-look-ahead.regexp</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group.regexp</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.group.regexp</string>
					<key>begin</key>
					<string>\((\?:)?</string>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#heregexp</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group.regexp</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group.regexp</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.other.character-class.set.regexp</string>
					<key>begin</key>
					<string>(\[)(\^)?</string>
					<key>end</key>
					<string>(\])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>name</key>
							<string>constant.other.character-class.range.regexp</string>
							<key>match</key>
							<string>(?:.|(\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\c[A-Z])|(\\.))\-(?:[^\]\\]|(\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\c[A-Z])|(\\.))</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>constant.character.numeric.regexp</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>constant.character.control.regexp</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>constant.character.escape.backslash.regexp</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>constant.character.numeric.regexp</string>
								</dict>
								<key>5</key>
								<dict>
									<key>name</key>
									<string>constant.character.control.regexp</string>
								</dict>
								<key>6</key>
								<dict>
									<key>name</key>
									<string>constant.character.escape.backslash.regexp</string>
								</dict>
							</dict>
						</dict>
						<dict>
							<key>include</key>
							<string>#regex-character-class</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.character-class.regexp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.negation.regexp</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.character-class.regexp</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>include</key>
					<string>#regex-character-class</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interpolated_coffee</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#embedded_comment</string>
				</dict>
			</array>
		</dict>
		<key>instance_variable</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>variable.other.readwrite.instance.coffee</string>
					<key>match</key>
					<string>(@)([a-zA-Z_\$]\w*)?</string>
				</dict>
			</array>
		</dict>
		<key>interpolated_coffee</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>source.coffee.embedded.source</string>
					<key>begin</key>
					<string>\#\{</string>
					<key>end</key>
					<string>\}</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.coffee</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>jsx</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#jsx-tag</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#jsx-end-tag</string>
				</dict>
			</array>
		</dict>
		<key>jsx-attribute</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?:^|\s+)([-\w.]+)\s*(=)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name.coffee</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.coffee</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>include</key>
					<string>#double_quoted_string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#single_quoted_string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#jsx-expression</string>
				</dict>
			</array>
		</dict>
		<key>jsx-end-tag</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.tag.coffee</string>
					<key>begin</key>
					<string>(&lt;/)([-\w\.]+)</string>
					<key>end</key>
					<string>(/?&gt;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.coffee</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.coffee</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>jsx-expression</key>
		<dict>
			<key>begin</key>
			<string>{</string>
			<key>end</key>
			<string>}</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#double_quoted_string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.brace.curly.coffee</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.brace.curly.coffee</string>
				</dict>
			</dict>
		</dict>
		<key>jsx-tag</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.tag.coffee</string>
					<key>begin</key>
					<string>(&lt;)([-\w\.]+)</string>
					<key>end</key>
					<string>(/?&gt;)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#jsx-attribute</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.coffee</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.coffee</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>method_calls</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.method-call.coffee</string>
					<key>begin</key>
					<string>(?:(\.)|(::))\s*([\w$]+)\s*(?=\()</string>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#arguments</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.method.period.coffee</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.prototype.coffee</string>
						</dict>
						<key>3</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#method_names</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.method-call.coffee</string>
					<key>begin</key>
					<string>(?:(\.)|(::))\s*([\w$]+)\s*(?=\s+(?!(?&lt;![\w$])(of|in|then|is|isnt|and|or|for|else|when|if|unless|by|instanceof)(?![\w$]))(?=(@|@?[\w$]+|[=-]&gt;|\-\d|\[|{|&quot;|&apos;)))</string>
					<key>end</key>
					<string>(?=\s*(?&lt;![\w$])(of|in|then|is|isnt|and|or|for|else|when|if|unless|by|instanceof)(?![\w$]))|(?=\s*(}|\]|\)|#|$))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#arguments</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.method.period.coffee</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.prototype.coffee</string>
						</dict>
						<key>3</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#method_names</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>method_names</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>support.function.event-handler.coffee</string>
					<key>match</key>
					<string>(?x)
\bon(Rowsinserted|Rowsdelete|Rowenter|Rowexit|Resize|Resizestart|Resizeend|Reset|
Readystatechange|Mouseout|Mouseover|Mousedown|Mouseup|Mousemove|
Before(cut|deactivate|unload|update|paste|print|editfocus|activate)|
Blur|Scrolltop|Submit|Select|Selectstart|Selectionchange|Hover|Help|
Change|Contextmenu|Controlselect|Cut|Cellchange|Clock|Close|Deactivate|
Datasetchanged|Datasetcomplete|Dataavailable|Drop|Drag|Dragstart|Dragover|
Dragdrop|Dragenter|Dragend|Dragleave|Dblclick|Unload|Paste|Propertychange|Error|
Errorupdate|Keydown|Keyup|Keypress|Focus|Load|Activate|Afterupdate|Afterprint|Abort)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>support.function.coffee</string>
					<key>match</key>
					<string>(?x)
\b(shift|showModelessDialog|showModalDialog|showHelp|scroll|scrollX|scrollByPages|
scrollByLines|scrollY|scrollTo|stop|strike|sizeToContent|sidebar|signText|sort|
sup|sub|substr|substring|splice|split|send|set(Milliseconds|Seconds|Minutes|Hours|
Month|Year|FullYear|Date|UTC(Milliseconds|Seconds|Minutes|Hours|Month|FullYear|Date)|
Time|Hotkeys|Cursor|ZOptions|Active|Resizable|RequestHeader)|search|slice|
savePreferences|small|home|handleEvent|navigate|char|charCodeAt|charAt|concat|
contextual|confirm|compile|clear|captureEvents|call|createStyleSheet|createPopup|
createEventObject|to(GMTString|UTCString|String|Source|UpperCase|LowerCase|LocaleString)|
test|taint|taintEnabled|indexOf|italics|disableExternalCapture|dump|detachEvent|unshift|
untaint|unwatch|updateCommands|join|javaEnabled|pop|push|plugins.refresh|paddings|parse|
print|prompt|preference|enableExternalCapture|exec|execScript|valueOf|UTC|find|file|
fileModifiedDate|fileSize|fileCreatedDate|fileUpdatedDate|fixed|fontsize|fontcolor|
forward|fromCharCode|watch|link|load|lastIndexOf|anchor|attachEvent|atob|apply|alert|
abort|routeEvents|resize|resizeBy|resizeTo|recalc|returnValue|replace|reverse|reload|
releaseCapture|releaseEvents|go|get(Milliseconds|Seconds|Minutes|Hours|Month|Day|Year|FullYear|
Time|Date|TimezoneOffset|UTC(Milliseconds|Seconds|Minutes|Hours|Day|Month|FullYear|Date)|
Attention|Selection|ResponseHeader|AllResponseHeaders)|moveBy|moveBelow|moveTo|
moveToAbsolute|moveAbove|mergeAttributes|match|margins|btoa|big|bold|borderWidths|blink|back)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>support.function.dom.coffee</string>
					<key>match</key>
					<string>(?x)
\b(acceptNode|add|addEventListener|addTextTrack|adoptNode|after|animate|append|
appendChild|appendData|before|blur|canPlayType|captureStream|
caretPositionFromPoint|caretRangeFromPoint|checkValidity|clear|click|
cloneContents|cloneNode|cloneRange|close|closest|collapse|
compareBoundaryPoints|compareDocumentPosition|comparePoint|contains|
convertPointFromNode|convertQuadFromNode|convertRectFromNode|createAttribute|
createAttributeNS|createCaption|createCDATASection|createComment|
createContextualFragment|createDocument|createDocumentFragment|
createDocumentType|createElement|createElementNS|createEntityReference|
createEvent|createExpression|createHTMLDocument|createNodeIterator|
createNSResolver|createProcessingInstruction|createRange|createShadowRoot|
createTBody|createTextNode|createTFoot|createTHead|createTreeWalker|delete|
deleteCaption|deleteCell|deleteContents|deleteData|deleteRow|deleteTFoot|
deleteTHead|detach|disconnect|dispatchEvent|elementFromPoint|elementsFromPoint|
enableStyleSheetsForSet|entries|evaluate|execCommand|exitFullscreen|
exitPointerLock|expand|extractContents|fastSeek|firstChild|focus|forEach|get|
getAll|getAnimations|getAttribute|getAttributeNames|getAttributeNode|
getAttributeNodeNS|getAttributeNS|getBoundingClientRect|getBoxQuads|
getClientRects|getContext|getDestinationInsertionPoints|getElementById|
getElementsByClassName|getElementsByName|getElementsByTagName|
getElementsByTagNameNS|getItem|getNamedItem|getSelection|getStartDate|
getVideoPlaybackQuality|has|hasAttribute|hasAttributeNS|hasAttributes|
hasChildNodes|hasFeature|hasFocus|importNode|initEvent|insertAdjacentElement|
insertAdjacentHTML|insertAdjacentText|insertBefore|insertCell|insertData|
insertNode|insertRow|intersectsNode|isDefaultNamespace|isEqualNode|
isPointInRange|isSameNode|item|key|keys|lastChild|load|lookupNamespaceURI|
lookupPrefix|matches|move|moveAttribute|moveAttributeNode|moveChild|
moveNamedItem|namedItem|nextNode|nextSibling|normalize|observe|open|
parentNode|pause|play|postMessage|prepend|preventDefault|previousNode|
previousSibling|probablySupportsContext|queryCommandEnabled|
queryCommandIndeterm|queryCommandState|queryCommandSupported|queryCommandValue|
querySelector|querySelectorAll|registerContentHandler|registerElement|
registerProtocolHandler|releaseCapture|releaseEvents|remove|removeAttribute|
removeAttributeNode|removeAttributeNS|removeChild|removeEventListener|
removeItem|replace|replaceChild|replaceData|replaceWith|reportValidity|
requestFullscreen|requestPointerLock|reset|scroll|scrollBy|scrollIntoView|
scrollTo|seekToNextFrame|select|selectNode|selectNodeContents|set|setAttribute|
setAttributeNode|setAttributeNodeNS|setAttributeNS|setCapture|
setCustomValidity|setEnd|setEndAfter|setEndBefore|setItem|setNamedItem|
setRangeText|setSelectionRange|setSinkId|setStart|setStartAfter|setStartBefore|
slice|splitText|stepDown|stepUp|stopImmediatePropagation|stopPropagation|
submit|substringData|supports|surroundContents|takeRecords|terminate|toBlob|
toDataURL|toggle|toString|values|write|writeln)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>entity.name.function.coffee</string>
					<key>match</key>
					<string>[a-zA-Z_$][\w$]*</string>
				</dict>
				<dict>
					<key>name</key>
					<string>invalid.illegal.identifier.coffee</string>
					<key>match</key>
					<string>\d[\w$]*</string>
				</dict>
			</array>
		</dict>
		<key>numbers</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.numeric.hex.coffee</string>
					<key>match</key>
					<string>\b(?&lt;!\$)0(x|X)[0-9a-fA-F]+\b(?!\$)</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.numeric.binary.coffee</string>
					<key>match</key>
					<string>\b(?&lt;!\$)0(b|B)[01]+\b(?!\$)</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.numeric.octal.coffee</string>
					<key>match</key>
					<string>\b(?&lt;!\$)0(o|O)?[0-7]+\b(?!\$)</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)
(?&lt;!\$)(?:
  (?:\b[0-9]+(\.)[0-9]+[eE][+-]?[0-9]+\b)| # 1.1E+3
  (?:\b[0-9]+(\.)[eE][+-]?[0-9]+\b)|       # 1.E+3
  (?:\B(\.)[0-9]+[eE][+-]?[0-9]+\b)|       # .1E+3
  (?:\b[0-9]+[eE][+-]?[0-9]+\b)|            # 1E+3
  (?:\b[0-9]+(\.)[0-9]+\b)|                # 1.1
  (?:\b[0-9]+(?=\.{2,3}))|                  # 1 followed by a slice
  (?:\b[0-9]+(\.)\B)|                      # 1.
  (?:\B(\.)[0-9]+\b)|                      # .1
  (?:\b[0-9]+\b(?!\.))                     # 1
)(?!\$)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.decimal.coffee</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.decimal.period.coffee</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.decimal.period.coffee</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.decimal.period.coffee</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.decimal.period.coffee</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.decimal.period.coffee</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.decimal.period.coffee</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>objects</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.other.object.coffee</string>
					<key>match</key>
					<string>[A-Z][A-Z0-9_$]*(?=\s*\??(\.\s*[a-zA-Z_$]\w*|::))</string>
				</dict>
				<dict>
					<key>name</key>
					<string>variable.other.object.coffee</string>
					<key>match</key>
					<string>[a-zA-Z_$][\w$]*(?=\s*\??(\.\s*[a-zA-Z_$]\w*|::))</string>
				</dict>
			</array>
		</dict>
		<key>operators</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?:([a-zA-Z$_][\w$]*)?\s+|(?&lt;![\w$]))(and=|or=)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.assignment.coffee</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.compound.coffee</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>([a-zA-Z$_][\w$]*)?\s*(%=|\+=|-=|\*=|&amp;&amp;=|\|\|=|\?=|(?&lt;!\()/=)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.assignment.coffee</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.compound.coffee</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>([a-zA-Z$_][\w$]*)?\s*(&amp;=|\^=|&lt;&lt;=|&gt;&gt;=|&gt;&gt;&gt;=|\|=)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.assignment.coffee</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.compound.bitwise.coffee</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.bitwise.shift.coffee</string>
					<key>match</key>
					<string>&lt;&lt;|&gt;&gt;&gt;|&gt;&gt;</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.comparison.coffee</string>
					<key>match</key>
					<string>!=|&lt;=|&gt;=|==|&lt;|&gt;</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.logical.coffee</string>
					<key>match</key>
					<string>&amp;&amp;|!|\|\|</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.bitwise.coffee</string>
					<key>match</key>
					<string>&amp;|\||\^|~</string>
				</dict>
				<dict>
					<key>match</key>
					<string>([a-zA-Z$_][\w$]*)?\s*(=|:(?!:))(?![&gt;=])</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.assignment.coffee</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.coffee</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.decrement.coffee</string>
					<key>match</key>
					<string>--</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.increment.coffee</string>
					<key>match</key>
					<string>\+\+</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.splat.coffee</string>
					<key>match</key>
					<string>\.\.\.</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.existential.coffee</string>
					<key>match</key>
					<string>\?</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.coffee</string>
					<key>match</key>
					<string>%|\*|/|-|\+</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)
\b(?&lt;![\.\$])
(?:
  (and|or|not) # logical
  |
  (is|isnt) # comparison
)
(?!\s*:)\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.logical.coffee</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.comparison.coffee</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>properties</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?:(\.)|(::))\s*([A-Z][A-Z0-9_$]*\b\$*)(?=\s*\??(\.\s*[a-zA-Z_$]\w*|::))</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.property.period.coffee</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.prototype.coffee</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.other.object.property.coffee</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>(?:(\.)|(::))\s*(\$*[a-zA-Z_$][\w$]*)(?=\s*\??(\.\s*[a-zA-Z_$]\w*|::))</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.property.period.coffee</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.prototype.coffee</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.other.object.property.coffee</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>(?:(\.)|(::))\s*([A-Z][A-Z0-9_$]*\b\$*)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.property.period.coffee</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.prototype.coffee</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.other.property.coffee</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>(?:(\.)|(::))\s*(\$*[a-zA-Z_$][\w$]*)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.property.period.coffee</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.prototype.coffee</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.other.property.coffee</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>(?:(\.)|(::))\s*([0-9][\w$]*)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.property.period.coffee</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.prototype.coffee</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.identifier.coffee</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>regex-character-class</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.character.character-class.regexp</string>
					<key>match</key>
					<string>\\[wWsSdD]|\.</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.numeric.regexp</string>
					<key>match</key>
					<string>\\([0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4})</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.control.regexp</string>
					<key>match</key>
					<string>\\c[A-Z]</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.backslash.regexp</string>
					<key>match</key>
					<string>\\.</string>
				</dict>
			</array>
		</dict>
		<key>single_quoted_string</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>string.quoted.single.coffee</string>
					<key>begin</key>
					<string>&apos;</string>
					<key>end</key>
					<string>&apos;</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>name</key>
							<string>constant.character.escape.backslash.coffee</string>
							<key>match</key>
							<string>(\\)(x[0-9A-Fa-f]{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.escape.backslash.coffee</string>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.coffee</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.coffee</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
	</dict>
	<key>fileTypes</key>
	<array>
		<string>cson</string>
	</array>
</dict>
</plist>
