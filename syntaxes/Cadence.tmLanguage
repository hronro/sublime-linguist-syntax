<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>scopeName</key>
	<string>source.cadence</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#expressions</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#declarations</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#keywords</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#code-block</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#composite</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#event</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>code-block</key>
		<dict>
			<key>begin</key>
			<string>\{</string>
			<key>end</key>
			<string>\}</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.scope.begin.cadence</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.scope.end.cadence</string>
				</dict>
			</dict>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.line.number-sign.cadence</string>
					<key>match</key>
					<string>\A^(#!).*$\n?</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.cadence</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>comment.block.documentation.cadence</string>
					<key>begin</key>
					<string>/\*\*(?!/)</string>
					<key>end</key>
					<string>\*/</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments-nested</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.begin.cadence</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.end.cadence</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>comment.block.documentation.playground.cadence</string>
					<key>begin</key>
					<string>/\*:</string>
					<key>end</key>
					<string>\*/</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments-nested</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.begin.cadence</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.end.cadence</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>comment.block.cadence</string>
					<key>begin</key>
					<string>/\*</string>
					<key>end</key>
					<string>\*/</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments-nested</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.begin.cadence</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.end.cadence</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>invalid.illegal.unexpected-end-of-block-comment.cadence</string>
					<key>match</key>
					<string>\*/</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(^[ \t]+)?(?=//)</string>
					<key>end</key>
					<string>(?!\G)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>name</key>
							<string>comment.line.triple-slash.documentation.cadence</string>
							<key>begin</key>
							<string>///</string>
							<key>end</key>
							<string>^</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.comment.cadence</string>
								</dict>
							</dict>
						</dict>
						<dict>
							<key>name</key>
							<string>comment.line.double-slash.documentation.cadence</string>
							<key>begin</key>
							<string>//:</string>
							<key>end</key>
							<string>^</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.comment.cadence</string>
								</dict>
							</dict>
						</dict>
						<dict>
							<key>name</key>
							<string>comment.line.double-slash.cadence</string>
							<key>begin</key>
							<string>//</string>
							<key>end</key>
							<string>^</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.comment.cadence</string>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.whitespace.comment.leading.cadence</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>composite</key>
		<dict>
			<key>name</key>
			<string>meta.definition.type.composite.cadence</string>
			<key>begin</key>
			<string>\b((?:(?:struct|resource|contract)(?:\s+interface)?)|transaction|enum)\s+([\p{L}_][\p{L}_\p{N}\p{M}]*)</string>
			<key>end</key>
			<string>(?&lt;=\})</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#conformance-clause</string>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.definition.type.body.cadence</string>
					<key>begin</key>
					<string>\{</string>
					<key>end</key>
					<string>\}</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.type.begin.cadence</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.type.end.cadence</string>
						</dict>
					</dict>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.$1.cadence</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.$1.cadence</string>
				</dict>
			</dict>
		</dict>
		<key>conformance-clause</key>
		<dict>
			<key>name</key>
			<string>meta.conformance-clause.cadence</string>
			<key>begin</key>
			<string>(:)(?=\s*\{)|(:)\s*</string>
			<key>end</key>
			<string>(?!\G)$|(?=[={}])</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\G</string>
					<key>end</key>
					<string>(?!\G)$|(?=[={}])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#type</string>
						</dict>
					</array>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.empty-conformance-clause.cadence</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.conformance-clause.cadence</string>
				</dict>
			</dict>
		</dict>
		<key>declarations</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#var-let-declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#initializer</string>
				</dict>
			</array>
		</dict>
		<key>event</key>
		<dict>
			<key>name</key>
			<string>meta.definition.type.event.cadence</string>
			<key>begin</key>
			<string>\b(event)\b\s+([\p{L}_][\p{L}_\p{N}\p{M}]*)\s*</string>
			<key>end</key>
			<string>(?&lt;=\))|$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parameter-clause</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.event.cadence</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.event.cadence</string>
				</dict>
			</dict>
		</dict>
		<key>expression-element-list</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>([\p{L}_][\p{L}_\p{N}\p{M}]*)\s*(:)</string>
					<key>end</key>
					<string>(?=[,)\]])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expressions</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.any-method.cadence</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.argument-label.cadence</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?![,)\]])(?=\S)</string>
					<key>end</key>
					<string>(?=[,)\]])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expressions</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>expressions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function-call-expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#literals</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operators</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#language-variables</string>
				</dict>
			</array>
		</dict>
		<key>function</key>
		<dict>
			<key>name</key>
			<string>meta.definition.function.cadence</string>
			<key>begin</key>
			<string>\b(fun)\b\s+([\p{L}_][\p{L}_\p{N}\p{M}]*)\s*</string>
			<key>end</key>
			<string>(?&lt;=\})|$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parameter-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function-result</string>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.definition.function.body.cadence</string>
					<key>begin</key>
					<string>(\{)</string>
					<key>end</key>
					<string>(\})</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.function.begin.cadence</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.function.end.cadence</string>
						</dict>
					</dict>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.cadence</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.cadence</string>
				</dict>
			</dict>
		</dict>
		<key>function-call-expression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.function-call.cadence</string>
					<key>begin</key>
					<string>(?!(?:set|init))([\p{L}_][\p{L}_\p{N}\p{M}]*)\s*(\()</string>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expression-element-list</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.any-method.cadence</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.begin.cadence</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.end.cadence</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>function-result</key>
		<dict>
			<key>name</key>
			<string>meta.function-result.cadence</string>
			<key>begin</key>
			<string>(?&lt;![/=\-+!*%&lt;&gt;&amp;|\^~.])(:)(?![/=\-+!*%&lt;&gt;&amp;|\^~.])\s*</string>
			<key>end</key>
			<string>(?!\G)(?=\{|;)|$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-result.cadence</string>
				</dict>
			</dict>
		</dict>
		<key>initializer</key>
		<dict>
			<key>name</key>
			<string>meta.definition.function.initializer.cadence</string>
			<key>begin</key>
			<string>(?&lt;!\.)\b(init)\s*(?=\(|&lt;)</string>
			<key>end</key>
			<string>(?&lt;=\})|$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parameter-clause</string>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.definition.function.body.cadence</string>
					<key>begin</key>
					<string>(\{)</string>
					<key>end</key>
					<string>(\})</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.function.begin.cadence</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.function.end.cadence</string>
						</dict>
					</dict>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.cadence</string>
				</dict>
			</dict>
		</dict>
		<key>keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>keyword.control.branch.cadence</string>
					<key>match</key>
					<string>(?&lt;!\.)\b(?:if|else|switch|case|default)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.control.transfer.cadence</string>
					<key>match</key>
					<string>(?&lt;!\.)\b(?:return|continue|break)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.control.loop.cadence</string>
					<key>match</key>
					<string>(?&lt;!\.)\b(?:while|for|in)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.other.cadence</string>
					<key>match</key>
					<string>(?&lt;!\.)\b(?:pre|post|prepare|execute|create|destroy|emit)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.other.declaration-specifier.accessibility.cadence</string>
					<key>match</key>
					<string>(?&lt;!\.)\b(?:private|pub(?:\(set\))?|access\((?:self|contract|account|all)\))\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>storage.type.function.cadence</string>
					<key>match</key>
					<string>\b(?:init|destroy)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.control.import.cadence</string>
					<key>match</key>
					<string>(?&lt;!\.)\b(?:import|from)\b</string>
				</dict>
			</array>
		</dict>
		<key>language-variables</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>variable.language.cadence</string>
					<key>match</key>
					<string>\b(self)\b</string>
				</dict>
			</array>
		</dict>
		<key>literals</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#literals-boolean</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#literals-numeric</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#literals-string</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.language.nil.cadence</string>
					<key>match</key>
					<string>\bnil\b</string>
				</dict>
			</array>
		</dict>
		<key>operators</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>keyword.operator.arithmetic.unary.cadence</string>
					<key>match</key>
					<string>\-</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.logical.not.cadence</string>
					<key>match</key>
					<string>!</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment.cadence</string>
					<key>match</key>
					<string>=</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.move.cadence</string>
					<key>match</key>
					<string>&lt;-</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.force-move.cadence</string>
					<key>match</key>
					<string>&lt;-!</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.arithmetic.cadence</string>
					<key>match</key>
					<string>\+|\-|\*|/</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.arithmetic.remainder.cadence</string>
					<key>match</key>
					<string>%</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.comparison.cadence</string>
					<key>match</key>
					<string>==|!=|&gt;|&lt;|&gt;=|&lt;=</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.coalescing.cadence</string>
					<key>match</key>
					<string>\?\?</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.logical.cadence</string>
					<key>match</key>
					<string>&amp;&amp;|\|\|</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.type.optional.cadence</string>
					<key>match</key>
					<string>[?!]</string>
				</dict>
			</array>
		</dict>
		<key>parameter-clause</key>
		<dict>
			<key>name</key>
			<string>meta.parameter-clause.cadence</string>
			<key>begin</key>
			<string>(\()</string>
			<key>end</key>
			<string>(\))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#parameter-list</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.cadence</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.end.cadence</string>
				</dict>
			</dict>
		</dict>
		<key>parameter-list</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>([\p{L}_][\p{L}_\p{N}\p{M}]*)\s+([\p{L}_][\p{L}_\p{N}\p{M}]*)(?=\s*:)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.cadence</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.cadence</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>(([\p{L}_][\p{L}_\p{N}\p{M}]*))(?=\s*:)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.cadence</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.cadence</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>begin</key>
					<string>:\s*(?!\s)</string>
					<key>end</key>
					<string>(?=[,)])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#type</string>
						</dict>
						<dict>
							<key>name</key>
							<string>invalid.illegal.extra-colon-in-parameter-list.cadence</string>
							<key>match</key>
							<string>:</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>type</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>name</key>
					<string>storage.type.cadence</string>
					<key>match</key>
					<string>([\p{L}_][\p{L}_\p{N}\p{M}]*)</string>
				</dict>
			</array>
		</dict>
		<key>var-let-declaration</key>
		<dict>
			<key>begin</key>
			<string>\b(var|let)\b\s+([\p{L}_][\p{L}_\p{N}\p{M}]*)</string>
			<key>end</key>
			<string>=|&lt;-|&lt;-!|$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.$1.cadence</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.$1.cadence</string>
				</dict>
			</dict>
		</dict>
		<key>comments-nested</key>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>end</key>
			<string>\*/</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments-nested</string>
				</dict>
			</array>
		</dict>
		<key>literals-boolean</key>
		<dict>
			<key>name</key>
			<string>constant.language.boolean.cadence</string>
			<key>match</key>
			<string>\b(true|false)\b</string>
		</dict>
		<key>literals-numeric</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#literals-numeric-binary</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#literals-numeric-octal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#literals-numeric-decimal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#literals-numeric-hexadecimal</string>
				</dict>
			</array>
		</dict>
		<key>literals-numeric-binary</key>
		<dict>
			<key>name</key>
			<string>constant.numeric.integer.binary.cadence</string>
			<key>match</key>
			<string>(\B\-|\b)0b[01]([_01]*[01])?\b</string>
		</dict>
		<key>literals-numeric-decimal</key>
		<dict>
			<key>name</key>
			<string>constant.numeric.integer.decimal.cadence</string>
			<key>match</key>
			<string>(\B\-|\b)[0-9]([_0-9]*[0-9])?\b</string>
		</dict>
		<key>literals-numeric-hexadecimal</key>
		<dict>
			<key>name</key>
			<string>constant.numeric.integer.hexadecimal.cadence</string>
			<key>match</key>
			<string>(\B\-|\b)0x[0-9A-Fa-f]([_0-9A-Fa-f]*[0-9A-Fa-f])?\b</string>
		</dict>
		<key>literals-numeric-octal</key>
		<dict>
			<key>name</key>
			<string>constant.numeric.integer.octal.cadence</string>
			<key>match</key>
			<string>(\B\-|\b)0o[0-7]([_0-7]*[0-7])?\b</string>
		</dict>
		<key>literals-string</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>string.quoted.double.single-line.cadence</string>
					<key>begin</key>
					<string>&quot;</string>
					<key>end</key>
					<string>&quot;</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>name</key>
							<string>invalid.illegal.returns-not-allowed.cadence</string>
							<key>match</key>
							<string>\r|\n</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#literals-string-string-guts</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.cadence</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.cadence</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>literals-string-string-guts</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.character.escape.cadence</string>
					<key>match</key>
					<string>\\[0\\tnr&quot;&apos;]</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.unicode.cadence</string>
					<key>match</key>
					<string>\\u\{[0-9a-fA-F]{1,8}\}</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>fileTypes</key>
	<array>
		<string>cdc</string>
	</array>
</dict>
</plist>
