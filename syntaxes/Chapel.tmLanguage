<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>name</key>
	<string>Chapel</string>
	<key>scopeName</key>
	<string>source.chapel</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.control.chapel</string>
			<key>match</key>
			<string>\b(align|as|atomic|begin|borrowed|break|by|catch|class|cobegin|coforall|continue|delete|dmapped|do|else|enum|except|export|extern|for|forall|if|import|index|inline|in|inout|iter|label|lambda|let|lifetime|local|module|new|noinit|on|only|otherwise|out|override|owned|pragma|private|proc|prototype|public|record|reduce|require|return|scan|select|serial|shared|sync|then|throw|throws|try|union|unmanaged|use|when|where|while|with|yield|zip)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>storage.type.chapel</string>
			<key>match</key>
			<string>\b(bool|bytes|complex|dmap|domain|imag|int|nothing|opaque|range|real|string|subdomain|tuple|uint|void)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>storage.modifier.chapel</string>
			<key>match</key>
			<string>\b(borrowed|config|const|enum|owned|param|private|public|ref|single|shared|sparse|sync|type|unmanaged|var)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.language.chapel</string>
			<key>match</key>
			<string>\b(true|false|nil)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.numeric.chapel</string>
			<key>match</key>
			<string>\b((0(b|B)[0-1]([0-1]|_)*)|(0(o|O)[0-7]([0-7]|_)*)|(0(x|X)((([0-9a-fA-F]([0-9a-fA-F]|_)*\.?([0-9a-fA-F]([0-9a-fA-F]|_)*)?)|(\.[0-9a-fA-F]([0-9a-fA-F]|_)*))((p|P)(\+|-)?[0-9]([0-9]|_)*)?))|(0(x|X)[0-9a-fA-F]([0-9a-fA-F]|_)*)|((([0-9]([0-9]|_)*\.?([0-9]([0-9]|_)*)?)|(\.[0-9]([0-9]|_)*))((e|E)(\+|-)?[0-9]([0-9]|_)*)?))\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>variable.language.chapel</string>
			<key>match</key>
			<string>\b(FileAccessMode|here|LocaleSpace|Locales|locale|numLocales|super|these|this)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>string.quoted.double.chapel</string>
			<key>begin</key>
			<string>&quot;</string>
			<key>end</key>
			<string>&quot;</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string_escaped_char</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string_placeholder</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.chapel</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.chapel</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>string.quoted.single.chapel</string>
			<key>begin</key>
			<string>&apos;</string>
			<key>end</key>
			<string>&apos;</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string_escaped_char</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string_placeholder</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.chapel</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.chapel</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.comparison.chapel</string>
			<key>match</key>
			<string>&lt;\=|&gt;\=|\=\=|&lt;|&gt;|\!\=</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.assignment.augmented.chapel</string>
			<key>match</key>
			<string>\+\=|-\=|\*\=|/\=|//\=|%\=|&amp;\=|\|\=|\^\=|&gt;&gt;\=|&lt;&lt;\=|\*\*\=</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.arithmetic.chapel</string>
			<key>match</key>
			<string>\+|\-|\*|\*\*|/|//|%|&lt;&lt;|&gt;&gt;|&amp;|\||\^|~|&lt;\=&gt;\\.\.\.</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.assignment.chapel</string>
			<key>match</key>
			<string>\=</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.others.chapel</string>
			<key>match</key>
			<string>:</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.domain.chapel</string>
			<key>match</key>
			<string>\[|\]</string>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.function.chapel</string>
			<key>begin</key>
			<string>^\s*(proc)\s+(?=[A-Za-z_][A-Za-z0-9_]*)</string>
			<key>end</key>
			<string>(\()|\s*($\n?|#.*$\n?)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>contentName</key>
					<string>entity.name.function.chapel</string>
					<key>begin</key>
					<string>(?=[A-Za-z_][A-Za-z0-9_]*)</string>
					<key>end</key>
					<string>(?![A-Za-z0-9_])</string>
				</dict>
				<dict>
					<key>contentName</key>
					<string>keyword.control.chapel</string>
					<key>match</key>
					<string>proc</string>
				</dict>
				<dict>
					<key>contentName</key>
					<string>meta.function.parameters.chapel</string>
					<key>begin</key>
					<string>(\()</string>
					<key>end</key>
					<string>(?=\)).*\{</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\b([a-zA-Z_][a-zA-Z_0-9]*)</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>variable.parameter.function.chapel</string>
								</dict>
							</dict>
						</dict>
					</array>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.chapel</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.function-call.chapel</string>
			<key>begin</key>
			<string>(?=[A-Za-z_][A-Za-z0-9_]*(?:\.[a-zA-Z_][a-zA-Z_0-9]*)*\s*\()</string>
			<key>end</key>
			<string>(\))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=[A-Za-z_][A-Za-z0-9_]*(?:\.[A-Za-z_][A-Za-z0-9_]*)*\s*\()</string>
					<key>end</key>
					<string>(?=\s*\()</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#builtin_functions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>contentName</key>
					<string>meta.function-call.arguments.chapel</string>
					<key>begin</key>
					<string>(\()</string>
					<key>end</key>
					<string>(?=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.begin.chapel</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>builtin_functions</key>
		<dict>
			<key>name</key>
			<string>support.function.builtin.chapel</string>
			<key>match</key>
			<string>(?x)\b(
              	 abs | close | exit| max | min | open | read | readln | sqrt | write | writeln
			
			)\b</string>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.block.chapel</string>
					<key>match</key>
					<string>^/\* =(\s*.*?)\s*= \*/$\n?</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.toc-list.banner.block.c</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>comment.block.chapel</string>
					<key>begin</key>
					<string>/\*</string>
					<key>end</key>
					<string>\*/</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.c</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>invalid.illegal.stray-comment-end.c</string>
					<key>match</key>
					<string>\*/.*\n</string>
				</dict>
				<dict>
					<key>name</key>
					<string>comment.line.banner.c++</string>
					<key>match</key>
					<string>^// =(\s*.*?)\s*=\s*$\n?</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.toc-list.banner.line.c</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>comment.line.double-slash.c++</string>
					<key>begin</key>
					<string>//</string>
					<key>end</key>
					<string>$\n?</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>name</key>
							<string>punctuation.separator.continuation.c++</string>
							<key>match</key>
							<string>(?&gt;\\\s*\n)</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.c</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>entity_name_function</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#illegal_names</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#generic_names</string>
				</dict>
			</array>
		</dict>
		<key>generic_names</key>
		<dict>
			<key>match</key>
			<string>[A-Za-z_][A-Za-z0-9_]*</string>
		</dict>
		<key>illegal_names</key>
		<dict>
			<key>name</key>
			<string>invalid.illegal.name.chapel</string>
			<key>match</key>
			<string>\b(align|as|atomic|begin|borrowed|break|by|bytes|catch|class|cobegin|coforall|continue|delete|dmapped|do|else|enum|except|export|extern|for|forall|if|import|index|inline|in|inout|iter|label|lambda|let|lifetime|local|module|new|noinit|nothing|on|only|otherwise|out|override|owned|pragma|private|proc|public|record|reduce|ref|require|return|scan|select|serial|shared|single|sync|then|throw|throws|try|union|unmanaged|use|var|void|when|where|while|with|yield|zip)\b</string>
		</dict>
		<key>string_escaped_char</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.character.escape.c</string>
					<key>match</key>
					<string>\\(\\|[abefnprtv&apos;&quot;?]|[0-3]\d{0,2}|[4-7]\d?|x[a-fA-F0-9]{0,2}|u[a-fA-F0-9]{0,4}|U[a-fA-F0-9]{0,8})</string>
				</dict>
				<dict>
					<key>name</key>
					<string>invalid.illegal.unknown-escape.c</string>
					<key>match</key>
					<string>\\.</string>
				</dict>
			</array>
		</dict>
		<key>string_placeholder</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.other.placeholder.c</string>
					<key>match</key>
					<string>(?x)%
    						(\d+\$)?                             # field (argument #)
    						[#0\- +&apos;]*                           # flags
    						[,;:_]?                              # separator character (AltiVec)
    						((-?\d+)|\*(-?\d+\$)?)?              # minimum field width
    						(\.((-?\d+)|\*(-?\d+\$)?)?)?         # precision
    						(hh|h|ll|l|j|t|z|q|L|vh|vl|v|hv|hl)? # length modifier
    						[diouxXDOUeEfFgGaACcSspn%]           # conversion type
    					</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>fileTypes</key>
	<array>
		<string>chpl</string>
	</array>
</dict>
</plist>
