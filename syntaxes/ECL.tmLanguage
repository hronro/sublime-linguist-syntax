<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>name</key>
	<string>ECL</string>
	<key>scopeName</key>
	<string>source.ecl</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#expression</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.class.ecl</string>
			<key>match</key>
			<string>\b(?i:(std).(file|date|str|math|metaphone|metaphone3|uni|audit|blas|system.(debug|email|job|log|thorlib|util|workunit)))\b</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>array-literal</key>
		<dict>
			<key>name</key>
			<string>meta.array.literal.ecl</string>
			<key>begin</key>
			<string>\[</string>
			<key>end</key>
			<string>\]</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.brace.square.ecl</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.brace.square.ecl</string>
				</dict>
			</dict>
		</dict>
		<key>boolean-literal</key>
		<dict>
			<key>name</key>
			<string>constant.language.boolean.ecl</string>
			<key>match</key>
			<string>\b(?i:(false|true))\b</string>
		</dict>
		<key>comment</key>
		<dict>
			<key>name</key>
			<string>comment.ecl</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment-block-doc</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment-block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment-line</string>
				</dict>
			</array>
		</dict>
		<key>comment-block</key>
		<dict>
			<key>name</key>
			<string>comment.block.ecl</string>
			<key>begin</key>
			<string>/\*</string>
			<key>end</key>
			<string>\*/</string>
		</dict>
		<key>comment-block-doc</key>
		<dict>
			<key>name</key>
			<string>comment.block.documentation.ecl</string>
			<key>begin</key>
			<string>/\*\*(?!/)</string>
			<key>end</key>
			<string>\*/</string>
		</dict>
		<key>comment-line</key>
		<dict>
			<key>name</key>
			<string>comment.line.ecl</string>
			<key>match</key>
			<string>(//).*$\n?</string>
		</dict>
		<key>decimal</key>
		<dict>
			<key>name</key>
			<string>entity.name.type.ecl</string>
			<key>match</key>
			<string>\b(?i)(u?)decimal(\d+(_\d+)?)\b</string>
		</dict>
		<key>digital-signature</key>
		<dict>
			<key>name</key>
			<string>digital-signature.ecl</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#digital-signature-header</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#digital-signature-footer</string>
				</dict>
			</array>
		</dict>
		<key>digital-signature-footer</key>
		<dict>
			<key>name</key>
			<string>keyword.control.ecl</string>
			<key>begin</key>
			<string>-----BEGIN PGP SIGNATURE-----</string>
			<key>end</key>
			<string>-----END PGP SIGNATURE-----</string>
		</dict>
		<key>digital-signature-header</key>
		<dict>
			<key>name</key>
			<string>keyword.control.ecl</string>
			<key>begin</key>
			<string>-----BEGIN PGP SIGNED MESSAGE-----</string>
			<key>end</key>
			<string>Hash: SHA512</string>
		</dict>
		<key>embedded-any</key>
		<dict>
			<key>name</key>
			<string>entity.other.ecl</string>
			<key>begin</key>
			<string>((?i:(embed)))\s*(\()</string>
			<key>end</key>
			<string>(?i:(endembed))</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.ecl</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.ecl</string>
				</dict>
			</dict>
		</dict>
		<key>embedded-cpp</key>
		<dict>
			<key>name</key>
			<string>entity.other.ecl</string>
			<key>begin</key>
			<string>(?i:(beginc))\+\+</string>
			<key>end</key>
			<string>(?i:(endc))\+\+</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.ecl</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.ecl</string>
				</dict>
			</dict>
		</dict>
		<key>embedded-single</key>
		<dict>
			<key>match</key>
			<string>(?i:(embed))\s*(\([^\)]+\));</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.ecl</string>
				</dict>
			</dict>
		</dict>
		<key>expression</key>
		<dict>
			<key>name</key>
			<string>meta.expression.ecl</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#special-structures</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#embedded-single</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#embedded-any</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#embedded-cpp</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function-call</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operators</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#logicals</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keywords-pound</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keywords-workflow</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#digital-signature</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#literal</string>
				</dict>
			</array>
		</dict>
		<key>function-call</key>
		<dict>
			<key>match</key>
			<string>([#A-Za-z_0-9]+)\s*(\()</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#functions</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#functions-pound</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#functions-hash</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#functions-hash2</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#functions-action</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#functions-workflow</string>
						</dict>
					</array>
				</dict>
			</dict>
		</dict>
		<key>functions</key>
		<dict>
			<key>name</key>
			<string>entity.name.function.ecl</string>
			<key>match</key>
			<string>\b(?i:(abs|acos|aggregate|allnodes|apply|apply|ascii|asin|assert|asstring|atan|atan2|ave|build|buildindex|case|catch|choose|choosen|choosesets|clustersize|combine|correlation|cos|cosh|count|covariance|cron|dataset|dedup|define|denormalize|deprecated|dictionary|distribute|distributed|distribution|ebcdic|enth|evaluate|evaluate|event|eventextra|eventname|exists|exp|fail|failcode|failmessage|fetch|fromunicode|fromxml|getenv|getisvalid|graph|group|hashcrc|hashmd5|having|httpcall|httpheader|if|iff|index|interface|intformat|isvalid|iterate|join|keydiff|keypatch|keyunicode|length|library|limit|ln|loadxml|local|log|loop|map|matched|matchlength|matchposition|matchtext|matchunicode|max|merge|mergejoin|min|nofold|nolocal|nonempty|normalize|nothor|notify|opt|output|parse|pattern|penalty|pipe|power|preload|process|project|pull|random|range|rank|ranked|realformat|record|recordof|regexfind|regexfindset|regexreplace|regroup|rejected|rollup|round|roundup|row|rowdiff|rule|sample|sequential|sin|sinh|sizeof|soapcall|sort|sorted|sqrt|stepped|stored|sum|table|tan|tanh|thisnode|topn|tounicode|toxml|transfer|transform|trim|truncate|typeof|ungroup|unicodeorder|use|validate|variance|wait|when|which|xmldecode|xmlencode|xmltext|xmlunicode))\b</string>
		</dict>
		<key>functions-action</key>
		<dict>
			<key>name</key>
			<string>keyword.other.ecl</string>
			<key>match</key>
			<string>\b(?i:(algorithm|cluster|escape|encrypt|expire|heading|keyed|maxlength|module|named|ordered|parallel|quote|terminator|threshold|timelimit|timeout|separator|set|skew|virtual|wild))\b</string>
		</dict>
		<key>functions-hash</key>
		<dict>
			<key>name</key>
			<string>entity.name.function.ecl</string>
			<key>match</key>
			<string>\b(?i:hash(32|64|crc)?)\b</string>
		</dict>
		<key>functions-hash2</key>
		<dict>
			<key>name</key>
			<string>entity.name.function.ecl</string>
			<key>match</key>
			<string>\b(?i:hashmd(5))\b</string>
		</dict>
		<key>functions-pound</key>
		<dict>
			<key>name</key>
			<string>keyword.other.ecl</string>
			<key>match</key>
			<string>#(?i:(append|constant|declare|demangle|end|else|elseif|error|expand|export|exportXML|for|getdatatype|if|inmodule|mangle|onwarning|option|set|stored|text|uniquename|warning|webservice|workunit))\b</string>
		</dict>
		<key>functions-workflow</key>
		<dict>
			<key>name</key>
			<string>keyword.control.ecl</string>
			<key>match</key>
			<string>\b(?i:(checkpoint|deprecated|failmessage|failure|global|onwarning|persist|priority|recovery|stored|success|when))\b</string>
		</dict>
		<key>integer</key>
		<dict>
			<key>name</key>
			<string>entity.name.type.ecl</string>
			<key>match</key>
			<string>\b(?i:(integer|unsigned))[1-8]\b</string>
		</dict>
		<key>keywords</key>
		<dict>
			<key>name</key>
			<string>keyword.other.ecl</string>
			<key>match</key>
			<string>\b(?i:(after|all|andor|any|as|atmost|before|best|between|case|compressed|compression|const|counter|csv|default|descend|distributed|encoding|end|endmacro|enum|error|except|exclusive|expand|export|exportxml|extend|fail|failcode|few|fileposition|first|flat|for|forward|from|full|group|grouped|hole|if|ifblock|import|inmodule|inner|internal|joined|keep|keyed|last|left|limit|linkcounted|literal|little_endian|load|local|locale|lookup|lzw|mangle|many|maxcount|maxlength|min skew|mofn|multiple|named|namespace|nocase|noroot|noscan|nosort|noxpath|of|onfail|only|opt|option|outer|overwrite|packed|partition|physicallength|pipe|prefetch|repeat|retry|return|right|right1|right2|rows|rowset|scan|scope|self|service|set|shared|skip|smart|soapaction|sql|stable|store|stored|success|thor|token|trim|type|unicodeorder|uniquename|unordered|unsorted|unstable|update|virtual|warning|whole|width|within|wnotrim|xml|xpath|__compressed_))\b</string>
		</dict>
		<key>keywords-pound</key>
		<dict>
			<key>name</key>
			<string>keyword.other.ecl</string>
			<key>match</key>
			<string>#(?i:(break|else|end|loop))\b</string>
		</dict>
		<key>keywords-workflow</key>
		<dict>
			<key>name</key>
			<string>keyword.control.ecl</string>
			<key>match</key>
			<string>\b(?i:(global|independent|once))\b</string>
		</dict>
		<key>literal</key>
		<dict>
			<key>name</key>
			<string>literal.ecl</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#numeric-literal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#boolean-literal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#array-literal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#self-literal</string>
				</dict>
			</array>
		</dict>
		<key>logicals</key>
		<dict>
			<key>name</key>
			<string>keyword.other.ecl</string>
			<key>match</key>
			<string>\b(?i:(and|in|not|or))\b</string>
		</dict>
		<key>numeric-literal</key>
		<dict>
			<key>name</key>
			<string>constant.numeric.ecl</string>
			<key>match</key>
			<string>\b(?&lt;=[^$])((0(x|X)[0-9a-fA-F]+)|([0-9a-fA-F]+(x|X))|(0(o|O)[0-7]+)|(0(b|B)(0|1)+)|((0|1)+(b|B))|(([0-9]+(\.[0-9]+)?))([eE]([+-]?)[0-9]+(\.[0-9]+)?)?)\b</string>
		</dict>
		<key>operators</key>
		<dict>
			<key>name</key>
			<string>keyword.operator.ecl</string>
			<key>match</key>
			<string>(&gt;|&gt;=|&lt;|&lt;=|&lt;&gt;|/|\|+|-|=)</string>
		</dict>
		<key>qstring-single</key>
		<dict>
			<key>name</key>
			<string>string.single.ecl</string>
			<key>begin</key>
			<string>&apos;</string>
			<key>end</key>
			<string>\&apos;|(?:[^\\\n]$)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string-character-escape</string>
				</dict>
			</array>
		</dict>
		<key>real</key>
		<dict>
			<key>name</key>
			<string>entity.name.type.ecl</string>
			<key>match</key>
			<string>\b(?i)real(?-i)(4|8)\b</string>
		</dict>
		<key>self-literal</key>
		<dict>
			<key>name</key>
			<string>constant.language.this.ecl</string>
			<key>match</key>
			<string>\b(?i:(self))\b</string>
		</dict>
		<key>special-structures</key>
		<dict>
			<key>name</key>
			<string>entity.name.function.ecl</string>
			<key>match</key>
			<string>\b(?i:(endmacro|function|functionmacro|interface|macro|module|record|transform))\b</string>
		</dict>
		<key>string</key>
		<dict>
			<key>name</key>
			<string>string.ecl</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#qstring-single</string>
				</dict>
			</array>
		</dict>
		<key>string-character-escape</key>
		<dict>
			<key>name</key>
			<string>constant.character.escape.ecl</string>
			<key>match</key>
			<string>\\(x[[:xdigit:]]{2}|[0-2][0-7]{,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)</string>
		</dict>
		<key>type-number</key>
		<dict>
			<key>name</key>
			<string>entity.name.type.ecl</string>
			<key>match</key>
			<string>\b(?i:(data|string|qstring|varstring|varunicode|unicode|utf8))\d+\b</string>
		</dict>
		<key>type-rest</key>
		<dict>
			<key>name</key>
			<string>entity.name.type.ecl</string>
			<key>match</key>
			<string>\b(?i:(ascii|big_endian|boolean|data|decimal|ebcdic|grouped|integer|linkcounted|pattern|qstring|real|rule|set of|streamed|string|token|udecimal|unicode|utf8|unsigned|varstring|varunicode))\b</string>
		</dict>
		<key>types</key>
		<dict>
			<key>name</key>
			<string>entity.name.type.ecl</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#real</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#decimal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#unicode</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#integer</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-number</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-rest</string>
				</dict>
			</array>
		</dict>
		<key>unicode</key>
		<dict>
			<key>name</key>
			<string>entity.name.type.ecl</string>
			<key>match</key>
			<string>\b(?i:(d|u|q|v|x))(8)?(?=&apos;.*&apos;)</string>
		</dict>
	</dict>
	<key>fileTypes</key>
	<array>
		<string>ecl</string>
		<string>eclxml</string>
	</array>
</dict>
</plist>
