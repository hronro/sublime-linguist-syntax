<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>name</key>
	<string>Fancy</string>
	<key>scopeName</key>
	<string>source.fancy</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>name</key>
			<string>meta.class.fancy</string>
			<key>match</key>
			<string>^\s*(class)\s+(([.a-zA-Z0-9_:]+(\s*(:)\s*[.a-zA-Z0-9_:\s]+)?))</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.class.fancy</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.other.constant.fancy</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.other.inherited-class.fancy</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.inheritance.fancy</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>variable.other.object.fancy</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.function.method.fancy.self</string>
			<key>begin</key>
			<string>(?x)
              (?=def\b)                                                     # an optimization to help Oniguruma fail fast
            (?&lt;=^|\s)(def)\s+                                            # the def keyword
            (self)\s+                                                       # a method definition prefix in this case self
            (([a-z]?\w+[?!]?:?)
            |===|&gt;[&gt;=]?|&lt;=&gt;|&lt;[&lt;=]?|[%&amp;`/\|]|\*\*?|=?~|[-+]@?|\[\]|=\?)\s+       # the method name
              </string>
			<key>end</key>
			<string>$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#arg_name</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.def.fancy</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.language.fancy</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.fancy</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.function.method.fancy</string>
			<key>begin</key>
			<string>(?x)
              (?=def\b)                                     # an optimization to help Oniguruma fail fast
              (?&lt;=^|\s)(def)\s+                          # the def keyword
              (((?&gt;[A-Z_-]\w*(?&gt;\s+))?)+)              # a method definition prefix
              (([a-z]?\w+[?!]?:?)
              |===|&gt;[&gt;=]?|&lt;=&gt;|&lt;[&lt;=]?|[%&amp;`/\|]|\*\*?|=?~|[-+]@?|\[\]|=\?)\s+   # the method name
              </string>
			<key>end</key>
			<string>$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#arg_name</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.def.fancy</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.other.constant.fancy</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.fancy</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.require.fancy</string>
			<key>begin</key>
			<string>\b(require:)</string>
			<key>end</key>
			<string>$|(?=#)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.special-method.fancy</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.include.fancy</string>
			<key>begin</key>
			<string>\b(include:)</string>
			<key>end</key>
			<string>$|(?=#)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.special-method.fancy</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.control.fancy</string>
			<key>match</key>
			<string>\b(return|return_local|match|case|try|catch|finally|retry)\b:?</string>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.message.fancy</string>
			<key>match</key>
			<string>([a-z_-]\w*[?!]?:)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.fancy</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.language.fancy</string>
			<key>match</key>
			<string>\b(false|nil|true)\b(?![?!])</string>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.other.symbol.fancy</string>
			<key>match</key>
			<string>&apos;([^&apos;\s\[\]\(\)\{\},]+|\[\])</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.constant.fancy</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.other.dynvar.fancy</string>
			<key>match</key>
			<string>\*[a-zA-Z0-9_-]+\*</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.constant.fancy</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.language.fancy</string>
			<key>match</key>
			<string>\b(__(FILE|LINE)__|self|super)\b(?![?!])</string>
		</dict>
		<dict>
			<key>name</key>
			<string>variable.other.constant.fancy</string>
			<key>match</key>
			<string>\b[A-Z]\w*\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>variable.other.readwrite.instance.fancy</string>
			<key>match</key>
			<string>(@)[a-zA-Z_]\w*</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.variable.fancy</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>variable.other.readwrite.class.fancy</string>
			<key>match</key>
			<string>(@@)[a-zA-Z_]\w*</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.variable.fancy</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>punctuation.section.hash.fancy</string>
			<key>match</key>
			<string>(&lt;\[|\]&gt;)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.array.fancy</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>string.regexp.classic.fancy</string>
			<key>match</key>
			<string>(/[^/]*/)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.regexp.classic.fancy</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.assignment.augmented.fancy</string>
			<key>match</key>
			<string>&lt;&lt;=|%=|&amp;=|\*=|\*\*=|\+=|\-=|\^=|\|{1,2}=|&lt;&lt;</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.comparison.fancy</string>
			<key>match</key>
			<string>&lt;=&gt;|&lt;(?!&lt;|=)|&gt;(?!&lt;|=|&gt;)|&lt;=|&gt;=|===|==|=~|!=|!~|(?&lt;=[ \t])\?</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.logical.fancy</string>
			<key>match</key>
			<string>\b(not|and|or)\b:|(?&lt;=[ \t])!+|&amp;&amp;|\|\||\^</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.arithmetic.fancy</string>
			<key>match</key>
			<string>(%|&amp;|\*\*|\*|\+|\-|/)</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.assignment.fancy</string>
			<key>match</key>
			<string>=</string>
		</dict>
		<dict>
			<key>name</key>
			<string>punctuation.separator.statement.fancy</string>
			<key>match</key>
			<string>\;</string>
		</dict>
		<dict>
			<key>name</key>
			<string>punctuation.separator.object.fancy</string>
			<key>match</key>
			<string>,</string>
		</dict>
		<dict>
			<key>name</key>
			<string>punctuation.separator.method.ruby</string>
			<key>match</key>
			<string>\s</string>
		</dict>
		<dict>
			<key>name</key>
			<string>punctuation.section.array.fancy</string>
			<key>match</key>
			<string>\[|\]</string>
		</dict>
		<dict>
			<key>name</key>
			<string>string.quoted.double.fancy</string>
			<key>begin</key>
			<string>&quot;</string>
			<key>end</key>
			<string>&quot;</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.character.escape.fancy</string>
					<key>match</key>
					<string>\\.</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>comment.line.number-sign.fancy</string>
			<key>match</key>
			<string>(?:^[ \t]+)?(#).*$\n?</string>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.numeric.fancy</string>
			<key>match</key>
			<string>\b(0[xX][0-9A-Fa-f](?&gt;_?[0-9A-Fa-f])*|\d(?&gt;_?\d)*(\.(?![^[:space:][:digit:]])(?&gt;_?\d)*)?([eE][-+]?\d(?&gt;_?\d)*)?|0[bB][01]+)\b</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>arg_name</key>
		<dict>
			<key>name</key>
			<string>entity.name.function.fancy</string>
			<key>match</key>
			<string>([a-z_-]\w*:)</string>
		</dict>
	</dict>
	<key>fileTypes</key>
	<array>
		<string>fy</string>
		<string>fancypack</string>
	</array>
</dict>
</plist>
