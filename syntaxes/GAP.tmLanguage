<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>name</key>
	<string>GAP</string>
	<key>scopeName</key>
	<string>source.gap</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>name</key>
			<string>invalid.illegal.end-statement.gap</string>
			<key>match</key>
			<string>^\s*(end|fi|od)$</string>
		</dict>
		<dict>
			<key>name</key>
			<string>comment.line.gap</string>
			<key>begin</key>
			<string>#</string>
			<key>end</key>
			<string>$\n?</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>punctuation.separator.continuation.gap</string>
					<key>match</key>
					<string>(?&gt;\\\s*\n)</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.gap</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.statement</string>
			<key>match</key>
			<string>\b(local|quit|QUIT|rec|IsBound|Unbind|TryNextMethod|Info|Assert|SaveWorkspace)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>storage.type</string>
			<key>match</key>
			<string>(\[(\*|)|(\*|)\]|\{|\})</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator</string>
			<key>match</key>
			<string>\b(in|and|or|not|mod|div)\b|\-&gt;|\+|\-|\*|\/|\^|\~|\!\.|\=|&lt;&gt;|&lt;|&gt;|\.\.|:</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.control</string>
			<key>match</key>
			<string>\b(if|then|elif|else|while|for|return|where|do|case|when|repeat|until|break|continue|fi|od|atomic|readonly|readwrite)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.function.gap</string>
			<key>begin</key>
			<string>(\b(function)\b\b([A-Za-z_][A-Za-z0-9_]*)?|(\b([A-Za-z_][A-Za-z0-9_]*)\b\s*(:=)\s*\b(function|procedure)\b))\s*\(([^\)]*)\)</string>
			<key>end</key>
			<string>\bend\b</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$base</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.function.gap</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.gap</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.gap</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>keyword.operator</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>keyword.function.gap</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>variable</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.function.gap</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.language.gap</string>
			<key>match</key>
			<string>\b(true|false|fail)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.numeric.gap</string>
			<key>match</key>
			<string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>string.quoted.double.gap</string>
			<key>begin</key>
			<string>&quot;</string>
			<key>end</key>
			<string>&quot;</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string_escaped_char</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string_placeholder</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.gap</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.gap</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>string.quoted.single.gap</string>
			<key>begin</key>
			<string>&apos;</string>
			<key>end</key>
			<string>&apos;</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string_escaped_char</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.gap</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.gap</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>string_escaped_char</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.character.escape.gap</string>
					<key>match</key>
					<string>\\(\\|[abefnprtv&apos;&quot;?]|[0-3]\d{0,2}|[4-7]\d?|x[a-fA-F0-9]{0,2})</string>
				</dict>
				<dict>
					<key>name</key>
					<string>invalid.illegal.unknown-escape.gap</string>
					<key>match</key>
					<string>\\.</string>
				</dict>
			</array>
		</dict>
		<key>string_placeholder</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.other.placeholder.c</string>
					<key>match</key>
					<string>(?x)%
    						(\d+\$)?                             # field (argument #)
    						[#0\- +&apos;]*                           # flags
    						[,;:_]?                              # separator character (AltiVec)
    						((-?\d+)|\*(-?\d+\$)?)?              # minimum field width
    						(\.((-?\d+)|\*(-?\d+\$)?)?)?         # precision
    						(hh|h|ll|l|j|t|z|q|L|vh|vl|v|hv|hl)? # length modifier
    						[diouxXDOUeEfFgGaACcSspn%]           # conversion type
    					</string>
				</dict>
				<dict>
					<key>name</key>
					<string>invalid.illegal.placeholder.c</string>
					<key>match</key>
					<string>%</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>fileTypes</key>
	<array>
		<string>g</string>
		<string>gap</string>
		<string>gd</string>
		<string>gi</string>
		<string>tst</string>
	</array>
</dict>
</plist>
