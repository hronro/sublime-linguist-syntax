<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>name</key>
	<string>harbour</string>
	<key>scopeName</key>
	<string>source.harbour</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#block_doc_comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#block_comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#line_doc_comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#line_comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#line_Ampersand_comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#line_asterisk_comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#line_note_comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#sigils</string>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.attribute.harbour</string>
			<key>begin</key>
			<string>#\!?\[</string>
			<key>end</key>
			<string>\]</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string_literal</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>string.quoted.single.harbour</string>
			<key>begin</key>
			<string>&apos;</string>
			<key>end</key>
			<string>&apos;</string>
		</dict>
		<dict>
			<key>name</key>
			<string>string.quoted.square.harbour</string>
			<key>begin</key>
			<string>(?&lt;=\s|,|\(|=)\[</string>
			<key>end</key>
			<string>\]</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#string_literal</string>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.numeric.float.harbour</string>
			<key>match</key>
			<string>\b[0-9][0-9_]*\.[0-9][0-9_]*([eE][+-][0-9_]+)?(f32|f64)?\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.numeric.float.harbour</string>
			<key>match</key>
			<string>\b[0-9][0-9_]*(\.[0-9][0-9_]*)?[eE][+-][0-9_]+(f32|f64)?\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.numeric.float.harbour</string>
			<key>match</key>
			<string>\b[0-9][0-9_]*(\.[0-9][0-9_]*)?([eE][+-][0-9_]+)?(f32|f64)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.numeric.integer.decimal.harbour</string>
			<key>match</key>
			<string>\b[0-9][0-9_]*([ui](8|16|32|64)?)?\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.numeric.integer.hexadecimal.harbour</string>
			<key>match</key>
			<string>\b0x[a-fA-F0-9_]+([ui](8|16|32|64)?)?\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.numeric.integer.octal.harbour</string>
			<key>match</key>
			<string>\b0o[0-7_]+([ui](8|16|32|64)?)?\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.numeric.integer.binary.harbour</string>
			<key>match</key>
			<string>\b0b[01_]+([ui](8|16|32|64)?)?\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>storage.modifier.static.harbour</string>
			<key>match</key>
			<string>\b(static|STATIC|THREAD STATIC)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.language.boolean.harbour</string>
			<key>match</key>
			<string>(TRUE|FALSE|\.T\.|\.F\.)</string>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.language.keyboard.harbour</string>
			<key>match</key>
			<string>(K_DOWN|K_PGDN|K_CTRL_PGDN|K_UP|K_PGUP|K_CTRL_PGUP|K_RIGHT|K_LEFT|K_HOME|K_END|K_CTRL_LEFT|K_CTRL_RIGHT|K_CTRL_HOME|K_CTRL_END)</string>
		</dict>
		<dict>
			<key>name</key>
			<string>variable.name.hungary.harbour</string>
			<key>match</key>
			<string>\b(s_)?(mtx)?[a,b,c,d,h,l,n,o,u,x][A-Z][A-Za-z0-9_]*\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>variable.name.special.harbour</string>
			<key>match</key>
			<string>\b_[a-z][A-Za-z0-9_]*|\s(i|j)\s\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.control.harbour</string>
			<key>match</key>
			<string>\b(?i)(EXIT|ELSEIF|ELSE|IF|ENDIF|FOR|EACH|IN|TO|STEP|DESCEND|NEXT|LOOP|DO CASE|ENDCASE|SWITCH|CASE|OTHERWISE|ENDSWITCH|RETURN|ENDCLASS|VAR|DATA|INIT|WHILE|DO WHILE|ENDDO|BEGIN SEQUENCE|END SEQUENCE|RECOVER USING|WITH|BREAK|PARAMETERS|END|REQUEST|ANNOUNCE)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.command.xbase.harbour</string>
			<key>match</key>
			<string>\b(?i)(GO TOP|SELECT|SAY|GET|PICTURE|SEEK|REPLACE|APPEND BLANK|USE|INDEX ON|TAG)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.command.xbase.harbour</string>
			<key>match</key>
			<string>\b(?i)(HSEEK|RREPLACE|START PRINT|ENDPRINT)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.other.harbour</string>
			<key>match</key>
			<string>\b(?i)(LOCAL|PRIVATE|PROTECTED|PUBLIC|FIELD|field|MEMVAR)\b</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#types</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#std_types</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#self</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#nil</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#lifetime</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#ref_lifetime</string>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.preprocessor.diagnostic.harbour</string>
			<key>begin</key>
			<string>^\s*#\s*(error|warning|stdout)\b</string>
			<key>end</key>
			<string>(?&lt;!\\)(?=\n)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>punctuation.separator.continuation.harbour</string>
					<key>match</key>
					<string>(?&gt;\\\s*\n)</string>
				</dict>
			</array>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.import.error.harbour</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.preprocessor.harbour.include</string>
			<key>begin</key>
			<string>^\s*#\s*(include|require)\b\s+</string>
			<key>end</key>
			<string>(?=(?://|/\*))|(?&lt;!\\)(?=\n)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>punctuation.separator.continuation.harbour</string>
					<key>match</key>
					<string>(?&gt;\\\s*\n)</string>
				</dict>
				<dict>
					<key>name</key>
					<string>string.quoted.double.include.harbour</string>
					<key>begin</key>
					<string>&quot;</string>
					<key>end</key>
					<string>&quot;</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.harbour</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.harbour</string>
						</dict>
					</dict>
				</dict>
			</array>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.import.include.harbour</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.preprocessor.harbour</string>
			<key>begin</key>
			<string>(?i)^\s*#\s*(define|defined|elif|else|if|ifdef|ifndef|endif|line|pragma|undef|command|xcommand|translate|xtranslate)\b</string>
			<key>end</key>
			<string>(?=(?://|/\*))|(?&lt;!\\)(?=\n)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>punctuation.separator.continuation.harbour</string>
					<key>match</key>
					<string>(?&gt;\\\s*\n)</string>
				</dict>
			</array>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.import.harbour</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.assignment.harbour</string>
			<key>match</key>
			<string>(:=|-\&gt;|\+=|-=)</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.comparison.harbour</string>
			<key>match</key>
			<string>(\&lt;|\&lt;=|\&gt;=|==|!=|!|\&lt;\&gt;|\&gt;|\$|\s\.OR\.\s|\s\.AND\.\s|\s\.NOT\.\s)</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.std.harbour</string>
			<key>match</key>
			<string>\b(?i)(log_write|pp|to_str|RTrim|TRIM|Trim|PadR|Padr|PADR|PadC|PadL|Space)!</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b([a-zA-Z_][a-zA-Z0-9_]*)\s*\(</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.harbour</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>match</key>
			<string>\b([a-zA-Z_][a-zA-Z0-9_]*):([a-zA-Z_][a-zA-Z0-9_]*)\s*\(</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.method.harbour</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>match</key>
			<string>\b([a-zA-Z_][a-zA-Z0-9_]*):([a-zA-Z_][a-zA-Z0-9_]*)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.name.object.harbour</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.name.member.harbour</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(?i)((?:(?:static|init|exit)\s+)?(?:func(?:t(?:i(?:o(?:n)?)?)?)?|PROC(?:E(?:D(?:U(?:R(?:E)?)?)?)?)?))\s+([a-zA-Z_][a-zA-Z0-9_]*)</string>
			<key>end</key>
			<string>[\n]</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type_params</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.fn.harbour</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.harbour</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(?i)((?:CREATE\s+)?(?:CLASS))\s+([a-zA-Z_][a-zA-Z0-9_]*)(?:\s+(INHERIT)\s+([a-zA-Z_][a-zA-Z0-9_]*))?</string>
			<key>end</key>
			<string>[\n]</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type_params</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.class.harbour</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.class.harbour</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.class.inherit.harbour</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.parent.class.harbour</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(?i)(METHOD|STATIC METHOD|METHOD PROCEDURE)\s+((?:(?:[a-zA-Z_][a-zA-Z0-9_]*):)?(?:[a-zA-Z_][a-zA-Z0-9_]*))</string>
			<key>end</key>
			<string>[\n]</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type_params</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.method.fn.harbour</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.method.harbour</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>begin</key>
			<string>:</string>
			<key>end</key>
			<string>[=;,\)\|]</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type_params</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>block_comment</key>
		<dict>
			<key>name</key>
			<string>comment.block.harbour</string>
			<key>begin</key>
			<string>/\*</string>
			<key>end</key>
			<string>\*/</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block_doc_comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block_comment</string>
				</dict>
			</array>
		</dict>
		<key>block_doc_comment</key>
		<dict>
			<key>name</key>
			<string>comment.block.documentation.harbour</string>
			<key>begin</key>
			<string>/\*[!\*][^\*]</string>
			<key>end</key>
			<string>\*/</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block_doc_comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block_comment</string>
				</dict>
			</array>
		</dict>
		<key>escaped_character</key>
		<dict>
			<key>name</key>
			<string>constant.character.escape.harbour</string>
			<key>match</key>
			<string>\\(x[0-9A-Fa-f]{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)</string>
		</dict>
		<key>line_Ampersand_comment</key>
		<dict>
			<key>name</key>
			<string>comment.line.double-slash.harbour</string>
			<key>match</key>
			<string>&amp;&amp;.*$</string>
		</dict>
		<key>line_asterisk_comment</key>
		<dict>
			<key>name</key>
			<string>comment.line.star.harbour</string>
			<key>match</key>
			<string>^\s*\*.*$</string>
		</dict>
		<key>line_comment</key>
		<dict>
			<key>name</key>
			<string>comment.line.double-slash.harbour</string>
			<key>match</key>
			<string>//.*$</string>
		</dict>
		<key>line_doc_comment</key>
		<dict>
			<key>name</key>
			<string>comment.line.documentation.harbour</string>
			<key>match</key>
			<string>//[!/][^/].*$</string>
		</dict>
		<key>line_note_comment</key>
		<dict>
			<key>name</key>
			<string>comment.line.note.harbour</string>
			<key>match</key>
			<string>^\s*NOTE\s.*$</string>
		</dict>
		<key>nil</key>
		<dict>
			<key>name</key>
			<string>variable.nil.language.harbour</string>
			<key>match</key>
			<string>\b(NIL|nil)\b</string>
		</dict>
		<key>self</key>
		<dict>
			<key>name</key>
			<string>variable.self.language.harbour</string>
			<key>match</key>
			<string>\b(Self|SELF|self)\b</string>
		</dict>
		<key>sigils</key>
		<dict>
			<key>name</key>
			<string>keyword.operator.sigil.harbou</string>
			<key>match</key>
			<string>[@]|[:]{2}|[+]{2}(?=[a-zA-Z0-9_\(\[\|\&quot;]+)</string>
		</dict>
		<key>std_types</key>
		<dict>
			<key>name</key>
			<string>support.class.std.harbour</string>
			<key>match</key>
			<string>\b(Vec|StrBuf|Path|Option|Result|Reader|Writer|Stream|Seek|Buffer|IoError|IoResult|Sender|SyncSender|Receiver|Cell|RefCell|Any)\b</string>
		</dict>
		<key>string_literal</key>
		<dict>
			<key>name</key>
			<string>string.quoted.double.harbour</string>
			<key>begin</key>
			<string>&quot;</string>
			<key>end</key>
			<string>&quot;</string>
		</dict>
	</dict>
	<key>fileTypes</key>
	<array>
		<string>hb</string>
	</array>
</dict>
</plist>
