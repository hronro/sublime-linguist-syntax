<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>name</key>
	<string>HQL</string>
	<key>scopeName</key>
	<string>source.hql</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.create.hql</string>
			<key>match</key>
			<string>(?i:^\s*(create(?:\s+or\s+replace)?(?:\s+external)?)\s+(aggregate|intersect|IF\sNOT\sEXISTS|except|USE|conversion|database|domain|function|group|partition|cluster|(unique\s+)?index|language|operator\s+class|operator|rule|schema|sequence|table|tablespace|trigger|type|user|view)\s+)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.create.hql</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.hql</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.hql</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.drop.hql</string>
			<key>match</key>
			<string>(?i:^\s*(drop)\s+(aggregate|conversion|IF\sEXISTS|database|domain|function|group|cluster|partition|index|language|operator class|operator|rule|schema|sequence|table|tablespace|trigger|type|user|view))</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.create.hql</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.hql</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.create.hql</string>
			<key>match</key>
			<string>(?i:^\s*(create)\s+(aggregate|conversion|database|domain|IF\sNOT\sEXISTS|function|group|cluster|partition|index|language|operator class|operator|rule|schema|sequence|table|tablespace|trigger|type|user|view))</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.create.hql</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.hql</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.drop.hql</string>
			<key>match</key>
			<string>(?i:\s*(drop)\s+(table)\s+(\w+)(\s+cascade)?\b)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.create.hql</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.table.hql</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.hql</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>keyword.other.cascade.hql</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.create.hql</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.table.hql</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.hql</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>keyword.other.cascade.hql</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>meta.show.hql</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.alter.hql</string>
			<key>match</key>
			<string>(?i:^\s*(alter)\s+(aggregate|conversion|database|domain|intersect|except|USE|function|group|partition|cluster|index|language|operator class|operator|rule|schema|sequence|table|tablespace|trigger|type|user|view)\s+)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.create.hql</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.table.hql</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.truncate.hql</string>
			<key>match</key>
			<string>(?i:^\s*(truncate)\s+(aggregate|conversion|database|domain|intersect|except|USE|function|group|partition|cluster|index|language|operator class|operator|rule|schema|sequence|table|tablespace|trigger|type|user|view)\s+)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.create.hql</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.table.hql</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.show.hql</string>
			<key>match</key>
			<string>(?i:^\s*(show)\s+(DATABASES|SCHEMAS|TABLES|TBLPROPERTIES|PARTITIONS|FUNCTIONS|INDEX(ES)?\sCOLUMNS|CREATE\sTABLE)\s+)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.create.hql</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.table.hql</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.describe.hql</string>
			<key>match</key>
			<string>(?i:^\s*(desc(ribe)?)\s+(DATABASE|SCHEMA)\s+)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.create.hql</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.table.hql</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>match</key>
			<string>(?xi)

				# normal stuff, capture 1
				 \b(bigint|bigserial|bit|boolean|box|bytea|cidr|circle|tablesample|explain|date|double\sprecision|inet|int|integer|line|lseg|macaddr|money|oid|path|point|polygon|real|serial|smallint|sysdate|text)\b

				# numeric suffix, capture 2 + 3i
				|\b(bit\svarying|character\s(?:varying)?|tinyint|var\schar|float|interval)\((\d+)\)

				# optional numeric suffix, capture 4 + 5i
				|\b(char|number|varchar\d?)\b(?:\((\d+)\))?

				# special case, capture 6 + 7i + 8i
				|\b(numeric|decimal)\b(?:\((\d+),(\d+)\))?

				# special case, captures 9, 10i, 11
				|\b(times)(?:\((\d+)\))(\swithoutstimeszone\b)?

				# special case, captures 12, 13, 14i, 15
				|\b(timestamp)(?:(s)\((\d+)\)(\swithoutstimeszone\b)?)?

			</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.hql</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.hql</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.hql</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>storage.type.hql</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.hql</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>storage.type.hql</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.hql</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.hql</string>
				</dict>
				<key>9</key>
				<dict>
					<key>name</key>
					<string>storage.type.hql</string>
				</dict>
				<key>10</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.hql</string>
				</dict>
				<key>11</key>
				<dict>
					<key>name</key>
					<string>storage.type.hql</string>
				</dict>
				<key>12</key>
				<dict>
					<key>name</key>
					<string>storage.type.hql</string>
				</dict>
				<key>13</key>
				<dict>
					<key>name</key>
					<string>storage.type.hql</string>
				</dict>
				<key>14</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.hql</string>
				</dict>
				<key>15</key>
				<dict>
					<key>name</key>
					<string>storage.type.hql</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>storage.modifier.hql</string>
			<key>match</key>
			<string>(?i:\b((?:primary|foreign)\s+key|references|on\sdelete(\s+cascade)?|check|constraint)\b)</string>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.numeric.hql</string>
			<key>match</key>
			<string>\b\d+\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.other.DML.hql</string>
			<key>match</key>
			<string>(?i:\b(select(\s+distinct)?|insert\s+(ignore\s+)?into|update|MAPJOIN|ROLLUP|CUBE|cast|intersect|except|between|to_date|from_unixtime|unix_timestamp|year|hour|month|day|dayofmonth|minute|second|weekofyear|datediff|from_utc_timestamp|to_utc_timestamp|if(\s+not)?\s+exists|if|USE|explode|inline|json_tuple|parse_url_tuple|posexplode|add_days|add_months|append_array|array_freq_count|array_index|assert_equals|assert_less_than|assert_true|bloom|bloom_and|bloom_contains|bloom_not|bloom_or|booking_week|cast_array|cast_map|ceiling|collect|collect_freq_count|collect_max|collect_merge_max|combine|combine_hyperloglog|combine_previous_sketch|combine_sketch|combine_unique|compute_stats|conditional_emit|convert_to_sketch|current_database|date_range|date_to_start_quarter|date_to_start_week|distributed_bloom|distributed_map|div|elt|estimated_reach|event_parser|ewah_bitmap|ewah_bitmap_and|ewah_bitmap_empty|ewah_bitmap_or|experiments|field|first_index|flatten_array|from_camel_case|from_json|geturl|greatest|group_concat|group_count|grouped_rank|hash_md5|hbase_balanced_key|hbase_batch_get|hbase_batch_put|hbase_cached_get|hbase_get|hbase_put|hll_est_cardinality|hyperloglog|index|inet_aton|inet_ntoa|initcap|intersect_array|ip2country|ip2latlon|ip2timezone|ipcountry|isnotnull|isnull|join_array|json_map|json_split|label|last_day|last_index|lcase|least|length|map_filter_keys|map_index|map_key_values|map_mode|matchpath|md5|moving_avg|multiday_count|negative|next_day|noop|noopstreaming|noopwithmap|noopwithmapstreaming|not|now|numeric_range|nvl|percentile|percentile_approx|pi|pmod|positive|pow|power|quarter|ranked_long_diff|ranked_long_sum|row_sequence|running_count|running_sum|salted_bigint|salted_bigint_key|set_difference|set_similarity|sha1|sha2|sign|sin|sketch_hashes|sketch_set|std|stddev|stddev_pop|stddev_samp|sum_array|throw_error|to_camel_case|to_json|to_unix_timestamp|truncate_array|ucase|unhex|union_hyperloglog|union_map|union_max|union_sketch|union_vector_sum|vector_add|vector_cross_product|vector_dot_product|vector_magnitude|vector_scalar_mult|windowingtablefunction|write_to_graphite|write_to_tsdb|xpath_boolean|xpath_double|xpath_float|xpath_int|xpath_long|xpath_number|xpath_short|xpath_string|date_add|date_sub|stack|java_method|rename|reflect|hash|xpath|get_json_object|size|map_keys|map_values|array_contains|sort_array|delete|from|set|where|group\sby|partition\sby|cluster\sby|clustered\sby|distribute\sby|or|like|and|union(\s+all)?|having|order\sby|limit|offset|(inner|cross)\s+join|join|straight_join|(left|right)(\s+outer)?\s+join|natural(\s+(left|right)(\s+outer)?)?\s+join)\b)</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.other.DML.hql</string>
			<key>match</key>
			<string>(?i:\b(rename\s+)?to\b)</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.other.DDL.create.II.hql</string>
			<key>match</key>
			<string>(?i:\b(on|((is\s+)not\s+)?null)\b)</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.other.DML.II.hql</string>
			<key>match</key>
			<string>(?i:\bvalues\b)</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.other.LUW.hql</string>
			<key>match</key>
			<string>(?i:\b(begin(\s+work)?|start\s+transaction|commit(\s+work)?|rollback(\s+work)?)\b)</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.other.authorization.hql</string>
			<key>match</key>
			<string>(?i:\b(grant(\swith\sgrant\soption)?|revoke)\b)</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.other.data-integrity.hql</string>
			<key>match</key>
			<string>(?i:(\bnot\s+)?\bin\b)</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.other.object-comments.hql</string>
			<key>match</key>
			<string>(?i:^\s*(comment\s+on\s+(table|column|aggregate|constraint|database|domain|function|index|operator|rule|schema|sequence|trigger|type|view))\s+.*?\s+(is)\s+)</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.other.alias.hql</string>
			<key>match</key>
			<string>(?i)\bAS\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.other.order.hql</string>
			<key>match</key>
			<string>(?i)\b(DESC|ASC)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.other.case.hql</string>
			<key>match</key>
			<string>(?i)\b(case|when|then|else|end)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.star.hql</string>
			<key>match</key>
			<string>\*</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.comparison.hql</string>
			<key>match</key>
			<string>[!&lt;&gt;]?=|&lt;&gt;|&lt;|&gt;</string>
		</dict>
		<dict>
			<key>name</key>
			<string>storage.type.II.hql</string>
			<key>match</key>
			<string>(?i)\b(COMMENT|STORED|LOAD|rlike|regexp|map|struct|named_struct|array|create_union|OVERWRITE|LOCATION|STREAMTABLE|ROW FORMAT|WINDOW|LEAD|LAG|FIRST_VALUE|LAST_VALUE|OVER|ROWS|UNBOUNDED|PRECEDING|FOLLOWING|RANK|ROW_NUMBER|DENSE_RANK|CUME_DIST|PERCENT_RANK|NTILE|COALESCE|CLUSTERED|PARTITIONED|BUCKETED)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.math.hql</string>
			<key>match</key>
			<string>-|\+|/</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.concatenator.hql</string>
			<key>match</key>
			<string>\|\|</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.scalar.hql</string>
			<key>match</key>
			<string>(?i)\b(CURRENT_(DATE|TIME(STAMP)?|USER)|(SESSION|SYSTEM)_USER)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>entity.function.name.hql</string>
			<key>match</key>
			<string>(?i)\b(AVG|COUNT|MIN|MAX|SUM|DISTINCT|VARIANCE|var_pop|var_samp|stddev_pop|stddev_samp|covar_pop|covar_samp|corr|percentile|percentile_approx|histogram_numeric|collect_set|collect_list|ntile|round|floor|ceil|rand|exp|ln|log10|log2|log|pow|power|sqrt|bin|hex|unhex|conv|from_base|abs|pmod|sin|asin|cos|acos|tan|atan|degrees|radians|positive|negative|sign|e|pi)(?=\s*\()</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.string.hql</string>
			<key>match</key>
			<string>(?i)\b(CONCATENATE|CONVERT|LOWER|SUBSTRING|TRANSLATE|TRIM|UPPER|ascii|base64|concat|context_ngrams|histogram_numeric|concat_ws|decode|encode|find_in_set|format_number|get_json_object|in_file|instr|lenght|locate|lower|lpad|ltrim|ngrams|parse_url|printf|regexp_extract|regexp_replace|repeat|reverse|rpad|rtrim|sentences|space|split|str_to_map|substr|translate|trim|unbase64|upper)\b</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(\w+?)\.(\w+)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.other.database-name.hql</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.other.table-name.hql</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>include</key>
			<string>#strings</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#regexps</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^[ \t]+)?(?=--)</string>
					<key>end</key>
					<string>(?!\G)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>name</key>
							<string>comment.line.double-dash.hql</string>
							<key>begin</key>
							<string>--</string>
							<key>end</key>
							<string>\n</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.comment.hql</string>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.whitespace.comment.leading.hql</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>regexps</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>string.regexp.hql</string>
					<key>begin</key>
					<string>/(?=\S.*/)</string>
					<key>end</key>
					<string>/</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_interpolation</string>
						</dict>
						<dict>
							<key>name</key>
							<string>constant.character.escape.slash.hql</string>
							<key>match</key>
							<string>\\/</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.hql</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.hql</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>string.regexp.modr.hql</string>
					<key>begin</key>
					<string>%r\{</string>
					<key>end</key>
					<string>\}</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_interpolation</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.hql</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.hql</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>string_escape</key>
		<dict>
			<key>name</key>
			<string>constant.character.escape.hql</string>
			<key>match</key>
			<string>\\.</string>
		</dict>
		<key>string_interpolation</key>
		<dict>
			<key>name</key>
			<string>string.interpolated.hql</string>
			<key>match</key>
			<string>(#\{)([^\}]*)(\})</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.hql</string>
				</dict>
			</dict>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>string.quoted.single.hql</string>
					<key>match</key>
					<string>(&apos;)[^&apos;\\]*(&apos;)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.hql</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.hql</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>string.quoted.single.hql</string>
					<key>begin</key>
					<string>&apos;</string>
					<key>end</key>
					<string>&apos;</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_escape</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.hql</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.hql</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>string.quoted.other.backtick.hql</string>
					<key>match</key>
					<string>(`)[^`\\]*(`)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.hql</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.hql</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>string.quoted.other.backtick.hql</string>
					<key>begin</key>
					<string>`</string>
					<key>end</key>
					<string>`</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_escape</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.hql</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.hql</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>string.quoted.double.hql</string>
					<key>match</key>
					<string>(&quot;)[^&quot;#]*(&quot;)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.hql</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.hql</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>string.quoted.double.hql</string>
					<key>begin</key>
					<string>&quot;</string>
					<key>end</key>
					<string>&quot;</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_interpolation</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.hql</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.hql</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>string.other.quoted.brackets.hql</string>
					<key>begin</key>
					<string>%\{</string>
					<key>end</key>
					<string>\}</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_interpolation</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.hql</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.hql</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
	</dict>
	<key>fileTypes</key>
	<array>
		<string>q</string>
		<string>hql</string>
	</array>
</dict>
</plist>
