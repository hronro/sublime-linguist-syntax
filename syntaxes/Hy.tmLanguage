<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>name</key>
	<string>Hy</string>
	<key>scopeName</key>
	<string>source.hy</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#shebang</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#quoted-sexp</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#sexp</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#keyfn</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#string</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#vector</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#set</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#map</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#regexp</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#var</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#constants</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#dynamic-variables</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#metadata</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#namespace-symbol</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#symbol</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>comment</key>
		<dict>
			<key>name</key>
			<string>comment.line.semicolon.hy</string>
			<key>begin</key>
			<string>(?&lt;!\\);(;{1,3})?</string>
			<key>end</key>
			<string>$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>keyword.codetag.hy</string>
					<key>match</key>
					<string>(?&lt;=;)\s+\K(TODO|FIXME|XXX|BUG|HACK|NOTE):</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.hy</string>
				</dict>
			</dict>
		</dict>
		<key>constants</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.language.null.hy</string>
					<key>match</key>
					<string>(None)(?=(\s|\)|\]|\}))</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.language.boolean.hy</string>
					<key>match</key>
					<string>(True|False)</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.numeric.fraction.hy</string>
					<key>match</key>
					<string>(-?\d+/\d+)</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.numeric.hexadecimal.hy</string>
					<key>match</key>
					<string>(-?0[xX][0-9a-fA-F]+)</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.numeric.octal.hy</string>
					<key>match</key>
					<string>(-?0[oO][0-7]+)</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.numeric.float.hy</string>
					<key>match</key>
					<string>(-?\d+\.\d+([eE][+-]?\d+)?)</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.numeric.complex.hy</string>
					<key>match</key>
					<string>((-?\d+(\.(\d+([eE][+-]?\d+)?)?)?)[+-](\d+(\.(\d+([eE][+-]?\d+)?)?)?)?[jJ])</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.numeric.int.hy</string>
					<key>match</key>
					<string>(-?\d+)</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keyword</string>
				</dict>
			</array>
		</dict>
		<key>dynamic-variables</key>
		<dict>
			<key>name</key>
			<string>meta.symbol.dynamic.hy</string>
			<key>match</key>
			<string>\*[\w\.\-\_\:\+\=\&gt;\&lt;\!\?\d]+\*</string>
		</dict>
		<key>keyfn</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>keyword.control.hy</string>
					<key>match</key>
					<string>(?&lt;=(\s|\(|\[|\{))(break|continue)|((if|set[vx])(-[-\p{Ll}\?]*)?|(unless|when|while|[dgls]?for)(-[-\p{Ll}]*)?|cond|do|fn(/a)?|raise[\p{Ll}\-]*|try|except|finally|return|yield)(?=(\s|\)|\]|\}))</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.hy</string>
					<key>match</key>
					<string>(?&lt;=(\s|\(|\[|\{))(and|cmp|not|or|xor)(?=(\s|\)|\]|\}))</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.other.hy</string>
					<key>match</key>
					<string>^#@(?=\()|(?&lt;=(\s|\(|\[|\{))(\.\s|__\p{Ll}+__|(as)?-&gt;&gt;?|as(sert)?|async|await|def(class|n(/a)?|main|macro(/g\!|\!)?|tag)|del|doto|eval-(and|when)-compile|gensym|in|import|pys?|quasiquote|quote|require|unquote(-splice)?|with(-decorator|-gensyms|/a)?|yield-from)(?=(\s|\)|\]|\}))</string>
				</dict>
				<dict>
					<key>name</key>
					<string>storage.modifier.hy</string>
					<key>match</key>
					<string>(?&lt;=(\s|\(|\[|\{))(global|nonlocal)(?=(\s|\)|\]|\}))</string>
				</dict>
			</array>
		</dict>
		<key>keyword</key>
		<dict>
			<key>name</key>
			<string>constant.keyword.hy</string>
			<key>match</key>
			<string>(?&lt;=(\s|\(|\[|\{)):[\w\#\.\-\_\:\+\=\&gt;\&lt;\/\!\?\*]+(?=(\s|\)|\]|\}|\,))</string>
		</dict>
		<key>map</key>
		<dict>
			<key>name</key>
			<string>meta.map.hy</string>
			<key>begin</key>
			<string>(\{)</string>
			<key>end</key>
			<string>(\}(?=[\}\]\)\s]*(?:;|$)))|(\})</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.map.begin.hy</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.map.end.trailing.hy</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.map.end.hy</string>
				</dict>
			</dict>
		</dict>
		<key>metadata</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.metadata.map.hy</string>
					<key>begin</key>
					<string>(\^\{)</string>
					<key>end</key>
					<string>(\}(?=[\}\]\)\s]*(?:;|$)))|(\})</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.metadata.map.begin.hy</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.metadata.map.end.trailing.hy</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.metadata.map.end.hy</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.metadata.simple.hy</string>
					<key>begin</key>
					<string>(\^)</string>
					<key>end</key>
					<string>(\s)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#keyword</string>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>namespace-symbol</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>([\p{L}\.\-\_\+\=\&gt;\&lt;\!\?\*][\w\.\-\_\:\+\=\&gt;\&lt;\!\?\*\d]*)/</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.symbol.namespace.hy</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>quoted-sexp</key>
		<dict>
			<key>name</key>
			<string>meta.quoted-expression.hy</string>
			<key>begin</key>
			<string>([&apos;`]\()</string>
			<key>end</key>
			<string>(\))$|(\)(?=[\}\]\)\s]*(?:;|$)))|(\))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.expression.begin.hy</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.expression.end.trailing.hy</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.expression.end.trailing.hy</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.expression.end.hy</string>
				</dict>
			</dict>
		</dict>
		<key>regexp</key>
		<dict>
			<key>name</key>
			<string>string.regexp.hy</string>
			<key>begin</key>
			<string>#&quot;</string>
			<key>end</key>
			<string>&quot;</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#regexp_escaped_char</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.begin.hy</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.end.hy</string>
				</dict>
			</dict>
		</dict>
		<key>regexp_escaped_char</key>
		<dict>
			<key>name</key>
			<string>constant.character.escape.hy</string>
			<key>match</key>
			<string>\\.</string>
		</dict>
		<key>set</key>
		<dict>
			<key>name</key>
			<string>meta.set.hy</string>
			<key>begin</key>
			<string>(\#\{)</string>
			<key>end</key>
			<string>(\}(?=[\}\]\)\s]*(?:;|$)))|(\})</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.set.begin.hy</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.set.end.trailing.hy</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.set.end.hy</string>
				</dict>
			</dict>
		</dict>
		<key>sexp</key>
		<dict>
			<key>name</key>
			<string>meta.expression.hy</string>
			<key>begin</key>
			<string>(\()</string>
			<key>end</key>
			<string>(\))$|(\)(?=[\}\]\)\s]*(?:;|$)))|(\))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.definition.global.hy</string>
					<key>begin</key>
					<string>(?&lt;=\()(set[vx]|def[\w\d._:+=&gt;&lt;!?*-]*|[\w._:+=&gt;&lt;!?*-][\w\d._:+=&gt;&lt;!?*-]*/def[\w\d._:+=&gt;&lt;!?*-]*)\s+</string>
					<key>end</key>
					<string>(?=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#metadata</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#dynamic-variables</string>
						</dict>
						<dict>
							<key>name</key>
							<string>entity.global.hy</string>
							<key>match</key>
							<string>([\p{L}\.\-\_\+\=\&gt;\&lt;\!\?\*][\w\.\-\_\:\+\=\&gt;\&lt;\!\?\*\d]*)</string>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.hy</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>include</key>
					<string>#keyfn</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constants</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vector</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#map</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#set</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#sexp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=\()(.+?)(?=\s|\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.hy</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.expression.begin.hy</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.expression.end.trailing.hy</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.expression.end.trailing.hy</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.expression.end.hy</string>
				</dict>
			</dict>
		</dict>
		<key>shebang</key>
		<dict>
			<key>name</key>
			<string>comment.line.shebang.hy</string>
			<key>begin</key>
			<string>^(#!)</string>
			<key>end</key>
			<string>$</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.shebang.hy</string>
				</dict>
			</dict>
		</dict>
		<key>string</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>string.quoted.double.hy</string>
					<key>begin</key>
					<string>(?&lt;!\\)(&quot;)</string>
					<key>end</key>
					<string>(&quot;)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>name</key>
							<string>constant.character.escape.hy</string>
							<key>match</key>
							<string>\\.</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.hy</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.hy</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>string.quoted.bracket-string.hy</string>
					<key>begin</key>
					<string>(?&lt;!\\)(\#\[\[)</string>
					<key>end</key>
					<string>(\]\])</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.hy</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.hy</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>symbol</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.symbol.hy</string>
					<key>match</key>
					<string>([\p{L}\.\-\_\+\=\&gt;\&lt;\!\?\*][\w\.\-\_\:\+\=\&gt;\&lt;\!\?\*\d]*)</string>
				</dict>
			</array>
		</dict>
		<key>var</key>
		<dict>
			<key>name</key>
			<string>meta.var.hy</string>
			<key>match</key>
			<string>(?&lt;=(\s|\(|\[|\{)\#)&apos;[\w\.\-\_\:\+\=\&gt;\&lt;\/\!\?\*]+(?=(\s|\)|\]|\}))</string>
		</dict>
		<key>vector</key>
		<dict>
			<key>name</key>
			<string>meta.vector.hy</string>
			<key>begin</key>
			<string>(\[)</string>
			<key>end</key>
			<string>(\](?=[\}\]\)\s]*(?:;|$)))|(\])</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.vector.begin.hy</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.vector.end.trailing.hy</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.vector.end.hy</string>
				</dict>
			</dict>
		</dict>
	</dict>
	<key>fileTypes</key>
	<array>
		<string>hy</string>
	</array>
</dict>
</plist>
