<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>name</key>
	<string>KiCad PCB (S-expressions)</string>
	<key>scopeName</key>
	<string>source.pcb.sexp</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>name</key>
			<string>meta.expression.layers.pcb.sexp</string>
			<key>begin</key>
			<string>(\()\s*(layers)(?=\s|$|\()</string>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.expression.layer.pcb.sexp</string>
					<key>begin</key>
					<string>(\()\s*(\d+)(?:\s+|(?=$|\())</string>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\G\s*(-?(?:(?![\s\(\)])[\0-\x7F])+)</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.pcb.sexp</string>
								</dict>
							</dict>
						</dict>
						<dict>
							<key>include</key>
							<string>#shared</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.expression.begin.pcb.sexp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.integer.decimal.pcb.sexp</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.expression.end.pcb.sexp</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>include</key>
					<string>#shared</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.expression.begin.pcb.sexp</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.layers.pcb.sexp</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.expression.end.pcb.sexp</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.expression.comment.pcb.sexp</string>
			<key>contentName</key>
			<string>comment.block.expression.pcb.sexp</string>
			<key>begin</key>
			<string>(\()\s*(comment)(?=\s|$|\()</string>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>&quot;</string>
					<key>end</key>
					<string>&quot;|^|$</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#stringInnards</string>
						</dict>
					</array>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.expression.begin.pcb.sexp</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.comment.pcb.sexp</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.expression.end.pcb.sexp</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.expression.pcb.sexp</string>
			<key>begin</key>
			<string>\(</string>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\G\s*(kicad_pcb|module|page_layout|fp_lib_table)(?=\s|$|\()</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.class.pcb.sexp</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>\G\s*(string_quote)\s+(&quot;)(?=\))</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.pcb.sexp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.character.quote.pcb.sexp</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>\G\s*(-?(?:(?![\s\(\)])[\0-\x7F])+)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.pcb.sexp</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>include</key>
					<string>#shared</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.expression.begin.pcb.sexp</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.expression.end.pcb.sexp</string>
				</dict>
			</dict>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>shared</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#values</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>stringInnards</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.character.escape.pcb.sexp</string>
					<key>match</key>
					<string>\\\S</string>
				</dict>
				<dict>
					<key>name</key>
					<string>invalid.illegal.unclosed.string.pcb.sexp</string>
					<key>match</key>
					<string>\G(?:[^&quot;\\]|\\.)+(?=$)</string>
				</dict>
			</array>
		</dict>
		<key>values</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.numeric.float.decimal.pcb.sexp</string>
					<key>match</key>
					<string>[-+]?\d*\.\d+</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.numeric.integer.decimal.pcb.sexp</string>
					<key>match</key>
					<string>[-+]?\d+(?=\s|\))</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.numeric.integer.hex.pcb.sexp</string>
					<key>match</key>
					<string>0x[A-Fa-f0-9]+(?:_[A-Fa-f0-9]+)*</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.language.boolean.$1.pcb.sexp</string>
					<key>match</key>
					<string>(?&lt;=\s|\(|\))(true|false|yes|no)(?=\s|\(|\))</string>
				</dict>
				<dict>
					<key>name</key>
					<string>string.quoted.double.empty.pcb.sexp</string>
					<key>match</key>
					<string>(&quot;)(&quot;)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.pcb.sexp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.pcb.sexp</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>string.quoted.double.pcb.sexp</string>
					<key>begin</key>
					<string>&quot;</string>
					<key>end</key>
					<string>&quot;|^|$</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#stringInnards</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.pcb.sexp</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.pcb.sexp</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.embedded.source.pcb.sexp</string>
					<key>match</key>
					<string>(\${)([^\s}\(\)]+)(})</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.bracket.curly.begin.pcb.sexp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.interpolated.embedded.pcb.sexp</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.bracket.curly.end.pcb.sexp</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>variable.parameter.identifier.pcb.sexp</string>
					<key>match</key>
					<string>[^\s\(\)]+</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>fileTypes</key>
	<array>
		<string>kicad_pcb</string>
		<string>kicad_mod</string>
		<string>kicad_wks</string>
	</array>
</dict>
</plist>
