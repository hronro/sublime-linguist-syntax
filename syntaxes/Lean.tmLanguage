<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>name</key>
	<string>Lean</string>
	<key>scopeName</key>
	<string>source.lean</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.definitioncommand.lean</string>
			<key>begin</key>
			<string>\b(?&lt;!\.)(inductive|coinductive|structure|theorem|abbreviation|lemma|definition|def|class)\b\s+((\{)([^}]*)(\}))?</string>
			<key>end</key>
			<string>(?=\bwith\b|\bextends\b|:|\||\.|\(|\[|\{|⦃)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#definitionName</string>
				</dict>
				<dict>
					<key>match</key>
					<string>,</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.definitioncommand.lean</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>meta.binder.universe.lean</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.binder.universe.begin.lean</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>variable.other.constant.universe.lean</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.binder.universe.end.lean</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.definitioncommand.lean</string>
			<key>begin</key>
			<string>\b(?&lt;!\.)(example|instance)\b\s+</string>
			<key>end</key>
			<string>(?=:|\||\.|\(|\[|\{|⦃)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#definitionName</string>
				</dict>
				<dict>
					<key>match</key>
					<string>,</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.definitioncommand.lean</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.definitioncommand.lean</string>
			<key>begin</key>
			<string>\b(?&lt;!\.)(axiom|axioms|constant)\b\s+(\{[^}]*\})?</string>
			<key>end</key>
			<string>($|(?=:|\||\.|\(|\[|\{|⦃))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#definitionName</string>
				</dict>
				<dict>
					<key>match</key>
					<string>,</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.definitioncommand.lean</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>storage.modifier.lean</string>
			<key>begin</key>
			<string>\battribute\b\s*\[</string>
			<key>end</key>
			<string>\]</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expressions</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>storage.modifier.lean</string>
			<key>begin</key>
			<string>@\[</string>
			<key>end</key>
			<string>\]</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expressions</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.control.definition.modifier.lean</string>
			<key>match</key>
			<string>\b(?&lt;!\.)(private|meta|mutual|protected|noncomputable)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.other.command.lean</string>
			<key>match</key>
			<string>#print\s+(def|definition|inductive|instance|structure|axiom|axioms|class)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.other.command.lean</string>
			<key>match</key>
			<string>#(print|eval|reduce|check|help|exit|find|where)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.other.lean</string>
			<key>match</key>
			<string>\b(?&lt;!\.)(import|export|prelude|theory|definition|def|abbreviation|instance|renaming|hiding|exposing|constant|lemma|theorem|example|open|axiom|inductive|coinductive|with|structure|universe|universes|alias|precedence|reserve|postfix|prefix|infix|infixl|infixr|notation|namespace|section|local|set_option|extends|include|omit|class|classes|instances|raw|run_cmd|restate_axiom)(?!\.)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.other.lean</string>
			<key>match</key>
			<string>\b(?&lt;!\.)(variable|variables|parameter|parameters|constants)(?!\.)\b</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#expressions</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>binderName</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>variable.parameter.lean</string>
					<key>match</key>
					<string>(?![λΠΣ])[_a-zA-Zα-ωΑ-Ωϊ-ϻἀ-῾℀-⅏𝒜-𝖟](?:(?![λΠΣ])[_a-zA-Zα-ωΑ-Ωϊ-ϻἀ-῾℀-⅏𝒜-𝖟0-9&apos;ⁿ-₉ₐ-ₜᵢ-ᵪ])*</string>
				</dict>
				<dict>
					<key>contentName</key>
					<string>variable.parameter.lean</string>
					<key>begin</key>
					<string>«</string>
					<key>end</key>
					<string>»</string>
				</dict>
			</array>
		</dict>
		<key>blockComment</key>
		<dict>
			<key>name</key>
			<string>comment.block.lean</string>
			<key>begin</key>
			<string>/-</string>
			<key>end</key>
			<string>-/</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.lean.markdown</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#blockComment</string>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#dashComment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#docComment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#stringBlock</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#modDocComment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#blockComment</string>
				</dict>
			</array>
		</dict>
		<key>dashComment</key>
		<dict>
			<key>name</key>
			<string>comment.line.double-dash.lean</string>
			<key>begin</key>
			<string>(--)</string>
			<key>end</key>
			<string>$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.lean.markdown</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.lean</string>
				</dict>
			</dict>
		</dict>
		<key>definitionName</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>entity.name.function.lean</string>
					<key>match</key>
					<string>(?![λΠΣ])[_a-zA-Zα-ωΑ-Ωϊ-ϻἀ-῾℀-⅏𝒜-𝖟](?:(?![λΠΣ])[_a-zA-Zα-ωΑ-Ωϊ-ϻἀ-῾℀-⅏𝒜-𝖟0-9&apos;ⁿ-₉ₐ-ₜᵢ-ᵪ])*(\.(?![λΠΣ])[_a-zA-Zα-ωΑ-Ωϊ-ϻἀ-῾℀-⅏𝒜-𝖟](?:(?![λΠΣ])[_a-zA-Zα-ωΑ-Ωϊ-ϻἀ-῾℀-⅏𝒜-𝖟0-9&apos;ⁿ-₉ₐ-ₜᵢ-ᵪ])*)*</string>
				</dict>
				<dict>
					<key>contentName</key>
					<string>entity.name.function.lean</string>
					<key>begin</key>
					<string>«</string>
					<key>end</key>
					<string>»</string>
				</dict>
			</array>
		</dict>
		<key>docComment</key>
		<dict>
			<key>name</key>
			<string>comment.block.documentation.lean</string>
			<key>begin</key>
			<string>/--</string>
			<key>end</key>
			<string>-/</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.lean.markdown</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#blockComment</string>
				</dict>
			</array>
		</dict>
		<key>expressions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>storage.type.lean</string>
					<key>match</key>
					<string>\b(Prop|Type|Sort)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>invalid.illegal.lean</string>
					<key>match</key>
					<string>\b(sorry)\b</string>
				</dict>
				<dict>
					<key>contentName</key>
					<string>entity.name.lean</string>
					<key>begin</key>
					<string>«</string>
					<key>end</key>
					<string>»</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.control.lean</string>
					<key>match</key>
					<string>\b(?&lt;!\.)(if|then|else)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>string.quoted.double.lean</string>
					<key>begin</key>
					<string>&quot;</string>
					<key>end</key>
					<string>&quot;</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>name</key>
							<string>constant.character.escape.lean</string>
							<key>match</key>
							<string>\\[\\&quot;nt&apos;]</string>
						</dict>
						<dict>
							<key>name</key>
							<string>constant.character.escape.lean</string>
							<key>match</key>
							<string>\\x[0-9A-Fa-f][0-9A-Fa-f]</string>
						</dict>
						<dict>
							<key>name</key>
							<string>constant.character.escape.lean</string>
							<key>match</key>
							<string>\\u[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f]</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.lean</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.lean</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>string.quoted.single.lean</string>
					<key>match</key>
					<string>&apos;[^\\&apos;]&apos;</string>
				</dict>
				<dict>
					<key>name</key>
					<string>string.quoted.single.lean</string>
					<key>match</key>
					<string>&apos;(\\(x..|u....|.))&apos;</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.character.escape.lean</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>entity.name.lean</string>
					<key>match</key>
					<string>`+(?![λΠΣ])[_a-zA-Zα-ωΑ-Ωϊ-ϻἀ-῾℀-⅏𝒜-𝖟](?:(?![λΠΣ])[_a-zA-Zα-ωΑ-Ωϊ-ϻἀ-῾℀-⅏𝒜-𝖟0-9&apos;ⁿ-₉ₐ-ₜᵢ-ᵪ])*</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.numeric.lean</string>
					<key>match</key>
					<string>\b([0-9]+|0([xX][0-9a-fA-F]+))\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.other.lean</string>
					<key>match</key>
					<string>\b(?&lt;!\.)(calc|have|this|match|do|suffices|show|by|in|at|let|from|obtain|haveI)(?!\.)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.other.lean</string>
					<key>match</key>
					<string>\b(?&lt;!\.)λ</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.other.lean</string>
					<key>match</key>
					<string>\b(?&lt;!\.)(begin|end|using)(?!\.)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.parens</string>
					<key>begin</key>
					<string>\(</string>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>contentName</key>
							<string>meta.type.lean</string>
							<key>begin</key>
							<string>:</string>
							<key>end</key>
							<string>(?=\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#expressions</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.type.lean</string>
								</dict>
							</dict>
						</dict>
						<dict>
							<key>include</key>
							<string>#expressions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#dashComment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#blockComment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#stringBlock</string>
				</dict>
			</array>
		</dict>
		<key>modDocComment</key>
		<dict>
			<key>name</key>
			<string>comment.block.documentation.lean</string>
			<key>begin</key>
			<string>/-!</string>
			<key>end</key>
			<string>-/</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.lean.markdown</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#blockComment</string>
				</dict>
			</array>
		</dict>
		<key>stringBlock</key>
		<dict>
			<key>name</key>
			<string>comment.block.string.lean</string>
			<key>begin</key>
			<string>/-&quot;</string>
			<key>end</key>
			<string>&quot;-/</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.lean.markdown</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#blockComment</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>fileTypes</key>
	<array>
		<string>lean</string>
		<string>hlean</string>
	</array>
</dict>
</plist>
