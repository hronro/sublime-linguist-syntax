<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>name</key>
	<string>Logtalk</string>
	<key>scopeName</key>
	<string>source.logtalk</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>name</key>
			<string>comment.block.logtalk</string>
			<key>begin</key>
			<string>/\*</string>
			<key>end</key>
			<string>\*/</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.logtalk</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>begin</key>
			<string>(^[ \t]+)?(?=%)</string>
			<key>end</key>
			<string>(?!\G)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.line.percentage.logtalk</string>
					<key>begin</key>
					<string>%</string>
					<key>end</key>
					<string>\n</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.logtalk</string>
						</dict>
					</dict>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.whitespace.comment.leading.ruby</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>comment.line.percentage.logtalk</string>
			<key>match</key>
			<string>(%).*$\n?</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.logtalk</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>match</key>
			<string>((:-)\s(object|protocol|category|module))(?:\()([^(,)]+)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.opening.logtalk</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.storage.type.logtalk</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.logtalk</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>storage.type.closing.logtalk</string>
			<key>match</key>
			<string>(:-)\s(end_(object|protocol|category))(?=[.])</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.storage.type.logtalk</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>storage.type.relations.logtalk</string>
			<key>match</key>
			<string>\b(complements|extends|i(nstantiates|mp(orts|lements))|specializes)(?=[(])</string>
		</dict>
		<dict>
			<key>name</key>
			<string>storage.modifier.others.logtalk</string>
			<key>match</key>
			<string>(:-)\s(e(lse|ndif)|dynamic|synchronized|threaded)(?=[.])</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.storage.modifier.logtalk</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>storage.modifier.others.logtalk</string>
			<key>match</key>
			<string>(:-)\s(c(alls|oinductive)|e(lif|n(coding|sure_loaded)|xport)|i(f|n(clude|itialization|fo))|reexport|set_(logtalk|prolog)_flag|uses)(?=[(])</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.storage.modifier.logtalk</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>storage.modifier.others.logtalk</string>
			<key>match</key>
			<string>(:-)\s(alias|info|d(ynamic|iscontiguous)|m(eta_(non_terminal|predicate)|ode|ultifile)|p(ublic|r(otected|ivate))|op|use(s|_module)|synchronized)(?=[(])</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.storage.modifier.logtalk</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.message-sending.logtalk</string>
			<key>match</key>
			<string>(:|::|\^\^)</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.external-call.logtalk</string>
			<key>match</key>
			<string>([{}])</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.mode.logtalk</string>
			<key>match</key>
			<string>(\?|@)</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.comparison.term.logtalk</string>
			<key>match</key>
			<string>(@=&lt;|@&lt;|@&gt;|@&gt;=|==|\\==)</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.comparison.arithmetic.logtalk</string>
			<key>match</key>
			<string>(=&lt;|&lt;|&gt;|&gt;=|=:=|=\\=)</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.bitwise.logtalk</string>
			<key>match</key>
			<string>(&lt;&lt;|&gt;&gt;|/\\|\\/|\\)</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.evaluable.logtalk</string>
			<key>match</key>
			<string>\b(e|pi|mod|rem)\b(?![-!(^~])</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.evaluable.logtalk</string>
			<key>match</key>
			<string>(\*\*|\+|-|\*|/|//)</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.misc.logtalk</string>
			<key>match</key>
			<string>(:-|!|\\+|,|;|--&gt;|-&gt;|=|\=|\.|=\.\.|\^|\bis\b)</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.evaluable.logtalk</string>
			<key>match</key>
			<string>\b(a(bs|cos|sin|tan)|c(eiling|os)|exp|flo(at(_(integer|fractional)_part)?|or)|log|m(ax|in|od)|r(em|ound)|s(i(n|gn)|qrt)|truncate)(?=[(])</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.control.logtalk</string>
			<key>match</key>
			<string>\b(true|fail|repeat)\b(?![-!(^~])</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.control.logtalk</string>
			<key>match</key>
			<string>\b(ca(ll|tch)|ignore|throw|once)(?=[(])</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.chars-and-bytes-io.logtalk</string>
			<key>match</key>
			<string>\b((get|p(eek|ut))_(c(har|ode)|byte)|nl)(?=[(])</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.chars-and-bytes-io.logtalk</string>
			<key>match</key>
			<string>\bnl\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.atom-term-processing.logtalk</string>
			<key>match</key>
			<string>\b(atom_(length|c(hars|o(ncat|des)))|sub_atom|char_code|number_c(har|ode)s)(?=[(])</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.term-testing.logtalk</string>
			<key>match</key>
			<string>\b(var|atom(ic)?|integer|float|c(allable|ompound)|n(onvar|umber)|ground|acyclic_term)(?=[(])</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.term-comparison.logtalk</string>
			<key>match</key>
			<string>\b(compare)(?=[(])</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.term-io.logtalk</string>
			<key>match</key>
			<string>\b(read(_term)?|write(q|_(canonical|term))?|(current_)?(char_conversion|op))(?=[(])</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.term-creation-and-decomposition.logtalk</string>
			<key>match</key>
			<string>\b(arg|copy_term|functor|numbervars|term_variables)(?=[(])</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.term-unification.logtalk</string>
			<key>match</key>
			<string>\b(subsumes_term|unify_with_occurs_check)(?=[(])</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.stream-selection-and-control.logtalk</string>
			<key>match</key>
			<string>\b((se|curren)t_(in|out)put|open|close|flush_output|stream_property|at_end_of_stream|set_stream_position)(?=[(])</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.stream-selection-and-control.logtalk</string>
			<key>match</key>
			<string>\b(flush_output|at_end_of_stream)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.prolog-flags.logtalk</string>
			<key>match</key>
			<string>\b((se|curren)t_prolog_flag)(?=[(])</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.compiling-and-loading.logtalk</string>
			<key>match</key>
			<string>\b(logtalk_(compile|l(ibrary_path|oad|oad_context)))(?=[(])</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.event-handling.logtalk</string>
			<key>match</key>
			<string>\b((abolish|define)_events|current_event)(?=[(])</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.implementation-defined-hooks.logtalk</string>
			<key>match</key>
			<string>\b((curren|se)t_logtalk_flag|halt)(?=[(])</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.implementation-defined-hooks.logtalk</string>
			<key>match</key>
			<string>\b(halt)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.sorting.logtalk</string>
			<key>match</key>
			<string>\b((key)?(sort))(?=[(])</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.entity-creation-and-abolishing.logtalk</string>
			<key>match</key>
			<string>\b((c(reate|urrent)|abolish)_(object|protocol|category))(?=[(])</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.reflection.logtalk</string>
			<key>match</key>
			<string>\b((object|protocol|category)_property|co(mplements_object|nforms_to_protocol)|extends_(object|protocol|category)|imp(orts_category|lements_protocol)|(instantiat|specializ)es_class)(?=[(])</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.logtalk</string>
			<key>match</key>
			<string>\b((for|retract)all)(?=[(])</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.execution-context.logtalk</string>
			<key>match</key>
			<string>\b(parameter|se(lf|nder)|this)(?=[(])</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.database.logtalk</string>
			<key>match</key>
			<string>\b(a(bolish|ssert(a|z))|clause|retract(all)?)(?=[(])</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.all-solutions.logtalk</string>
			<key>match</key>
			<string>\b((bag|set)of|f(ind|or)all)(?=[(])</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.multi-threading.logtalk</string>
			<key>match</key>
			<string>\b(threaded(_(call|once|ignore|exit|peek|wait|notify))?)(?=[(])</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.reflection.logtalk</string>
			<key>match</key>
			<string>\b(current_predicate|predicate_property)(?=[(])</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.event-handler.logtalk</string>
			<key>match</key>
			<string>\b(before|after)(?=[(])</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.grammar-rule.logtalk</string>
			<key>match</key>
			<string>\b(expand_(goal|term)|(goal|term)_expansion|phrase)(?=[(])</string>
		</dict>
		<dict>
			<key>name</key>
			<string>string.quoted.single.logtalk</string>
			<key>begin</key>
			<string>&apos;</string>
			<key>end</key>
			<string>&apos;</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.character.escape.logtalk</string>
					<key>match</key>
					<string>\\([\\abfnrtv&quot;&apos;]|(x[a-fA-F0-9]+|[0-7]+)\\)</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.logtalk</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.logtalk</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>string.quoted.double.logtalk</string>
			<key>begin</key>
			<string>&quot;</string>
			<key>end</key>
			<string>&quot;</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.character.escape.logtalk</string>
					<key>match</key>
					<string>\\.</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.logtalk</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.logtalk</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.numeric.logtalk</string>
			<key>match</key>
			<string>\b(0b[0-1]+|0o[0-7]+|0x[0-9A-Fa-f]+)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.numeric.logtalk</string>
			<key>match</key>
			<string>\b(0&apos;.|0&apos;&apos;|0&apos;&quot;)</string>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.numeric.logtalk</string>
			<key>match</key>
			<string>\b(\d+\.?\d*((e|E)(\+|-)?\d+)?)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>variable.other.logtalk</string>
			<key>match</key>
			<string>\b([A-Z_][A-Za-z0-9_]*)\b</string>
		</dict>
	</array>
	<key>fileTypes</key>
	<array>
		<string>lgt</string>
		<string>logtalk</string>
	</array>
</dict>
</plist>
