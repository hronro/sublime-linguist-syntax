<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>name</key>
	<string>Pan Template</string>
	<key>scopeName</key>
	<string>source.pan</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#pipeline</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#list</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#compound-command</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#loop</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#function-definition</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#string</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#variable</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#heredoc</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#redirection</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#pathname</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#keyword</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#support</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#annotation</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>annotation</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.block.documentation.annotation.pan</string>
					<key>begin</key>
					<string>@(\w*){</string>
					<key>end</key>
					<string>(})</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.pan</string>
						</dict>
					</dict>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.comment.annotation.token.pan</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.comment.annotation.name.pan</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.annotation-token.pan</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>case-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.scope.case-clause.pan</string>
					<key>begin</key>
					<string>(?=\S)</string>
					<key>end</key>
					<string>;;</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>name</key>
							<string>meta.scope.case-pattern.pan</string>
							<key>begin</key>
							<string>(\(|(?=\S))</string>
							<key>end</key>
							<string>\)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>name</key>
									<string>punctuation.separator.pipe-sign.pan</string>
									<key>match</key>
									<string>\|</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#string</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#variable</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#pathname</string>
								</dict>
							</array>
							<key>captures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.case-pattern.pan</string>
								</dict>
							</dict>
						</dict>
						<dict>
							<key>name</key>
							<string>meta.scope.case-clause-body.pan</string>
							<key>begin</key>
							<string>(?&lt;=\))</string>
							<key>end</key>
							<string>(?=;;)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>$self</string>
								</dict>
							</array>
						</dict>
					</array>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.case-clause.pan</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>comment</key>
		<dict>
			<key>begin</key>
			<string>(^\s+)?(?&lt;!\S)(?=#)(?!#\{)</string>
			<key>end</key>
			<string>(?!\G)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.line.number-sign.shebang.pan</string>
					<key>begin</key>
					<string>#!</string>
					<key>end</key>
					<string>\n</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.shebang.pan</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>comment.line.number-sign.pan</string>
					<key>begin</key>
					<string>#</string>
					<key>end</key>
					<string>\n</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.pan</string>
						</dict>
					</dict>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.whitespace.comment.leading.pan</string>
				</dict>
			</dict>
		</dict>
		<key>compound-command</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.scope.logical-expression.pan</string>
					<key>begin</key>
					<string>(\[{1,2})</string>
					<key>end</key>
					<string>(\]{1,2})</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#logical-expression</string>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.logical-expression.pan</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>string.other.math.pan</string>
					<key>begin</key>
					<string>(\({2})</string>
					<key>end</key>
					<string>(\){2})</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#math</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.pan</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.pan</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.scope.subpan.pan</string>
					<key>begin</key>
					<string>(\()</string>
					<key>end</key>
					<string>(\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.subpan.pan</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.scope.group.pan</string>
					<key>begin</key>
					<string>(?&lt;=\s|^)(\{)(?=\s|$)</string>
					<key>end</key>
					<string>(?&lt;=^|;)\s*(\})</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group.pan</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>function-definition</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.function.pan</string>
					<key>begin</key>
					<string>\b(function)\s+([^\s\\]+)(?:\s*(\(\)))?</string>
					<key>end</key>
					<string>;|&amp;|$</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.pan</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.pan</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.pan</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.function.pan</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>heredoc</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>string.unquoted.heredoc.pan</string>
					<key>begin</key>
					<string>(&lt;&lt;)(&quot;|&apos;|)\\?(\w+)\2</string>
					<key>end</key>
					<string>^(\3)\b</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.pan</string>
						</dict>
					</dict>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.heredoc.pan</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.control.heredoc-token.pan</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.heredoc-token.pan</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>keyword</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>keyword.control.pan</string>
					<key>match</key>
					<string>(?&lt;!-)\b(if|else|for|foreach|while|return)\b(?!-)</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.control.import.include.pan</string>
					<key>match</key>
					<string>\b(include)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>storage.modifier.final.pan</string>
					<key>match</key>
					<string>\b(final)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>storage.modifier.bind.pan</string>
					<key>match</key>
					<string>\b(bind)\b</string>
				</dict>
			</array>
		</dict>
		<key>list</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>keyword.operator.list.pan</string>
					<key>match</key>
					<string>;|&amp;&amp;|&amp;|\|\|</string>
				</dict>
			</array>
		</dict>
		<key>logical-expression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>keyword.operator.logical.pan</string>
					<key>match</key>
					<string>&amp;&amp;|\|\||==|!=|&gt;|&gt;=|&lt;|&lt;=</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.bitwise.pan</string>
					<key>match</key>
					<string>&amp;|\|^</string>
				</dict>
			</array>
		</dict>
		<key>loop</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.scope.for-loop.pan</string>
					<key>begin</key>
					<string>\b(for)\s+(?=\({2})</string>
					<key>end</key>
					<string>\b(done)\b</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.pan</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.scope.for-in-loop.pan</string>
					<key>begin</key>
					<string>\b(for)\b\s+(.+)\s+\b(in)\b</string>
					<key>end</key>
					<string>(?&lt;![-/])\bdone\b(?![-/])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.pan</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.other.loop.pan</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#string</string>
								</dict>
							</array>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.control.pan</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.pan</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.scope.while-loop.pan</string>
					<key>begin</key>
					<string>\b(while|until)\b</string>
					<key>end</key>
					<string>\b(done)\b</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.pan</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.scope.select-block.pan</string>
					<key>begin</key>
					<string>\b(select)\s+((?:[^\s\\]|\\.)+)\b</string>
					<key>end</key>
					<string>\b(done)\b</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.pan</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.other.loop.pan</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.pan</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.scope.case-block.pan</string>
					<key>begin</key>
					<string>(?&lt;!-)\b(case)\b(?!-)</string>
					<key>end</key>
					<string>\b(esac)\b</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>name</key>
							<string>meta.scope.case-body.pan</string>
							<key>begin</key>
							<string>\b(?:in)\b</string>
							<key>end</key>
							<string>(?=\b(?:esac)\b)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#comment</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#case-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>$self</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.control.pan</string>
								</dict>
							</dict>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.pan</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.scope.if-block.pan</string>
					<key>begin</key>
					<string>(?&lt;!-)\b(if)\b(?!-|\s*=)</string>
					<key>end</key>
					<string>\b(fi)\b</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.pan</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>math</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#variable</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.arithmetic.pan</string>
					<key>match</key>
					<string>[-+*/%]</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.numeric.hex.pan</string>
					<key>match</key>
					<string>0[xX][[:xdigit:]]+</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.numeric.octal.pan</string>
					<key>match</key>
					<string>0\d+</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.numeric.other.pan</string>
					<key>match</key>
					<string>\d{1,2}#[0-9a-zA-Z@_]+</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.numeric.integer.pan</string>
					<key>match</key>
					<string>\d+</string>
				</dict>
			</array>
		</dict>
		<key>pathname</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>keyword.operator.tilde.pan</string>
					<key>match</key>
					<string>(?&lt;=\s|:|=|^)~</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.glob.pan</string>
					<key>match</key>
					<string>\*|\?</string>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.structure.extglob.pan</string>
					<key>begin</key>
					<string>([?*+@!])(\()</string>
					<key>end</key>
					<string>(\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.extglob.pan</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.extglob.pan</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.extglob.pan</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>pipeline</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>keyword.other.pan</string>
					<key>match</key>
					<string>\b(time)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.pipe.pan</string>
					<key>match</key>
					<string>[|!]</string>
				</dict>
			</array>
		</dict>
		<key>redirection</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>string.interpolated.process-substitution.pan</string>
					<key>begin</key>
					<string>[&gt;&lt;]\(</string>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.pan</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.pan</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.redirect.pan</string>
					<key>match</key>
					<string>&amp;&gt;|\d*&gt;&amp;\d*|\d*(&gt;&gt;|&gt;|&lt;)|\d*&lt;&amp;|\d*&lt;&gt;</string>
				</dict>
			</array>
		</dict>
		<key>string</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.character.escape.pan</string>
					<key>match</key>
					<string>\\.</string>
				</dict>
				<dict>
					<key>name</key>
					<string>string.quoted.single.pan</string>
					<key>begin</key>
					<string>&apos;</string>
					<key>end</key>
					<string>&apos;</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.pan</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.pan</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>string.quoted.double.pan</string>
					<key>begin</key>
					<string>\$?&quot;</string>
					<key>end</key>
					<string>&quot;</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>name</key>
							<string>constant.character.escape.pan</string>
							<key>match</key>
							<string>\\[\$`&quot;\\\n]</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.pan</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.pan</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>string.quoted.single.dollar.pan</string>
					<key>begin</key>
					<string>\$&apos;</string>
					<key>end</key>
					<string>&apos;</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>name</key>
							<string>constant.character.escape.ansi-c.pan</string>
							<key>match</key>
							<string>\\(a|b|e|f|n|r|t|v|\\|&apos;)</string>
						</dict>
						<dict>
							<key>name</key>
							<string>constant.character.escape.octal.pan</string>
							<key>match</key>
							<string>\\[0-9]{3}</string>
						</dict>
						<dict>
							<key>name</key>
							<string>constant.character.escape.hex.pan</string>
							<key>match</key>
							<string>\\x[0-9a-fA-F]{2}</string>
						</dict>
						<dict>
							<key>name</key>
							<string>constant.character.escape.control-char.pan</string>
							<key>match</key>
							<string>\\c.</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.pan</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.pan</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>support</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>support.function.pan.string</string>
					<key>match</key>
					<string>\b(file_contents|file_exists|format|index|length|match|matches|replace|splice|split|substitute|substr|to_lowercase|to_uppercase)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>support.function.pan.debugging</string>
					<key>match</key>
					<string>\b(debug|error|traceback|deprecated)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>support.function.pan.codec</string>
					<key>match</key>
					<string>\b(base64_decode|base64_encode|digest|escape|unescape)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>support.function.pan.resource</string>
					<key>match</key>
					<string>\b(append|create|first|dict|key|length|list|merge|next|prepend|splice)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>support.function.pan.type.checking</string>
					<key>match</key>
					<string>\b(is_boolean|is_defined|is_double|is_list|is_long|is_dict|is_null|is_number|is_property|is_resource|is_string)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>support.function.pan.type.conversion</string>
					<key>match</key>
					<string>\b(to_boolean|to_double|to_long|to_string|ip4_to_long|long_to_ip4)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>support.function.pan.misc</string>
					<key>match</key>
					<string>\b(clone|delete|exists|path_exists|if_exists|return|value)\b</string>
				</dict>
			</array>
		</dict>
		<key>variable</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>variable.other.pan</string>
					<key>match</key>
					<string>\b(variable)\s+(\w+)\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.var.pan</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>storage.type.class.pan</string>
					<key>match</key>
					<string>\b(type)\s+(\w+)\b</string>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.pan</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
	</dict>
	<key>fileTypes</key>
	<array>
		<string>pan</string>
	</array>
</dict>
</plist>
