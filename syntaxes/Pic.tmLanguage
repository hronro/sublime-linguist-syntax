<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>name</key>
	<string>Pic</string>
	<key>scopeName</key>
	<string>source.pic</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#binary</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#tags</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#embedded-roff</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#embedded-latex</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#main</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>attributes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.same-as.pikchr.pic</string>
					<key>match</key>
					<string>\bsame\s+as\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.$1.pic</string>
					<key>match</key>
					<string>(?x)\b (chop|cw|dashed|diameter|diam|dotted|down|height|ht|invisible |invis|left|radius|rad|right|same|up|width|wid)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.$1.pic</string>
					<key>begin</key>
					<string>\b(colou?r(?:ed)?|outlined?|shaded|fill)\b[ \t]*(?=\w)</string>
					<key>end</key>
					<string>(?=\S)|(?&lt;=\S)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>name</key>
							<string>constant.numeric.hexadecimal.hex.pikchr.pic</string>
							<key>match</key>
							<string>\G0[Xx][0-9A-Fa-f]{6}</string>
						</dict>
						<dict>
							<key>name</key>
							<string>support.constant.no-colour.pikchr.pic</string>
							<key>match</key>
							<string>(?i)\G(None|Off)\b</string>
						</dict>
						<dict>
							<key>name</key>
							<string>support.constant.colour.pikchr.pic</string>
							<key>match</key>
							<string>(?xi)\G (AliceBlue|AntiqueWhite|Aquamarine|Aqua|Azure|Beige|Bisque|Black|BlanchedAlmond|BlueViolet|Blue|Brown|BurlyWood|CadetBlue |Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenrod|DarkGreen|DarkGr[ae]y |DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y |DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|Firebrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro |GhostWhite|Goldenrod|Gold|Gr[ae]y|GreenYellow|Green|Honeydew|HotPink|IndianRed|Indigo|Ivory|Khaki|LavenderBlush|Lavender |LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenrodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon |LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|LimeGreen|Lime|Linen|Magenta|Maroon|MediumAquamarine |MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed |MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|OliveDrab|Olive|OrangeRed|Orange|Orchid |PaleGoldenrod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|RebeccaPurple |Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|Seashell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow |SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Turquoise|Violet|Wheat|WhiteSmoke|White|YellowGreen|Yellow)\b</string>
						</dict>
					</array>
					<key>applyEndPatternLast</key>
					<true />
				</dict>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.$1.pikchr.pic</string>
					<key>match</key>
					<string>\b(aligned|big|bold|fit|italic|small|(?:thickness|color|fill)(?!\s*(?:[-:+/*%=!&lt;&gt;]?=|&lt;|&gt;))|thick|thin)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.$1.dpic.pic</string>
					<key>match</key>
					<string>\b(scaled)\b</string>
				</dict>
			</array>
		</dict>
		<key>backref</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>variable.language.backreference.pic</string>
					<key>match</key>
					<string>\b(last|(?:\d*1[1-3]th|\d*0th|(?:(?!11st)\d)*1st|\d*2nd|(?:(?!13rd)\d*)3rd|\d*[4-9]th)(?:[ \t]+last)?)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.backreference.computed.pic</string>
					<key>match</key>
					<string>((&apos;)([^&apos;]*)(&apos;))(th)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.single.pic</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.pic</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>meta.expression.pic</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#main</string>
								</dict>
							</array>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.pic</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>constant.language.ordinal-suffix.pic</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>variable.language.backreference.pikchr.pic</string>
					<key>match</key>
					<string>\b(first|previous)\b</string>
				</dict>
			</array>
		</dict>
		<key>binary</key>
		<dict>
			<key>name</key>
			<string>raw.binary.data</string>
			<key>begin</key>
			<string>^(?=.*(?![\x02-\x07\f\x7F])[\x00-\x06\x{FFFD}])</string>
			<key>end</key>
			<string>(?=A)B</string>
		</dict>
		<key>boolean</key>
		<dict>
			<key>name</key>
			<string>constant.boolean.$1.dformat.pic</string>
			<key>match</key>
			<string>\b(true|false|on|off)\b</string>
		</dict>
		<key>brackets</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>end</key>
					<string>(?=\))|^(?=\.P[EF]\b)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>name</key>
							<string>variable.language.global.pikchr.pic</string>
							<key>match</key>
							<string>\b(?:color|fill|thickness)\b</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#main</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.bracket.round.pic</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>begin</key>
					<string>\[</string>
					<key>end</key>
					<string>(?=\])|^(?=\.P[EF]\b)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#main</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.bracket.square.pic</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>begin</key>
					<string>\{</string>
					<key>end</key>
					<string>(?=\})|^(?=\.P[EF]\b)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#main</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.bracket.curly.pic</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>chem</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#label</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?:(?:(double|triple|front|back)[ \t]+)?\b(bond))\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.$1.pic.chem</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.bond.pic.chem</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>(?:\b(aromatic)[ \t]+)?\b(benzene|(?:flat)?ring\d*)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.aromatic.pic.chem</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.ring.pic.chem</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>storage.modifier.direction.pic.chem</string>
					<key>match</key>
					<string>\b(pointing)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.set-size.pic.chem</string>
					<key>match</key>
					<string>\b(size)\b[ \t]*(\d+)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name.size.pic.chem</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.parameter.pic.chem</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.control.branch-point.pic.chem</string>
					<key>match</key>
					<string>\bBP\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>string.unquoted.group-name.pic.chem</string>
					<key>match</key>
					<string>(?=[A-Z])(?!BP)([\w\(\).]+)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#punctuation</string>
								</dict>
								<dict>
									<key>name</key>
									<string>punctuation.delimiter.period.full-stop.chem.pic</string>
									<key>match</key>
									<string>\.</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>end</key>
					<string>(?=\))|^(?=\.P[EF]\b|^[.&apos;]\s*cend\b)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#chem</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.bracket.round.chem.pic</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>begin</key>
					<string>\[</string>
					<key>end</key>
					<string>(?=\])|^(?=\.P[EF]\b|^[.&apos;]\s*cend\b)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#chem</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.bracket.square.chem.pic</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>begin</key>
					<string>\{</string>
					<key>end</key>
					<string>(?=\})|^(?=\.P[EF]\b|^[.&apos;]\s*cend\b)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#chem</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.bracket.curly.chem.pic</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>comment</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.line.number-sign.pic</string>
					<key>begin</key>
					<string>#</string>
					<key>end</key>
					<string>$</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.pic</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>comment.line.double-slash.non-standard.pikchr.pic</string>
					<key>begin</key>
					<string>//</string>
					<key>end</key>
					<string>$</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.pic</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>comment.block.non-standard.pikchr.pic</string>
					<key>begin</key>
					<string>/\*</string>
					<key>end</key>
					<string>\*/|^(?=\.P[EF]\b|^[.&apos;]\s*cend\b)</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.begin.pic</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.end.pic</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>dformat</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#pic-line</string>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.format.dformat.pic</string>
					<key>begin</key>
					<string>^style\b</string>
					<key>end</key>
					<string>$</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#boolean</string>
						</dict>
						<dict>
							<key>name</key>
							<string>constant.language.dformat.pic</string>
							<key>match</key>
							<string>(?x)\b
(addr|addrdelta|addrht|bitwid|charwid|fill|linedisp
|linethrutext|recht|recspread|reset|textht)\b</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#number</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name.style.dformat.pic</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.record.dformat.pic</string>
					<key>begin</key>
					<string>^\S.*$\R?</string>
					<key>end</key>
					<string>^(?=\S)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>^([ \t]+[^:\s]+:)?(?:(?&lt;=:)|[ \t]+)(\S+)\s+(.*)$</string>
							<key>captures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>markup.list.unnumbered.dformat.pic</string>
								</dict>
								<key>1</key>
								<dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#main</string>
										</dict>
									</array>
								</dict>
								<key>2</key>
								<dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>name</key>
											<string>punctuation.separator.dash.dformat.pic</string>
											<key>match</key>
											<string>-</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#number</string>
										</dict>
									</array>
								</dict>
								<key>3</key>
								<dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>contentName</key>
											<string>source.embedded.eqn.roff</string>
											<key>begin</key>
											<string>@</string>
											<key>end</key>
											<string>@</string>
											<key>patterns</key>
											<array>
												<dict>
													<key>include</key>
													<string>text.roff#eqn</string>
												</dict>
											</array>
											<key>beginCaptures</key>
											<dict>
												<key>0</key>
												<dict>
													<key>name</key>
													<string>punctuation.definition.section.begin.eqn</string>
												</dict>
											</dict>
											<key>endCaptures</key>
											<dict>
												<key>0</key>
												<dict>
													<key>name</key>
													<string>punctuation.definition.section.end.eqn</string>
												</dict>
											</dict>
										</dict>
									</array>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>markup.bold.heading.dformat.pic</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>embedded-latex</key>
		<dict>
			<key>name</key>
			<string>source.embedded.tex.pic</string>
			<key>match</key>
			<string>^(?:\\\w|%).*$</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>text.tex</string>
						</dict>
					</array>
				</dict>
			</dict>
		</dict>
		<key>embedded-roff</key>
		<dict>
			<key>begin</key>
			<string>^(?=[.&apos;][ \t]*(?:\w|\\))</string>
			<key>end</key>
			<string>(?&lt;!\\)$|(\\&quot;.*)$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>text.roff</string>
				</dict>
			</array>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>text.roff</string>
						</dict>
					</array>
				</dict>
			</dict>
		</dict>
		<key>escaped-newline</key>
		<dict>
			<key>name</key>
			<string>constant.character.escape.newline.pic</string>
			<key>begin</key>
			<string>\\$\R?</string>
			<key>end</key>
			<string>^(?:[.&apos;])?</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.escape.pic</string>
				</dict>
			</dict>
		</dict>
		<key>function-call</key>
		<dict>
			<key>contentName</key>
			<string>meta.function-call.pic</string>
			<key>begin</key>
			<string>\b(?!\d)(\w+)(?=\()</string>
			<key>end</key>
			<string>(?!\G)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.arguments.pic</string>
					<key>begin</key>
					<string>\G\(</string>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#main</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.begin.pic</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.end.pic</string>
						</dict>
					</dict>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#function-name</string>
						</dict>
					</array>
				</dict>
			</dict>
		</dict>
		<key>function-name</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>support.function.$1.pic</string>
					<key>match</key>
					<string>(?:\G|^)(atan2|cos|exp|int|log|max|min|s?rand|sin|sqrt|sprintf)$</string>
				</dict>
				<dict>
					<key>name</key>
					<string>entity.name.function.user-defined.pic</string>
					<key>match</key>
					<string>(?:\G|^)\S+</string>
				</dict>
			</array>
		</dict>
		<key>globals</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>variable.language.global.pic</string>
					<key>match</key>
					<string>(?x)\b
(arcrad|arrowhead|arrowht|arrowwid|boxht|boxwid|circlerad|dashwid
|ellipseht|ellipsewid|fillval|lineht|linewid|maxpsht|maxpswid
|moveht|movewid|scale|textht|textwid)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>variable.language.global.pikchr.pic</string>
					<key>match</key>
					<string>\b((?:left|right|top|bottom)?margin|charht|charwid|color|fill|fontscale|thickness)\b</string>
				</dict>
			</array>
		</dict>
		<key>grap</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>variable.language.process-id.pic.grap</string>
					<key>match</key>
					<string>\bpid\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.control.then.pic.grap</string>
					<key>match</key>
					<string>\bthen\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.pic.grap</string>
					<key>match</key>
					<string>\b(in|out|through)\b</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#number</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#boolean</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#punctuation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operators</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function-call</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#macros</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#pic-line</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.function.pic.grap</string>
					<key>match</key>
					<string>(?x)\b
(assignment|circle|coord|copy|draw|for|frame|graph|grid|if|label
|line|new|next|numberlist|pic|plot|print|sh|ticks?)\b</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>entity.function.name.pic.grap</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>variable.other.property.$1.pic.grap</string>
					<key>match</key>
					<string>(?x)\b
(above|arrow|below|bot|bottom|dashed|dotted|down|ht|invis
|left|log|radius|right|[lr]just|size|solid|top|up|wid|x|y)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>support.function.grap.pic</string>
					<key>match</key>
					<string>(?x)\b
(atan2|cos|exp|int|log|max|min|rand|sin|sqrt|bullet
|plus|box|star|dot|times|htick|vtick|square|delta)\b</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>end</key>
					<string>(?=\))|^(?=\.P[EF]\b|^[.&apos;]\s*G2\b)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#grap</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.bracket.round.chem.pic</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>begin</key>
					<string>\[</string>
					<key>end</key>
					<string>(?=\])|^(?=\.P[EF]\b|^[.&apos;]\s*G2\b)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#grap</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.bracket.square.chem.pic</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>begin</key>
					<string>\{</string>
					<key>end</key>
					<string>(?=\})|^(?=\.P[EF]\b|^[.&apos;]\s*G2\b)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#grap</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.bracket.curly.chem.pic</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>include</key>
					<string>#keywords</string>
				</dict>
			</array>
		</dict>
		<key>keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>keyword.control.$1.pic</string>
					<key>match</key>
					<string>\b(for|do|if|then(?=\s*\{)|else)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.$1.pic</string>
					<key>match</key>
					<string>\b(and|at|by|copy|from|reset|sh|then|thru|to|with|of(?:\s+the\s+way\s+between)?)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.$1.dpic.pic</string>
					<key>match</key>
					<string>\b(continue|exec)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.$1.pikchr.pic</string>
					<key>match</key>
					<string>\b(above|below|close|go|heading|until\s+even\s+with|vertex\s+of)\b</string>
				</dict>
			</array>
		</dict>
		<key>label</key>
		<dict>
			<key>match</key>
			<string>([A-Z][^#(&quot;\s:]*)(:)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.label.pic</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.key-value.pic</string>
				</dict>
			</dict>
		</dict>
		<key>macros</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.function.$1.pic</string>
					<key>match</key>
					<string>(define|undef)\b\s*(\w*)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.pic</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.pic</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>variable.other.positional.pic</string>
					<key>match</key>
					<string>(\$)\d+</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>begin</key>
					<string>(until)[ \t]+((&quot;)([^&quot;]+)(&quot;))\s*$\R?</string>
					<key>end</key>
					<string>^[ ]*(\4)\b</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.until.pic</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.pic</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.pic</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.pic</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.terminator.pic</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>main</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#shell-command</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#positions</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#backref</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#macros</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#number</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escaped-newline</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operators</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#brackets</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#punctuation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#primitives</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#attributes</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#globals</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function-call</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#label</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#name</string>
				</dict>
			</array>
		</dict>
		<key>name</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>variable.positional.other.pic</string>
					<key>match</key>
					<string>(\$)(?!0)\d+\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.pic</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>variable.other.user-defined.non-standard.pikchr.pic</string>
					<key>match</key>
					<string>([$@])\w+</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.pikchr.pic</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>variable.other.user-defined.pic</string>
					<key>match</key>
					<string>(?!\d)\w+\b</string>
				</dict>
			</array>
		</dict>
		<key>number</key>
		<dict>
			<key>name</key>
			<string>constant.numeric.pic</string>
			<key>match</key>
			<string>(?:(?&lt;!\d)-)?(?:\d+(?:\.(?:\d+|(?=[Ee][-+]?\d)))?)(?:[Ee][-+]?\d+)?(?:(%)|(cm|in|mm|pc|pt|px)\b)?</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.other.unit.percentage.pikchr.pic</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.other.unit.$2.pikchr.pic</string>
				</dict>
			</dict>
		</dict>
		<key>operators</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>keyword.operator.arrow.pic</string>
					<key>match</key>
					<string>&lt;-&gt;|&lt;-|-&gt;</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.arrow.unicode.pikchr.pic</string>
					<key>match</key>
					<string>←|→|↔</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.logical.boolean.pic</string>
					<key>match</key>
					<string>&amp;&amp;|\|{2}</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.comparison.relational.numeric.pic</string>
					<key>match</key>
					<string>[&lt;&gt;]=?</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.comparison.relational.boolean.pic</string>
					<key>match</key>
					<string>[!=]=</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment.compound.pic</string>
					<key>match</key>
					<string>[-+*/]=</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment.pic</string>
					<key>match</key>
					<string>:?=</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.arithmetic.pic</string>
					<key>match</key>
					<string>[-/+*%^]</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.logical.not.negation.pic</string>
					<key>match</key>
					<string>!</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.arrow.html-entity.pikchr.pic</string>
					<key>match</key>
					<string>&amp;(?:(?:left|right|leftright)arrow|[lr]arr);</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>text.html.basic#character-reference</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>pic-line</key>
		<dict>
			<key>begin</key>
			<string>^(pic)\b</string>
			<key>end</key>
			<string>$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#main</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.dformat.pic</string>
				</dict>
			</dict>
		</dict>
		<key>positions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.corner.pic</string>
					<key>match</key>
					<string>(?&lt;=\.)(?:bottom|bot|center|end|left|right|start|top|[ns][ew]|[bcelnrstw])\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>variable.language.placement.pic</string>
					<key>match</key>
					<string>(?x) \b
( (?:bottom|center|east|end|north|south|start|top|west|Here)
| (?:lower|upper) \s+ (?:left|right)
| (?:left|right) (?=\s+ of \b)
) \b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.position.pic</string>
					<key>match</key>
					<string>(?&lt;balance&gt;&lt;([^&lt;&gt;]++|\g&lt;balance&gt;)*+&gt;){0}\g&lt;balance&gt;</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>name</key>
									<string>punctuation.definition.position.bracket.angle.begin.pic</string>
									<key>match</key>
									<string>&lt;</string>
								</dict>
								<dict>
									<key>name</key>
									<string>punctuation.definition.position.bracket.angle.end.pic</string>
									<key>match</key>
									<string>&gt;</string>
								</dict>
								<dict>
									<key>name</key>
									<string>punctuation.separator.coordinates.comma.pic</string>
									<key>match</key>
									<string>,</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#main</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>primitives</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>storage.type.primitive.$1.pic</string>
					<key>match</key>
					<string>\b(box|line|arrow|circle|ellipse|arc|move|spline|print|command|plot)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>storage.type.primitive.$1.pikchr.pic</string>
					<key>match</key>
					<string>\b(oval|cylinder|file|dot|text)\b</string>
				</dict>
			</array>
		</dict>
		<key>punctuation</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>punctuation.definition.bracket.curly.pic</string>
					<key>match</key>
					<string>\}</string>
				</dict>
				<dict>
					<key>name</key>
					<string>punctuation.definition.bracket.round.pic</string>
					<key>match</key>
					<string>\)</string>
				</dict>
				<dict>
					<key>name</key>
					<string>punctuation.definition.bracket.square.pic</string>
					<key>match</key>
					<string>\]</string>
				</dict>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.statement.pic</string>
					<key>match</key>
					<string>;</string>
				</dict>
				<dict>
					<key>name</key>
					<string>punctuation.separator.comma.pic</string>
					<key>match</key>
					<string>,</string>
				</dict>
				<dict>
					<key>name</key>
					<string>punctuation.definition.bracket.angle.pic</string>
					<key>match</key>
					<string>&lt;|&gt;</string>
				</dict>
				<dict>
					<key>name</key>
					<string>punctuation.delimiter.period.full-stop.pic</string>
					<key>match</key>
					<string>\.(?!\d)</string>
				</dict>
			</array>
		</dict>
		<key>shell-braces</key>
		<dict>
			<key>name</key>
			<string>meta.scope.group.shell</string>
			<key>begin</key>
			<string>{</string>
			<key>end</key>
			<string>}</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#shell-braces</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.shell</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.group.shell.begin.shell</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.group.shell.end.shell</string>
				</dict>
			</dict>
		</dict>
		<key>shell-command</key>
		<dict>
			<key>name</key>
			<string>meta.shell-command.pic</string>
			<key>begin</key>
			<string>\b(sh)\b[ \t]*</string>
			<key>end</key>
			<string>(?!\G)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>contentName</key>
					<string>source.embedded.shell</string>
					<key>begin</key>
					<string>\G{</string>
					<key>end</key>
					<string>}</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#shell-braces</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.shell</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.balanced-text.brace.begin.pic</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.balanced-text.brace.end.pic</string>
						</dict>
					</dict>
					<key>applyEndPatternLast</key>
					<true />
				</dict>
				<dict>
					<key>contentName</key>
					<string>source.embedded.shell</string>
					<key>begin</key>
					<string>\G(.)</string>
					<key>end</key>
					<string>\1</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.shell</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.balanced-text.arbitrary-delimiter.begin.pic</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.balanced-text.arbitrary-delimiter.end.pic</string>
						</dict>
					</dict>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.$1.pic</string>
				</dict>
			</dict>
		</dict>
		<key>string</key>
		<dict>
			<key>name</key>
			<string>string.quoted.double.pic</string>
			<key>begin</key>
			<string>&quot;</string>
			<key>end</key>
			<string>&quot;</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string-escapes</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.pic</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.pic</string>
				</dict>
			</dict>
		</dict>
		<key>string-escapes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.character.escape.pic</string>
					<key>match</key>
					<string>(\\)[\\&quot;]</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.escape.pic</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>(?:[^&quot;\\]|\\[^&quot;])+</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>text.roff#escapes</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>tags</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>invalid.deprecated.function.picture.macro.roff</string>
					<key>match</key>
					<string>^([.&apos;])[ \t]*(PS)[ \t]*(&lt;)(.*)(?=$|\\&quot;)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.macro.roff</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.function.name.roff</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.filename.roff</string>
						</dict>
						<key>4</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>text.roff#params</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>contentName</key>
					<string>source.embedded.pic</string>
					<key>begin</key>
					<string>^([.&apos;])[ \t]*(PS)\b([\d \t]*(?:#.*)?)?(\\[#&quot;].*)?$</string>
					<key>end</key>
					<string>^([.&apos;])[ \t]*(P[EF])\b</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.function.begin.picture.section.macro.roff</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.macro.roff</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.function.name.roff</string>
						</dict>
						<key>3</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.pic</string>
								</dict>
							</array>
						</dict>
						<key>4</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>text.roff#escapes</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.function.end.picture.section.macro.roff</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.macro.roff</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.roff</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>contentName</key>
					<string>source.embedded.chem.pic</string>
					<key>begin</key>
					<string>^([.&apos;])[ \t]*(cstart)\b\s*(\S.*)?</string>
					<key>end</key>
					<string>^([.&apos;])[ \t]*(cend)\b</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#chem</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.function.begin.chemical.picture.section.macro.roff</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.macro.pic.chem</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.function.name.roff</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unexpected-characters.pic.chem</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.function.end.chemical.picture.section.macro.roff</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.macro.roff</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.function.name.roff</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>contentName</key>
					<string>source.embedded.dformat.pic</string>
					<key>begin</key>
					<string>^([.&apos;])[ \t]*(begin[ \t]+dformat)\b</string>
					<key>end</key>
					<string>^([.&apos;])[ \t]*(end)\b</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#dformat</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.function.begin.dformat.picture.section.macro.roff</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.macro.pic.dformat</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.function.name.roff</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.function.end.dformat.picture.section.macro.roff</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.macro.roff</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.function.name.roff</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>contentName</key>
					<string>source.embedded.grap.pic</string>
					<key>begin</key>
					<string>^([.&apos;])[ \t]*(G1)\b(\s*\d+)?(\s*\\&quot;.*$)?</string>
					<key>end</key>
					<string>^([.&apos;])[ \t]*(G2)\b</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#grap</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.function.begin.graph.picture.section.macro.roff</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.macro.pic.grap</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.function.name.roff</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.parameter.pic.grap</string>
						</dict>
						<key>4</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>text.roff#escapes</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.function.end.graph.picture.section.macro.roff</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.macro.pic.grap</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.function.name.roff</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
	</dict>
	<key>fileTypes</key>
	<array>
		<string>pic</string>
		<string>chem</string>
	</array>
</dict>
</plist>
