<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>name</key>
	<string>Raku</string>
	<key>scopeName</key>
	<string>source.raku</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>contentName</key>
			<string>comment.block.finish.raku</string>
			<key>begin</key>
			<string>^\s*(=)(finish)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment-block-syntax</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.block.finish.raku</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.block.finish.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment-block-delimited</string>
		</dict>
		<dict>
			<key>contentName</key>
			<string>comment.block.paragraph.raku</string>
			<key>begin</key>
			<string>^\s*(=)(?:(para)|(for)\s+(\w+))</string>
			<key>end</key>
			<string>(?=^\s*$|^\s*=\w+.*$)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment-block-syntax</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.block.paragraph.raku</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.block.paragraph.raku</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.paragraph.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment-block-abbreviated</string>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.documentation.block.declarator.raku</string>
			<key>match</key>
			<string>^\s*(#)([\|\=])(.*)\n</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>comment.punctuation.pound.raku</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>meta.declarator.raku</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>comment.inline.declarator.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>comment.multiline.hash-tick.triple_paren.raku</string>
			<key>begin</key>
			<string>\s*#`\(\(\(</string>
			<key>end</key>
			<string>\)\)\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.internal.triple_paren.raku</string>
					<key>begin</key>
					<string>\(\(\(</string>
					<key>end</key>
					<string>\)\)\)</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>comment.multiline.hash-tick.triple_bracket.raku</string>
			<key>begin</key>
			<string>\s*#`\[\[\[</string>
			<key>end</key>
			<string>\]\]\]</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.internal.triple_bracket.raku</string>
					<key>begin</key>
					<string>\[\[\[</string>
					<key>end</key>
					<string>\]\]\]</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>comment.multiline.hash-tick.triple_brace.raku</string>
			<key>begin</key>
			<string>\s*#`\{\{\{</string>
			<key>end</key>
			<string>\}\}\}</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.internal.triple_brace.raku</string>
					<key>begin</key>
					<string>\{\{\{</string>
					<key>end</key>
					<string>\}\}\}</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>comment.multiline.hash-tick.triple_angle.raku</string>
			<key>begin</key>
			<string>\s*#`&lt;&lt;&lt;</string>
			<key>end</key>
			<string>&gt;&gt;&gt;</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.internal.triple_angle.raku</string>
					<key>begin</key>
					<string>&lt;&lt;&lt;</string>
					<key>end</key>
					<string>&gt;&gt;&gt;</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>comment.multiline.hash-tick.double_angle.raku</string>
			<key>begin</key>
			<string>\s*#`&lt;&lt;</string>
			<key>end</key>
			<string>&gt;&gt;</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.internal.double_angle.raku</string>
					<key>begin</key>
					<string>&lt;&lt;</string>
					<key>end</key>
					<string>&gt;&gt;</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>comment.multiline.hash-tick.double_paren.raku</string>
			<key>begin</key>
			<string>\s*#`\(\(</string>
			<key>end</key>
			<string>\)\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.internal.double_paren.raku</string>
					<key>begin</key>
					<string>\(\(</string>
					<key>end</key>
					<string>\)\)</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>comment.multiline.hash-tick.double_bracket.raku</string>
			<key>begin</key>
			<string>\s*#`\[\[</string>
			<key>end</key>
			<string>\]\]</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.internal.double_bracket.raku</string>
					<key>begin</key>
					<string>\[\[</string>
					<key>end</key>
					<string>\]\]</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>comment.multiline.hash-tick.double_brace.raku</string>
			<key>begin</key>
			<string>\s*#`{{</string>
			<key>end</key>
			<string>}}</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.internal.double_brace.raku</string>
					<key>begin</key>
					<string>{{</string>
					<key>end</key>
					<string>}}</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>comment.multiline.hash-tick.brace.raku</string>
			<key>begin</key>
			<string>\s*#`{</string>
			<key>end</key>
			<string>}</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.internal.brace.raku</string>
					<key>begin</key>
					<string>{</string>
					<key>end</key>
					<string>}</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>comment.multiline.hash-tick.angle.raku</string>
			<key>begin</key>
			<string>\s*#`&lt;</string>
			<key>end</key>
			<string>&gt;</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.internal.angle.raku</string>
					<key>begin</key>
					<string>&lt;</string>
					<key>end</key>
					<string>&gt;</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>comment.multiline.hash-tick.paren.raku</string>
			<key>begin</key>
			<string>\s*#`\(</string>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.internal.paren.raku</string>
					<key>begin</key>
					<string>\(</string>
					<key>end</key>
					<string>\)</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>comment.multiline.hash-tick.bracket.raku</string>
			<key>begin</key>
			<string>\s*#`\[</string>
			<key>end</key>
			<string>\]</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.internal.bracket.raku</string>
					<key>begin</key>
					<string>\[</string>
					<key>end</key>
					<string>\]</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>comment.multiline.hash-tick.left_double_right_double.raku</string>
			<key>begin</key>
			<string>\s*#`“</string>
			<key>end</key>
			<string>”</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.internal.left_double_right_double.raku</string>
					<key>begin</key>
					<string>“</string>
					<key>end</key>
					<string>”</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>comment.multiline.hash-tick.left_double-low-q_right_double.raku</string>
			<key>begin</key>
			<string>\s*#`„</string>
			<key>end</key>
			<string>”|“</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.internal.left_double-low-q_right_double.raku</string>
					<key>begin</key>
					<string>„</string>
					<key>end</key>
					<string>”|“</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>comment.multiline.hash-tick.left_single_right_single.raku</string>
			<key>begin</key>
			<string>\s*#`‘</string>
			<key>end</key>
			<string>’</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.internal.left_single_right_single.raku</string>
					<key>begin</key>
					<string>‘</string>
					<key>end</key>
					<string>’</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>comment.multiline.hash-tick.low-q_left_single.raku</string>
			<key>begin</key>
			<string>\s*#`‚</string>
			<key>end</key>
			<string>‘</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.internal.low-q_left_single.raku</string>
					<key>begin</key>
					<string>‚</string>
					<key>end</key>
					<string>‘</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>comment.multiline.hash-tick.fw_cornerbracket.raku</string>
			<key>begin</key>
			<string>\s*#`「</string>
			<key>end</key>
			<string>」</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.internal.fw_cornerbracket.raku</string>
					<key>begin</key>
					<string>「</string>
					<key>end</key>
					<string>」</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>comment.multiline.hash-tick.hw_cornerbracket.raku</string>
			<key>begin</key>
			<string>\s*#`｢</string>
			<key>end</key>
			<string>｣</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.internal.hw_cornerbracket.raku</string>
					<key>begin</key>
					<string>｢</string>
					<key>end</key>
					<string>｣</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>comment.multiline.hash-tick.chevron.raku</string>
			<key>begin</key>
			<string>\s*#`«</string>
			<key>end</key>
			<string>»</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.internal.chevron.raku</string>
					<key>begin</key>
					<string>«</string>
					<key>end</key>
					<string>»</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>comment.multiline.hash-tick.s-shaped-bag-delimiter.raku</string>
			<key>begin</key>
			<string>\s*#`⟅</string>
			<key>end</key>
			<string>⟆</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.internal.s-shaped-bag-delimiter.raku</string>
					<key>begin</key>
					<string>⟅</string>
					<key>end</key>
					<string>⟆</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>string.quoted.left_double_right_double.raku</string>
			<key>begin</key>
			<string>“</string>
			<key>end</key>
			<string>”</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.character.escape.raku</string>
					<key>match</key>
					<string>\\[“”abtnfre\\\{\}]</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.quoting.raku#q_left_double_right_double_string_content</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.raku</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>string.quoted.left_double-low-q_right_double.raku</string>
			<key>begin</key>
			<string>„</string>
			<key>end</key>
			<string>”|“</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.character.escape.raku</string>
					<key>match</key>
					<string>\\[„”|“abtnfre\\\{\}]</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.quoting.raku#q_left_double-low-q_right_double_string_content</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.raku</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>string.quoted.single.left_single_right_single.raku</string>
			<key>begin</key>
			<string>(?&lt;=\W|^)‘</string>
			<key>end</key>
			<string>’</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.character.escape.raku</string>
					<key>match</key>
					<string>\\[‘’\\]</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.quoting.raku#q_left_single_right_single_string_content</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.raku</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>string.quoted.single.low-q_left_single.raku</string>
			<key>begin</key>
			<string>(?&lt;=\W|^)‚</string>
			<key>end</key>
			<string>‘</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.character.escape.raku</string>
					<key>match</key>
					<string>\\[‚‘\\]</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.quoting.raku#q_low-q_left_single_string_content</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.raku</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>string.quoted.single.single.raku</string>
			<key>begin</key>
			<string>(?&lt;=\W|^)&apos;</string>
			<key>end</key>
			<string>&apos;</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.character.escape.raku</string>
					<key>match</key>
					<string>\\[&apos;\\]</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.quoting.raku#q_single_string_content</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.raku</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>string.quoted.double.raku</string>
			<key>begin</key>
			<string>&quot;</string>
			<key>end</key>
			<string>&quot;</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.character.escape.raku</string>
					<key>match</key>
					<string>\\[&quot;abtnfre\\\{\}]</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.quoting.raku#q_double_string_content</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.raku</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>string.quoted.right_double_right_double.raku</string>
			<key>begin</key>
			<string>”</string>
			<key>end</key>
			<string>”</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.character.escape.raku</string>
					<key>match</key>
					<string>\\[”abtnfre\\\{\}]</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.quoting.raku#q_right_double_right_double_string_content</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.raku</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>begin</key>
			<string>(^[ \t]+)?(?=#)</string>
			<key>end</key>
			<string>(?!\G)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.line.number-sign.raku</string>
					<key>begin</key>
					<string>#</string>
					<key>end</key>
					<string>\n</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.raku</string>
						</dict>
					</dict>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.whitespace.comment.leading.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.setbagmix.raku</string>
			<key>match</key>
			<string>(?x) \x{2208}|\(elem\)|\x{2209}|\!\(elem\)| \x{220B}|\(cont\)|\x{220C}|\!\(cont\)| \x{2286}|\(&lt;=\)  |\x{2288}|\!\(&lt;=\)  | \x{2282}|\(&lt;\)   |\x{2284}|\!\(&lt;\)   | \x{2287}|\(&gt;=\)  |\x{2289}|\!\(&gt;=\)  | \x{2283}|\(&gt;\)   |\x{2285}|\!\(&gt;\)   | \x{227C}|\(&lt;\+\)|\x{227D}|\(&gt;\+\)   | \x{222A}|\(\|\) |\x{2229}|\(&amp;\)      | \x{2216}|\(\-\) |\x{2296}|\(\^\)    | \x{228D}|\(\.\) |\x{228E}|\(\+\)</string>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.class.raku</string>
			<key>match</key>
			<string>(?x) ( class|enum|grammar|knowhow|module| package|role|slang|subset|monitor|actor ) (\s+) ( ( (?:::|&apos;)? (?: ([a-zA-Z_À-ÿ\$]) ([a-zA-Z0-9_À-ÿ\$]|[\-&apos;][a-zA-Z0-9_À-ÿ\$])* ) )+ )</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.raku</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>include</key>
			<string>#p5_regex</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?x)
(?&lt;=
  ^
 | ^\s
 | [\s\(] [^\p{Nd}\p{L}]
 | ~~\s|~~\s\s|match\(
 | match:\s
)
([/]) # Solidus
(.*?) # Regex contents
(?: (?&lt;!\\)|(?&lt;=\\\\) ) (/) # Ending</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.raku</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.regexp.raku</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.regexp.raku</string>
						</dict>
					</array>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>contentName</key>
			<string>string.regexp.raku</string>
			<key>begin</key>
			<string>(?x)
(?&lt;= [=,(\[]|when|=&gt;|~~) \s*
(?:
  (m|rx|s)?
  (
    (?:
      (?&lt;!:P5) # &lt; This can maybe be removed because we
      \s*:\w+
      (?!\s*:P5) # &lt; include p5_regex above it
    )*
  )
) # With the m or rx
\s*
([/]) # Solidus</string>
			<key>end</key>
			<string>(?x) (?: (?&lt;!\\)|(?&lt;=\\\\)|(?&lt;!&apos;)|(?&lt;=\\ &apos;) ) (/)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.regexp.raku</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.regexp.construct.raku</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.section.adverb.regexp.raku</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.raku</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>contentName</key>
			<string>fstring.regexp.raku</string>
			<key>begin</key>
			<string>(?x)
(?&lt;= ^|[=,(\[~]|when|=&gt; ) \s*
(?:
  (m|rx|s)
  (
    (?:
      (?&lt;!:P5) # &lt; This can maybe be removed because we
      \s*:\w+
      (?!\s*:P5) # &lt; include p5_regex above it
    )*
  )
) # With the m or rx
\s*
([{]) # Left curly brace</string>
			<key>end</key>
			<string>(?x) (?: (?&lt;!\\)|(?&lt;=\\\\) ) (\})</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.regexp.raku</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.regexp.construct.raku</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.section.adverb.regexp.raku</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.raku</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>contentName</key>
			<string>string.regexp.raku</string>
			<key>begin</key>
			<string>(?&lt;![\w\/])(m|rx)((?:\s*:\w+)*)\s*(\{)</string>
			<key>end</key>
			<string>(?&lt;!\\)(\})</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.regexp.raku</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.regexp.construct.raku</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.section.adverb.regexp.raku</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.raku</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>contentName</key>
			<string>string.regexp.raku</string>
			<key>begin</key>
			<string>(?&lt;![\w\/])(m|rx)((?:\s*:\w+)*)\s*(\[)</string>
			<key>end</key>
			<string>(?&lt;!\\)(\])</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.regexp.raku</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.regexp.construct.raku</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.section.adverb.regexp.raku</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.raku</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>string.quoted.single.raku</string>
			<key>begin</key>
			<string>(?&lt;=\W|^)｢</string>
			<key>end</key>
			<string>｣</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.quoting.raku#q_hw_cornerbracket_string_content</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.raku</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>contentName</key>
			<string>string.regexp.slash.raku</string>
			<key>begin</key>
			<string>(?x)
(?&lt;= ^|\s )
(?:
  (m|rx|s|S)
  (
    (?:
      (?&lt;!:P5) # &lt; This can maybe be removed because we
      \s*:\w+
      (?!\s*:P5) # &lt; include p5_regex above it
    )*
  )
)
\s*
(/)</string>
			<key>end</key>
			<string>(?x) (?: (?&lt;!\\)|(?&lt;=\\\\) ) (/)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.regexp.raku</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.regexp.construct.slash.raku</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.section.adverb.regexp.slash.raku</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.slash.raku</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.slash.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>contentName</key>
			<string>string.regexp.brace.raku</string>
			<key>begin</key>
			<string>(?x)
(?&lt;= ^|\s )
(?:
  (m|rx|s|S)
  (
    (?:
      (?&lt;!:P5) # &lt; This can maybe be removed because we
      \s*:\w+
      (?!\s*:P5) # &lt; include p5_regex above it
    )*
  )
)
\s*
({)</string>
			<key>end</key>
			<string>(?x) (?: (?&lt;!\\)|(?&lt;=\\\\) ) (})</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.regexp.raku</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.regexp.construct.brace.raku</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.section.adverb.regexp.brace.raku</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.brace.raku</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.brace.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>contentName</key>
			<string>string.regexp.angle.raku</string>
			<key>begin</key>
			<string>(?x)
(?&lt;= ^|\s )
(?:
  (m|rx|s|S)
  (
    (?:
      (?&lt;!:P5) # &lt; This can maybe be removed because we
      \s*:\w+
      (?!\s*:P5) # &lt; include p5_regex above it
    )*
  )
)
\s*
(&lt;)</string>
			<key>end</key>
			<string>(?x) (?: (?&lt;!\\)|(?&lt;=\\\\) ) (&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.regexp.raku</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.regexp.construct.angle.raku</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.section.adverb.regexp.angle.raku</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.angle.raku</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.angle.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>contentName</key>
			<string>string.regexp.paren.raku</string>
			<key>begin</key>
			<string>(?x)
(?&lt;= ^|\s )
(?:
  (m|rx|s|S)
  (
    (?:
      (?&lt;!:P5) # &lt; This can maybe be removed because we
      \s*:\w+
      (?!\s*:P5) # &lt; include p5_regex above it
    )*
  )
)
\s*
(\()</string>
			<key>end</key>
			<string>(?x) (?: (?&lt;!\\)|(?&lt;=\\\\) ) (\))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.regexp.raku</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.regexp.construct.paren.raku</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.section.adverb.regexp.paren.raku</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.paren.raku</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.paren.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>contentName</key>
			<string>string.regexp.bracket.raku</string>
			<key>begin</key>
			<string>(?x)
(?&lt;= ^|\s )
(?:
  (m|rx|s|S)
  (
    (?:
      (?&lt;!:P5) # &lt; This can maybe be removed because we
      \s*:\w+
      (?!\s*:P5) # &lt; include p5_regex above it
    )*
  )
)
\s*
(\[)</string>
			<key>end</key>
			<string>(?x) (?: (?&lt;!\\)|(?&lt;=\\\\) ) (\])</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.regexp.raku</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.regexp.construct.bracket.raku</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.section.adverb.regexp.bracket.raku</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.bracket.raku</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.bracket.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>contentName</key>
			<string>string.regexp.left_double_right_double.raku</string>
			<key>begin</key>
			<string>(?x)
(?&lt;= ^|\s )
(?:
  (m|rx|s|S)
  (
    (?:
      (?&lt;!:P5) # &lt; This can maybe be removed because we
      \s*:\w+
      (?!\s*:P5) # &lt; include p5_regex above it
    )*
  )
)
\s*
(“)</string>
			<key>end</key>
			<string>(?x) (?: (?&lt;!\\)|(?&lt;=\\\\) ) (”)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.regexp.raku</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.regexp.construct.left_double_right_double.raku</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.section.adverb.regexp.left_double_right_double.raku</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.left_double_right_double.raku</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.left_double_right_double.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>contentName</key>
			<string>string.regexp.left_double-low-q_right_double.raku</string>
			<key>begin</key>
			<string>(?x)
(?&lt;= ^|\s )
(?:
  (m|rx|s|S)
  (
    (?:
      (?&lt;!:P5) # &lt; This can maybe be removed because we
      \s*:\w+
      (?!\s*:P5) # &lt; include p5_regex above it
    )*
  )
)
\s*
(„)</string>
			<key>end</key>
			<string>(?x) (?: (?&lt;!\\)|(?&lt;=\\\\) ) (”|“)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.regexp.raku</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.regexp.construct.left_double-low-q_right_double.raku</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.section.adverb.regexp.left_double-low-q_right_double.raku</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.left_double-low-q_right_double.raku</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.left_double-low-q_right_double.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>contentName</key>
			<string>string.regexp.left_single_right_single.raku</string>
			<key>begin</key>
			<string>(?x)
(?&lt;= ^|\s )
(?:
  (m|rx|s|S)
  (
    (?:
      (?&lt;!:P5) # &lt; This can maybe be removed because we
      \s*:\w+
      (?!\s*:P5) # &lt; include p5_regex above it
    )*
  )
)
\s*
(‘)</string>
			<key>end</key>
			<string>(?x) (?: (?&lt;!\\)|(?&lt;=\\\\) ) (’)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.regexp.raku</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.regexp.construct.left_single_right_single.raku</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.section.adverb.regexp.left_single_right_single.raku</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.left_single_right_single.raku</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.left_single_right_single.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>contentName</key>
			<string>string.regexp.low-q_left_single.raku</string>
			<key>begin</key>
			<string>(?x)
(?&lt;= ^|\s )
(?:
  (m|rx|s|S)
  (
    (?:
      (?&lt;!:P5) # &lt; This can maybe be removed because we
      \s*:\w+
      (?!\s*:P5) # &lt; include p5_regex above it
    )*
  )
)
\s*
(‚)</string>
			<key>end</key>
			<string>(?x) (?: (?&lt;!\\)|(?&lt;=\\\\) ) (‘)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.regexp.raku</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.regexp.construct.low-q_left_single.raku</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.section.adverb.regexp.low-q_left_single.raku</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.low-q_left_single.raku</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.low-q_left_single.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>contentName</key>
			<string>string.regexp.fw_cornerbracket.raku</string>
			<key>begin</key>
			<string>(?x)
(?&lt;= ^|\s )
(?:
  (m|rx|s|S)
  (
    (?:
      (?&lt;!:P5) # &lt; This can maybe be removed because we
      \s*:\w+
      (?!\s*:P5) # &lt; include p5_regex above it
    )*
  )
)
\s*
(「)</string>
			<key>end</key>
			<string>(?x) (?: (?&lt;!\\)|(?&lt;=\\\\) ) (」)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.regexp.raku</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.regexp.construct.fw_cornerbracket.raku</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.section.adverb.regexp.fw_cornerbracket.raku</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.fw_cornerbracket.raku</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.fw_cornerbracket.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>contentName</key>
			<string>string.regexp.hw_cornerbracket.raku</string>
			<key>begin</key>
			<string>(?x)
(?&lt;= ^|\s )
(?:
  (m|rx|s|S)
  (
    (?:
      (?&lt;!:P5) # &lt; This can maybe be removed because we
      \s*:\w+
      (?!\s*:P5) # &lt; include p5_regex above it
    )*
  )
)
\s*
(｢)</string>
			<key>end</key>
			<string>(?x) (?: (?&lt;!\\)|(?&lt;=\\\\) ) (｣)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.regexp.raku</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.regexp.construct.hw_cornerbracket.raku</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.section.adverb.regexp.hw_cornerbracket.raku</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.hw_cornerbracket.raku</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.hw_cornerbracket.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>contentName</key>
			<string>string.regexp.chevron.raku</string>
			<key>begin</key>
			<string>(?x)
(?&lt;= ^|\s )
(?:
  (m|rx|s|S)
  (
    (?:
      (?&lt;!:P5) # &lt; This can maybe be removed because we
      \s*:\w+
      (?!\s*:P5) # &lt; include p5_regex above it
    )*
  )
)
\s*
(«)</string>
			<key>end</key>
			<string>(?x) (?: (?&lt;!\\)|(?&lt;=\\\\) ) (»)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.regexp.raku</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.regexp.construct.chevron.raku</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.section.adverb.regexp.chevron.raku</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.chevron.raku</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.chevron.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>contentName</key>
			<string>string.regexp.s-shaped-bag-delimiter.raku</string>
			<key>begin</key>
			<string>(?x)
(?&lt;= ^|\s )
(?:
  (m|rx|s|S)
  (
    (?:
      (?&lt;!:P5) # &lt; This can maybe be removed because we
      \s*:\w+
      (?!\s*:P5) # &lt; include p5_regex above it
    )*
  )
)
\s*
(⟅)</string>
			<key>end</key>
			<string>(?x) (?: (?&lt;!\\)|(?&lt;=\\\\) ) (⟆)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.regexp.raku</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.regexp.construct.s-shaped-bag-delimiter.raku</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.section.adverb.regexp.s-shaped-bag-delimiter.raku</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.s-shaped-bag-delimiter.raku</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.s-shaped-bag-delimiter.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>contentName</key>
			<string>string.regexp.any.raku</string>
			<key>begin</key>
			<string>(?x)
(?&lt;= ^|\s )
(?:
  (m|rx|s|S)
  (
    (?:
      (?&lt;!:P5) # &lt; This can maybe be removed because we
      \s*:\w+
      (?!\s*:P5) # &lt; include p5_regex above it
    )*
  )
)
\s*
([^#\p{Ps}\p{Pe}\p{Pi}\p{Pf}\w&apos;\-&lt;&gt;\-\]\)\}\{])</string>
			<key>end</key>
			<string>(?x) (?: (?&lt;!\\)|(?&lt;=\\\\) ) (\3)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.regexp.raku</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.regexp.construct.any.raku</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.section.adverb.regexp.any.raku</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.any.raku</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.any.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>include</key>
			<string>#shellquotes</string>
		</dict>
		<dict>
			<key>name</key>
			<string>string.quoted.heredoc.raku</string>
			<key>begin</key>
			<string>(?x) (?: ( qq|qqx|qqw ) \s* ( (?:\s*:\w+)*\s*: (?: to|heredoc ) )\s* | (qqto) \s* ( (?:\s*:\w+)* )\s* ) / (\S+) /</string>
			<key>end</key>
			<string>\s*\5</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.heredoc.continuation.raku</string>
					<key>begin</key>
					<string>(?&lt;=/)</string>
					<key>end</key>
					<string>\n</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^</string>
					<key>end</key>
					<string>$</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>name</key>
					<string>string.quoted.qq.heredoc.raku</string>
					<key>match</key>
					<string>(?x) ^ (?: . | \n )* $</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.quoted.construct.raku</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.adverb.raku</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.quoted.construct.raku</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.function.adverb.raku</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.heredoc.delimiter.raku</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.heredoc.delimiter.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.heredoc.raku</string>
			<key>begin</key>
			<string>(?x) (?: ( [qQ](?!/)|qw|qww|qx|qqx ) \s* ( (?:\s*:\w+)*\s*: (?: to|heredoc ) )\s* | (qto|Qto) \s* ( (?:\s*:\w+)* )\s* ) / (\S+) /</string>
			<key>end</key>
			<string>\s*\5</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.heredoc.continuation.raku</string>
					<key>begin</key>
					<string>(?&lt;=/)</string>
					<key>end</key>
					<string>\n</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>name</key>
					<string>string.quoted.q.heredoc.raku</string>
					<key>match</key>
					<string>(?x) ^ (?: . | \n )* $</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.quoted.construct.raku</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.adverb.raku</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.quoted.construct.raku</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.function.adverb.raku</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.heredoc.delimiter.raku</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.heredoc.delimiter.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>include</key>
			<string>source.quoting.raku</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#variables</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?x) (?&lt;![%$&amp;@]|\w) (?:  (multi|proto) \s+ )? (macro|sub|submethod|method|multi|only|category) \s+ (!)? (  [^\s(){}]+ )</string>
			<key>end</key>
			<string>(?=[\(\{\s])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.declarator.multi.raku</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.declarator.type.raku</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>support.class.method.private.raku</string>
				</dict>
				<key>4</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?x) ( [\p{Nd}\pL\pM&apos;\-_]+ ) \b (:)? (\w+ \b )? (\S+  )?</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.raku</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.function.adverb.raku</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>support.type.class.adverb.raku</string>
								</dict>
								<key>4</key>
								<dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>$self</string>
										</dict>
									</array>
								</dict>
							</dict>
						</dict>
					</array>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.regexp.named.raku</string>
			<key>begin</key>
			<string>(?&lt;![\.:])(regex|rule|token)(?!\s*=&gt;|\S)</string>
			<key>end</key>
			<string>(?&lt;!\\)\}</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>entity.name.function.regexp.named.TOP.raku</string>
					<key>match</key>
					<string>TOP</string>
				</dict>
				<dict>
					<key>name</key>
					<string>entity.name.function.regexp.named.raku</string>
					<key>match</key>
					<string>[\p{Nd}\pL\pM&apos;\-_]+</string>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.regexp.named.adverb.raku</string>
					<key>match</key>
					<string>(:)(\w+)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.regexp.adverb.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.type.class.adverb.raku</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>contentName</key>
					<string>string.array.words.raku</string>
					<key>begin</key>
					<string>&lt;</string>
					<key>end</key>
					<string>(?x) \\\\|(?&lt;!\\) ( &gt; ) (?=[\s\{])</string>
				</dict>
				<dict>
					<key>contentName</key>
					<string>string.array.words.chevron.raku</string>
					<key>begin</key>
					<string>«</string>
					<key>end</key>
					<string>(?x)  \\\\|(?&lt;!\\) ( » ) (?=[\s\{])</string>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.regexp.named.signature.raku</string>
					<key>begin</key>
					<string>\(</string>
					<key>end</key>
					<string>(?&lt;!\\)\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.regexp.named.signature.perlfe</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.regexp.named.block.raku</string>
					<key>begin</key>
					<string>\{</string>
					<key>end</key>
					<string>(?=\})</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.regexp.raku</string>
						</dict>
					</array>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.regex.named.raku</string>
						</dict>
					</dict>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.declare.regexp.named.raku</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.named.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>variable.language.raku</string>
			<key>match</key>
			<string>\b(?&lt;![\-:])(self)(?!\-)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.other.include.raku</string>
			<key>match</key>
			<string>\b(?&lt;![\-:])(use|require|no|need)(?!\-)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.control.conditional.raku</string>
			<key>match</key>
			<string>(?x)\b(?&lt;![\-:])( if|else|elsif|unless|with|orwith|without )(?!\-)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>storage.modifier.declarator.raku</string>
			<key>match</key>
			<string>\b(?&lt;![\-:])(let|my|our|state|temp|has|constant)(?!\-)\b</string>
		</dict>
		<dict>
			<key>contentName</key>
			<string>string.array.words.raku</string>
			<key>begin</key>
			<string>(?x) (?&lt;= = | for ) \s* ( &lt; )</string>
			<key>end</key>
			<string>(?x)  \\\\|(?&lt;!\\) ( &gt; )</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.quoting.raku#q_bracket_string_content</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>span.keyword.operator.array.words.raku</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>span.keyword.operator.array.words.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>storage.modifier.assignment.raku</string>
			<key>match</key>
			<string>(?x) (?: [+:\-.*/] | \|\| )? (?&lt;! = ) = (?! [&gt;=~] )</string>
		</dict>
		<dict>
			<key>contentName</key>
			<string>string.array.words.raku</string>
			<key>begin</key>
			<string>(?x) (?&lt;! \+&lt; | \+\s|\+ ) \s* (&lt;) (?&lt;! &gt; ) (?= [^&lt;]* (?: [^&lt;] ) &gt; )</string>
			<key>end</key>
			<string>(?x) \\\\|(?&lt;!\\) ( &gt; )</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>span.keyword.operator.array.words.raku</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>span.keyword.operator.array.words.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.control.repeat.raku</string>
			<key>match</key>
			<string>\b(for|loop|repeat|while|until|gather|given)(?!\-)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.control.flowcontrol.raku</string>
			<key>match</key>
			<string>(?x)
\b (?&lt;! [\-:.] )
(
   take|do|when|next|last|redo|return|return-rw
  |contend|maybe|defer|default|exit|quietly
  |continue|break|goto|leave|supply
  |async|lift|await|start|react|whenever|parse
)
(?! - ) \b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.control.flowcontrol.regex.raku</string>
			<key>match</key>
			<string>(?x)
\b (?&lt;! [\-:] )
(
  make|made
)
(?! - ) \b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>storage.modifier.type.constraints.raku</string>
			<key>match</key>
			<string>(?x)\b(?&lt;![\-:]) (is|does|as|but|trusts|of|returns|handles|where|augment|supersede) (?!\-)\b (?!\s*=&gt;)</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.control.closure.trait.raku</string>
			<key>match</key>
			<string>(?x)\b(?&lt;![\-:])( BEGIN|CHECK|INIT |START|FIRST|ENTER |LEAVE|KEEP|UNDO |NEXT|LAST|PRE |POST|END|CATCH |CONTROL|TEMP|QUIT )(?!\-)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.control.control-handlers.raku</string>
			<key>match</key>
			<string>\b(?&lt;![\-:])(die|fail|try|warn)(?!\-)\b(?!\s*=&gt;)</string>
		</dict>
		<dict>
			<key>name</key>
			<string>entity.name.type.trait.raku</string>
			<key>match</key>
			<string>(?x)\b(?&lt;![\-:])( prec|irs|ofs|ors|export|raw|deep |binary|unary|reparsed|rw|parsed |cached|readonly|defequiv|will |ref|copy|inline|tighter|looser |equiv|assoc|required|pure )(?!\-)\b  (?!\s*=&gt;)</string>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.numeric.raku</string>
			<key>match</key>
			<string>\b(NaN|Inf)(?!\-)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.language.boolean.raku</string>
			<key>match</key>
			<string>\b(True|False)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.language.pragma.raku</string>
			<key>match</key>
			<string>(?x)\b(?&lt;![\-:])( fatal|internals| MONKEY\-(?:TYPING|SEE\-NO\-EVAL|BRAINS|GUTS|BUSINESS|TRAP|SHINE|WRENCH|BARS)| nqp|QAST|strict|trace|worries|invocant|parameters|experimental| cur|soft|variables|attributes|v6(?:\.\w)*|lib|Test|NativeCall )(?!\-) \b (?!\s*=&gt;)</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?x)(?&lt;![:\-\w]) (Backtrace|Exception|Failure|X) (?: \:\:[a-zA-Z]+ )* \b</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>support.type.exception.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>match</key>
			<string>(?x)\b(?&lt;!:)(
  AST|Any|Array|Associative|Attribute|Bag|BagHash|Baggy|
  Blob|Block|Bool|Callable|Capture|Channel|Code|Complex|Cool|
  CurrentThreadScheduler|Cursor|Date|DateTime|Dateish|Duration|
  Enum|FatRat|Grammar|Hash|IO|Instant|Iterable|
  Iterator|Junction|Label|List|Lock|Macro|Map|Match|Metamodel|
  Method|Mix|MixHash|Mixy|Mu|Nil|Numeric|ObjAt|Pair|
  Parameter|Pod|Positional|PositionalBindFailover|Proc|Promise|
  Proxy|QuantHash|Range|Rat|Rational|Real|Regex|Routine|Scheduler|
  Seq|Set|SetHash|Setty|Signature|Slip|Stash|Str|str|Stringy|Sub|
  Submethod|Supply|Tap|Temporal|Thread|ThreadPoolScheduler|
  Variable|Version|Whatever|WhateverCode|bool|size_t|
  Int|int|int1|int2|int4|int8|int16|int32|int64|
  Rat|rat|rat1|rat2|rat4|rat8|rat16|rat32|rat64|
  Buf|buf|buf1|buf2|buf4|buf8|buf16|buf32|buf64|
  UInt|uint|uint1|uint2|uint4|uint8|uint16|uint32|uint64|
  utf8|utf16|utf32|Num|num|num32|num64|IntStr|NumStr|
  RatStr|ComplexStr|CArray|Pointer|long|longlong|
  # These are for types which have sub types
  Order|More|Less|Same
)\b (?!\s*=&gt;)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.type.raku</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.class.type.adverb.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.reduction.raku</string>
			<key>match</key>
			<string>(?x) ( \[ / \] )</string>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.adverb.definedness.raku</string>
			<key>match</key>
			<string>(?&lt;=\w)(\:)([DU_])\b</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.adverb.raku</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.special-method.definedness.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.word.raku</string>
			<key>match</key>
			<string>(?x)\b( div|mod|gcd|lcm|x|xx|temp|let|but|cmp|leg| eq|ne|gt|ge|lt|le|before|after|eqv|min|max|ff|fff|not|so|Z| and|andthen|or|orelse )\b(?!\-)| \b(X)(?!:)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.operator.non.ligature.raku</string>
			<key>match</key>
			<string>(=~=|≅)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.approx-equal.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.multi-symbol.raku</string>
			<key>match</key>
			<string>(?x) &lt;== | ==&gt; | &lt;=&gt; | =&gt; | --&gt; | -&gt; | \+\| | \+\+ | -- | \*\* | \?\?\? | \?\? | \!\!\! | \!\! | &amp;&amp; | \+\^ | \?\^ | %% | \+&amp; | \+&lt; | \+&gt; | \+\^ | \.\.(?!\.) | \.\.\^ | \^\.\. | \^\.\.\^ | \?\| | !=(?!\=) | !==(?!\=) | &lt;=(?!&gt;) | &gt;= | === | == | =:= | ~~ | \x{2245} | \|\| | \^\^ | \/\/ | := | ::= | \.\.\.</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#special_variables</string>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.subscript.whatever.raku</string>
			<key>match</key>
			<string>(?x)(?&lt;=\[) \s* (\*) \s* ([\-\*%\^\+\/]|div|mod|gcd|lcm) \s* (\d+) \s* (?=\])</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.language.whatever.raku</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.minus.back-from.raku</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.back-from.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.language.whatever.hack.raku</string>
			<key>match</key>
			<string>\*\s*(?=\])</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.raku</string>
			<key>match</key>
			<string>(?x)\b(?&lt;![\-\\])( :: )?(exists)(?!\-)\b(?!\s*=&gt;)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.colon.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.raku</string>
			<key>match</key>
			<string>(?x)\b(?&lt;![\-:\\])( :: )?( eager|hyper|substr|index|rindex|grep|map|sort|join|lines|hints |chmod|split|reduce|min|max|reverse|truncate|zip|cat|roundrobin |classify|first|sum|keys|values|pairs|defined|delete|exists |elems|end|kv|any|all|one|wrap|shape|key|value|name|pop|push |shift|splice|unshift|floor|ceiling|abs|exp|log|log10|rand|sign |sqrt|sin|cos|tan|round|strand|roots|cis|unpolar|polar|atan2 |pick|chop|chomp|lc|lcfirst|uc|ucfirst|capitalize|mkdir |normalize|pack|unpack|quotemeta|comb|samecase|sameaccent|chars |nfd|nfc|nfkd|nfkc|printf|sprintf|caller|evalfile|run|runinstead |nothing|want|bless|chr|ord|ords|gmtime|time|eof|localtime|gethost |getpw|chroot|getlogin|getpeername|kill|fork|wait|perl|graphs |codes|bytes|clone|print|open|read|write|readline|say|seek|close |opendir|readdir|slurp|spurt|shell|run|pos|fmt|vec|link|unlink |symlink|unique|pair|asin|atan|sec|cosec|cotan|asec|acosec|acotan |sinh|cosh|tanh|asinh|done|acos|acosh|atanh|sech|cosech|cotanh |sech|acosech|acotanh|asech|ok|nok|plan-ok|dies-ok|lives-ok|skip |todo|pass|flunk|force-todo|use-ok|isa-ok|diag|is-deeply|isnt |like|skip-rest|unlike|cmp-ok|eval-dies-ok|nok-error|cmp-ok |eval-lives-ok|approx|is-approx|throws-ok|version-lt|plan|EVAL |succ|pred|times|nonce|once|signature|new|connect|operator|undef |undefine|sleep|from|to|infix|postfix|prefix|circumfix|can-ok |postcircumfix|minmax|lazy|count|unwrap|getc|pi|tau|context|void |quasi|body|each|contains|rewinddir|subst|can|isa|flush|arity |assuming|rewind|callwith|callsame|nextwith|nextsame|attr|does-ok |eval-elsewhere|none|not|srand|so|trim|trim-start|trim-end|lastcall |WHAT|WHY|WHERE|HOW|WHICH|VAR|WHO|WHENCE|ACCEPTS|REJECTS|not |iterator|by|re|im|invert|flip|gist|flat|tree|is-prime |throws-like|trans|race|hyper|tap|emit|done-testing|quit|dd|note |prepend|categorize|antipairs|categorize-list|parse-base|base |starts-with|ends-with|put|append|tail|\x{03C0}|\x{03C4}|\x{212F} |get|words|new-from-pairs|uniname|uninames|uniprop|uniprops |slurp-rest|throw|break|keep|match|trim-leading|trim-trailing |is-lazy|pull-one|push-exactly|push-at-least|push-all|push-until-lazy |sink-all|skip-at-least|skip-at-least-pull-one )(?!\-)\b(?!\s*=&gt;)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.colon.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.raku</string>
			<key>match</key>
			<string>(?x)\b(?&lt;![\-:]|\\)(?&lt;=\.) (e|d|f|s|l|r|w|rw|x|rwx|z|abspath|basename|extension|dirname |watch|is-absolute|parts|volume|path|is-relative|parent|child |resolve|dir) (?!\-)\b(?!\s*=&gt;)</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#numbers</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.generic.raku</string>
			<key>match</key>
			<string>(?x) (?&lt;!\(|\*)\%| [\^\+&gt;&lt;\*\!\?~\/\|]| (?&lt;!\$)\.| (?&lt;!:):(?!:)| (?&lt;=\s)\-(?=[\s\(\{\[])| (?&lt;!\w)[o\x{2218}](?!\w)</string>
		</dict>
		<dict>
			<key>name</key>
			<string>string.pair.key.raku</string>
			<key>match</key>
			<string>(?x) (?&lt;=^|\W|\s) ([\w&apos;\-]+) \s* (?= =&gt;)</string>
		</dict>
		<dict>
			<key>name</key>
			<string>routine.name.raku</string>
			<key>match</key>
			<string>(?x) \b (?&lt;!\d) ([a-zA-Z_\x{c0}-\x{ff}\$]) ( [a-zA-Z0-9_\x{c0}-\x{ff}\$]| [\-&apos;][a-zA-Z_\x{c0}-\x{ff}\$][a-zA-Z0-9_\x{c0}-\x{ff}\$] )*</string>
		</dict>
		<dict>
			<key>contentName</key>
			<string>constant.numeric.raku</string>
			<key>begin</key>
			<string>(?&lt;=\:)(\d+)(&lt;)</string>
			<key>end</key>
			<string>&gt;</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.type.radix.raku</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.radix.raku</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.radix.raku</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.block.raku</string>
			<key>begin</key>
			<string>\{</string>
			<key>end</key>
			<string>\}</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.block.raku</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.block.raku</string>
				</dict>
			</dict>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>comment-block-abbreviated</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>contentName</key>
					<string>entity.name.section.head.abbreviated.raku</string>
					<key>begin</key>
					<string>^\s*(=)(head\w*)\s+(.+?)\s*$</string>
					<key>end</key>
					<string>(?=^\s*$|^\s*=\w+.*$)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment-block-syntax</string>
						</dict>
					</array>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.block.abbreviated.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name.block.abbreviated.raku</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.section.abbreviated.raku</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#comment-block-syntax</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>contentName</key>
					<string>comment.block.abbreviated.raku</string>
					<key>begin</key>
					<string>^\s*(=)(\w+)\s+(.+?)\s*$</string>
					<key>end</key>
					<string>(?=^\s*$|^\s*=\w+.*$)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment-block-syntax</string>
						</dict>
					</array>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.block.abbreviated.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name.block.abbreviated.raku</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.section.abbreviated.raku</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#comment-block-syntax</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>comment-block-delimited</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>contentName</key>
					<string>comment.block.delimited.raku</string>
					<key>begin</key>
					<string>^\s*(=)(begin)\s+(\w+)</string>
					<key>end</key>
					<string>^\s*(=)(end)\s+(\w+)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment-block-syntax</string>
						</dict>
					</array>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.block.delimited.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.block.delimited.raku</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name.block.delimited.raku</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>comment-block-syntax</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment-block-delimited</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment-block-abbreviated</string>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.pod.c.raku</string>
					<key>contentName</key>
					<string>markup.underline.raku</string>
					<key>begin</key>
					<string>(?x) (U) (&lt;&lt;&lt;)</string>
					<key>end</key>
					<string>(?x) (&gt;&gt;&gt;)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment-block-syntax</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.quoting.raku#q_triple_angle_string_content</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.pod.code.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.pod.code.raku</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.pod.code.raku</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.pod.c.raku</string>
					<key>contentName</key>
					<string>markup.italic.raku</string>
					<key>begin</key>
					<string>(?x) (I) (&lt;&lt;&lt;)</string>
					<key>end</key>
					<string>(?x) (&gt;&gt;&gt;)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment-block-syntax</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.quoting.raku#q_triple_angle_string_content</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.pod.code.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.pod.code.raku</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.pod.code.raku</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.pod.c.raku</string>
					<key>contentName</key>
					<string>markup.bold.raku</string>
					<key>begin</key>
					<string>(?x) (B) (&lt;&lt;&lt;)</string>
					<key>end</key>
					<string>(?x) (&gt;&gt;&gt;)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment-block-syntax</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.quoting.raku#q_triple_angle_string_content</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.pod.code.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.pod.code.raku</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.pod.code.raku</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.pod.c.raku</string>
					<key>contentName</key>
					<string>markup.raw.code.raku</string>
					<key>begin</key>
					<string>(?x) ([A-Z]) (&lt;&lt;&lt;)</string>
					<key>end</key>
					<string>(?x) (&gt;&gt;&gt;)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment-block-syntax</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.quoting.raku#q_triple_angle_string_content</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.pod.code.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.pod.code.raku</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.pod.code.raku</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.pod.c.raku</string>
					<key>contentName</key>
					<string>markup.underline.raku</string>
					<key>begin</key>
					<string>(?x) (U) (&lt;&lt;)</string>
					<key>end</key>
					<string>(?x) (&gt;&gt;)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment-block-syntax</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.quoting.raku#q_double_angle_string_content</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.pod.code.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.pod.code.raku</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.pod.code.raku</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.pod.c.raku</string>
					<key>contentName</key>
					<string>markup.italic.raku</string>
					<key>begin</key>
					<string>(?x) (I) (&lt;&lt;)</string>
					<key>end</key>
					<string>(?x) (&gt;&gt;)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment-block-syntax</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.quoting.raku#q_double_angle_string_content</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.pod.code.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.pod.code.raku</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.pod.code.raku</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.pod.c.raku</string>
					<key>contentName</key>
					<string>markup.bold.raku</string>
					<key>begin</key>
					<string>(?x) (B) (&lt;&lt;)</string>
					<key>end</key>
					<string>(?x) (&gt;&gt;)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment-block-syntax</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.quoting.raku#q_double_angle_string_content</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.pod.code.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.pod.code.raku</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.pod.code.raku</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.pod.c.raku</string>
					<key>contentName</key>
					<string>markup.raw.code.raku</string>
					<key>begin</key>
					<string>(?x) ([A-Z]) (&lt;&lt;)</string>
					<key>end</key>
					<string>(?x) (&gt;&gt;)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment-block-syntax</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.quoting.raku#q_double_angle_string_content</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.pod.code.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.pod.code.raku</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.pod.code.raku</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.pod.c.raku</string>
					<key>contentName</key>
					<string>markup.underline.raku</string>
					<key>begin</key>
					<string>(?x) (U) (&lt;)</string>
					<key>end</key>
					<string>(?x) (&gt;)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment-block-syntax</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.quoting.raku#q_angle_string_content</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.pod.code.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.pod.code.raku</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.pod.code.raku</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.pod.c.raku</string>
					<key>contentName</key>
					<string>markup.italic.raku</string>
					<key>begin</key>
					<string>(?x) (I) (&lt;)</string>
					<key>end</key>
					<string>(?x) (&gt;)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment-block-syntax</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.quoting.raku#q_angle_string_content</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.pod.code.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.pod.code.raku</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.pod.code.raku</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.pod.c.raku</string>
					<key>contentName</key>
					<string>markup.bold.raku</string>
					<key>begin</key>
					<string>(?x) (B) (&lt;)</string>
					<key>end</key>
					<string>(?x) (&gt;)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment-block-syntax</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.quoting.raku#q_angle_string_content</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.pod.code.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.pod.code.raku</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.pod.code.raku</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.pod.c.raku</string>
					<key>contentName</key>
					<string>markup.raw.code.raku</string>
					<key>begin</key>
					<string>(?x) ([A-Z]) (&lt;)</string>
					<key>end</key>
					<string>(?x) (&gt;)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment-block-syntax</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.quoting.raku#q_angle_string_content</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.pod.code.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.pod.code.raku</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.pod.code.raku</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.pod.c.raku</string>
					<key>contentName</key>
					<string>markup.underline.raku</string>
					<key>begin</key>
					<string>(?x) (U) («)</string>
					<key>end</key>
					<string>(?x) (»)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment-block-syntax</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.quoting.raku#q_chevron_string_content</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.pod.code.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.pod.code.raku</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.pod.code.raku</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.pod.c.raku</string>
					<key>contentName</key>
					<string>markup.italic.raku</string>
					<key>begin</key>
					<string>(?x) (I) («)</string>
					<key>end</key>
					<string>(?x) (»)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment-block-syntax</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.quoting.raku#q_chevron_string_content</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.pod.code.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.pod.code.raku</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.pod.code.raku</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.pod.c.raku</string>
					<key>contentName</key>
					<string>markup.bold.raku</string>
					<key>begin</key>
					<string>(?x) (B) («)</string>
					<key>end</key>
					<string>(?x) (»)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment-block-syntax</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.quoting.raku#q_chevron_string_content</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.pod.code.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.pod.code.raku</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.pod.code.raku</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.pod.c.raku</string>
					<key>contentName</key>
					<string>markup.raw.code.raku</string>
					<key>begin</key>
					<string>(?x) ([A-Z]) («)</string>
					<key>end</key>
					<string>(?x) (»)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment-block-syntax</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.quoting.raku#q_chevron_string_content</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.pod.code.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.pod.code.raku</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.pod.code.raku</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>hex_escapes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>punctuation.hex.raku</string>
					<key>match</key>
					<string>(?x) (\\x) ( \[ ) ( [\dA-Fa-f]+ ) ( \] )</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.punctuation.hex.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.bracket.open.raku</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>routine.name.hex.raku</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.bracket.close.raku</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>interpolation</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>variable.other.identifier.interpolated.raku</string>
					<key>match</key>
					<string>(?x)
(?&lt;!\\)
(\$|@|%|&amp;)
(?!\$)
(\.|\*|:|!|\^|~|=|\?)?  # Twigils
([\pL\pM_])             # Must start with Alpha or underscore
(
   [\p{Nd}\pL\pM_]  # have alphanum/underscore, or a &apos; or -
|                           # followed by an Alpha or underscore
   [\-&apos;] [\pL\pM_]
)*
( \[ .* \] )?             # postcircumfix [ ]
## methods
(?:
  (?:
    ( \. )
    (
       [\pL\pM]
        (?:
          [\p{Nd}\pL\pM_]  # have alphanum/underscore, or a &apos; or -
        |                          # followed by an Alpha or underscore
          [\-&apos;] [\pL\pM_]
        )*

    )
  )?
  ( \( .*?  \) )
)?</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.other.identifier.sigil.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.class.twigil.interpolated.raku</string>
						</dict>
						<key>5</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>begin</key>
									<string>&lt;</string>
									<key>end</key>
									<string>&gt;</string>
									<key>beginCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>keyword.operator.chevron.open.raku</string>
										</dict>
									</dict>
									<key>endCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>keyword.operator.chevron.close.raku</string>
										</dict>
									</dict>
								</dict>
								<dict>
									<key>begin</key>
									<string>\[</string>
									<key>end</key>
									<string>\]</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>$self</string>
										</dict>
									</array>
									<key>beginCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>keyword.operator.bracket.open.raku</string>
										</dict>
									</dict>
									<key>endCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>keyword.operator.bracket.close.raku</string>
										</dict>
									</dict>
								</dict>
							</array>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.dot.raku</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>support.function.raku</string>
						</dict>
						<key>8</key>
						<dict>
							<key>begin</key>
							<string>\(</string>
							<key>end</key>
							<string>\)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>$self</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.paren.open.raku</string>
								</dict>
							</dict>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.paren.close.raku</string>
								</dict>
							</dict>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>include</key>
					<string>#hex_escapes</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#regexp-variables</string>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.interpolation.raku</string>
					<key>begin</key>
					<string>(?x) (?&lt;! m|rx|m:i|rx:i) (\{)</string>
					<key>end</key>
					<string>(\})</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.begin.raku</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.end.raku</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>numbers</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.numeric.radix.raku</string>
					<key>match</key>
					<string>(?x)
(?&lt;= ^ | [=,;^\s{\[(/] | \.\. )
[-−+]?
0[bodx]\w+</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.numeric.raku</string>
					<key>match</key>
					<string>(?x)
          (?&lt;= ^ | [×÷*=,:;^\s{\[(/] | \.\. | … )
          (?: \^? [+\-−] )?
(?:
    (?: \d+ (?: [\_\d]+ \d )? )
    (?: \.  \d+ (?: [\_\d]+ \d )? )?
)
(?:  e  (?:-|−)? \d+ (?: [\_\d]+ \d )? )?</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.numeric.raku</string>
					<key>match</key>
					<string>(?x)
          (?&lt;= ^ | [×÷*=,:;^\s{\[(/] | \.\. )
          (?: [+-−] )?
(?:
    (?: \.  \d+ (?: [\_\d]+ \d )? )
)
(?:  e  (?:-|−)? \d+ (?: [\_\d]+ \d )? )?</string>
				</dict>
			</array>
		</dict>
		<key>p5_escaped_char</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.character.escape.perl</string>
					<key>match</key>
					<string>\\\d+</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.perl</string>
					<key>match</key>
					<string>\\c[^\s\\]</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.perl</string>
					<key>match</key>
					<string>\\g(?:\{(?:\w*|-\d+)\}|\d+)</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.perl</string>
					<key>match</key>
					<string>\\k(?:\{\w*\}|&lt;\w*&gt;|&apos;\w*&apos;)</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.perl</string>
					<key>match</key>
					<string>\\N\{[^\}]*\}</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.perl</string>
					<key>match</key>
					<string>\\o\{\d*\}</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.perl</string>
					<key>match</key>
					<string>\\(?:p|P)(?:\{\w*\}|P)</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.perl</string>
					<key>match</key>
					<string>\\x(?:[0-9a-zA-Z]{2}|\{\w*\})?</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.perl</string>
					<key>match</key>
					<string>\\.</string>
				</dict>
			</array>
		</dict>
		<key>p5_regex</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>contentName</key>
					<string>string.regexp.p5.raku</string>
					<key>begin</key>
					<string>(?x)(?&lt;![\w\/])(m|rx) \s*((?:\s*:\w+)*)?(:P5)((?:\s*:\w+)*)?\s* (\{)</string>
					<key>end</key>
					<string>(?&lt;!\\)(\})([gmixXsuUAJ]+)?</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#p5_escaped_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.quoting.raku#q_brace_string_content</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.regexp.construct.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.section.adverb.regexp.raku</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.section.p5.adverb.regexp.raku</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>entity.name.section.adverb.regexp.raku</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.regexp.raku</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.regexp.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.p5.regexp.modifier.raku</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>contentName</key>
					<string>string.regexp.p5.raku</string>
					<key>begin</key>
					<string>(?x)(?&lt;![\w\/])(m|rx) \s*((?:\s*:\w+)*)?(:P5)((?:\s*:\w+)*)?\s* (\[)</string>
					<key>end</key>
					<string>(?&lt;!\\)(\])([gmixXsuUAJ]+)?</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#p5_escaped_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.quoting.raku#q_bracket_string_content</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.regexp.construct.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.section.adverb.regexp.raku</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.section.p5.adverb.regexp.raku</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>entity.name.section.adverb.regexp.raku</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.regexp.raku</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.regexp.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.p5.regexp.modifier.raku</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>contentName</key>
					<string>string.regexp.p5.raku</string>
					<key>begin</key>
					<string>(?x)(?&lt;![\w\/])(m|rx) \s*((?:\s*:\w+)*)?(:P5)((?:\s*:\w+)*)?\s* (\/)</string>
					<key>end</key>
					<string>(?&lt;!\\)(\/)([gmixXsuUAJ]+)?</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#p5_escaped_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.quoting.raku#q_slash_string_content</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.regexp.construct.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.section.adverb.regexp.raku</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.section.p5.adverb.regexp.raku</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>entity.name.section.adverb.regexp.raku</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.regexp.raku</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.regexp.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.p5.regexp.modifier.raku</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>q_right_double_right_double_string_content</key>
		<dict>
			<key>begin</key>
			<string>”</string>
			<key>end</key>
			<string>”</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#q_right_double_right_double_string_content</string>
				</dict>
			</array>
		</dict>
		<key>regexp-variables</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.match.variable.raku</string>
					<key>begin</key>
					<string>\$(?=\&lt;)</string>
					<key>end</key>
					<string>(?![\w\&lt;\&gt;])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(\&lt;)([\w\-]+)(\&gt;)</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>support.class.match.name.delimiter.regexp.raku</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>variable.other.identifier.regexp.perl6</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>support.class.match.name.delimiter.regexp.raku</string>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>variable.other.identifier.sigil.regexp.perl6</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>shellquotes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.shell.quote.single.raku</string>
					<key>begin</key>
					<string>([qQ]x)\s*({{)</string>
					<key>end</key>
					<string>}}</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.quoting.raku#q_single_string_content</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.q.shell.operator.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.shell.begin.raku</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.shell.begin.raku</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.shell.quote.single.raku</string>
					<key>begin</key>
					<string>([qQ]x)\s*({)</string>
					<key>end</key>
					<string>}</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.quoting.raku#q_single_string_content</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.q.shell.operator.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.shell.begin.raku</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.shell.begin.raku</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.shell.quote.single.raku</string>
					<key>begin</key>
					<string>([qQ]x)\s*(\[\[)</string>
					<key>end</key>
					<string>\]\]</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.quoting.raku#q_single_string_content</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.q.shell.operator.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.shell.begin.raku</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.shell.begin.raku</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.shell.quote.single.raku</string>
					<key>begin</key>
					<string>([Qq]x)\s*(\[)</string>
					<key>end</key>
					<string>\]</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.quoting.raku#q_single_string_content</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.q.shell.operator.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.shell.begin.raku</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.shell.begin.raku</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.shell.quote.single.raku</string>
					<key>begin</key>
					<string>([Qq]x)\s*(\|)</string>
					<key>end</key>
					<string>\|</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.quoting.raku#q_single_string_content</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.q.shell.operator.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.shell.begin.raku</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.shell.begin.raku</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.shell.quote.single.raku</string>
					<key>begin</key>
					<string>([Qq]x)\s*(\/)</string>
					<key>end</key>
					<string>(?&lt;!\\)\/</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>name</key>
							<string>constant.character.escape.raku</string>
							<key>match</key>
							<string>\\\/</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.quoting.raku#q_single_string_content</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.q.shell.operator.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.shell.begin.raku</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.shell.begin.raku</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.shell.quote.double.raku</string>
					<key>begin</key>
					<string>(qqx)\s*({{)</string>
					<key>end</key>
					<string>}}</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variables</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.shell</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.q.shell.operator.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.shell.begin.raku</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.shell.begin.raku</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.shell.quote.double.raku</string>
					<key>begin</key>
					<string>(qqx)\s*({)</string>
					<key>end</key>
					<string>}</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variables</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.shell</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.q.shell.operator.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.shell.begin.raku</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.shell.begin.raku</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.shell.quote.double.raku</string>
					<key>begin</key>
					<string>(qqx)\s*(\[\[)</string>
					<key>end</key>
					<string>\]\]</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variables</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.shell</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.q.shell.operator.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.shell.begin.raku</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.shell.begin.raku</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.shell.quote.double.raku</string>
					<key>begin</key>
					<string>(qqx)\s*(\[)</string>
					<key>end</key>
					<string>\]</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variables</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.shell</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.q.shell.operator.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.shell.begin.raku</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.shell.begin.raku</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.shell.quote.double.raku</string>
					<key>begin</key>
					<string>(qqx)\s*(\|)</string>
					<key>end</key>
					<string>\|</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variables</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.shell</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.q.shell.operator.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.shell.begin.raku</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.shell.begin.raku</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.shell.quote.double.raku</string>
					<key>begin</key>
					<string>(qqx)\s*(\/)</string>
					<key>end</key>
					<string>(?&lt;!\\)\/</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>name</key>
							<string>constant.character.escape.raku</string>
							<key>match</key>
							<string>\\\/</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variables</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.shell</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.q.shell.operator.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.shell.begin.raku</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.shell.begin.raku</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>special_variables</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>keyword.other.special-method.raku</string>
					<key>match</key>
					<string>(?x) [\$\@](?=[\s,;\{\[\(])| (?&lt;=[\(\,])\s*%(?![\w\*\!\?\.\^:=~])| \$_| \$\/| \$\!(?!\w)| \$\d(?!\w)</string>
				</dict>
			</array>
		</dict>
		<key>variables</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#regexp-variables</string>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.variable.container.raku</string>
					<key>match</key>
					<string>(?x)
(\$|@|%|&amp;)
(\.|\*|:|!|\^|~|=|\?)?
(
    (?:[\pL\pM_])           # Must start with Alpha or underscore
    (?:
       [\p{Nd}\pL\pM_]  # have alphanum/underscore, or a &apos; or -
    |                           # followed by an Alpha or underscore
       [\-&apos;] [\pL\pM_]
    )*
)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.other.identifier.sigil.raku</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.class.twigil.raku</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.other.identifier.raku</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
	</dict>
	<key>fileTypes</key>
	<array>
		<string>pod</string>
		<string>pod6</string>
	</array>
</dict>
</plist>
