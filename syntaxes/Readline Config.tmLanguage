<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>name</key>
	<string>Readline Init File</string>
	<key>scopeName</key>
	<string>source.inputrc</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#main</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>comment</key>
		<dict>
			<key>name</key>
			<string>comment.line.number-sign.ini.inputrc</string>
			<key>begin</key>
			<string>#</string>
			<key>end</key>
			<string>$</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.ini.inputrc</string>
				</dict>
			</dict>
		</dict>
		<key>conditional</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.conditional.inputrc</string>
					<key>begin</key>
					<string>(?i)^\s*((\$)if)(?=\s|$)(.*)</string>
					<key>end</key>
					<string>(?i)^\s*((\$)endif)(?=\s|$)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#main</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.flow.if.inputrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.directive.inputrc</string>
						</dict>
						<key>3</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#conditions</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.flow.endif.inputrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.directive.inputrc</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)^\s*((\$)(else|endif))(?=\s|$)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.flow.$3.inputrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.directive.inputrc</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>conditions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)(?:^|\G)\s*(mode)\s*(==|=|!=)\s*(?:(emacs|vi)(?=\s|$))?</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.condition.mode.inputrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.comparison.inputrc</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.language.editing-mode.inputrc</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?:^|\G)\s*(term)\s*(==|=|!=)\s*(\S.*?)\s*$</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.condition.term.inputrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.comparison.inputrc</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.language.terminal-type.inputrc</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?:^|\G)\s*(version)\s*(==|=|!=|&lt;=|&gt;=|&lt;|&gt;)\s*(?:([-+]?[.\d]+))?</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.condition.version.inputrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.comparison.inputrc</string>
						</dict>
						<key>3</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>etc#num</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?:^|\G)\s*([^\s!=#]+)\s*(==|=|!=)\s*(?:(on|off)(?=\s|$)|(\S.*))?</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.condition.named.inputrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.comparison.inputrc</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.logical.bool.boolean.${3:/downcase}.inputrc</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.inputrc</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?:^|\G)\s*([^\s!=#]+)\s*$</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.condition.application.inputrc</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>escapes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.character.escape.alert.inputrc</string>
					<key>match</key>
					<string>\\a</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.backspace.inputrc</string>
					<key>match</key>
					<string>\\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.delete.inputrc</string>
					<key>match</key>
					<string>\\d</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.form-feed.inputrc</string>
					<key>match</key>
					<string>\\f</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.newline.inputrc</string>
					<key>match</key>
					<string>\\n</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.carriage-return.inputrc</string>
					<key>match</key>
					<string>\\r</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.horizontal-tab.inputrc</string>
					<key>match</key>
					<string>\\t</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.vertical-tab.inputrc</string>
					<key>match</key>
					<string>\\v</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.control-prefix.inputrc</string>
					<key>match</key>
					<string>\\C</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.meta-prefix.inputrc</string>
					<key>match</key>
					<string>\\M</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.literal.inputrc</string>
					<key>match</key>
					<string>\\e</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.backslash.inputrc</string>
					<key>match</key>
					<string>\{2}</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.quote.double.inputrc</string>
					<key>match</key>
					<string>\\&quot;</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.quote.single.inputrc</string>
					<key>match</key>
					<string>\\&apos;</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.codepoint.octal.inputrc</string>
					<key>match</key>
					<string>\\[0-7]{1,3}</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.codepoint.hex.inputrc</string>
					<key>match</key>
					<string>\\x[a-fA-F0-9]{1,2}</string>
				</dict>
			</array>
		</dict>
		<key>include</key>
		<dict>
			<key>name</key>
			<string>meta.include.inputrc</string>
			<key>contentName</key>
			<string>string.unquoted.file.path.inputrc</string>
			<key>begin</key>
			<string>^\s*((\$)include)(?=\s|$)</string>
			<key>end</key>
			<string>$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#escapes</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.directive.include.inputrc</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.directive.inputrc</string>
				</dict>
			</dict>
		</dict>
		<key>keyBinding</key>
		<dict>
			<key>name</key>
			<string>meta.key-binding.inputrc</string>
			<key>begin</key>
			<string>(?i)^\s*(?!set(?:\s|$)|\$)(?=[^\s#])</string>
			<key>end</key>
			<string>$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#keyName</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>:[ \t]*</string>
					<key>end</key>
					<string>(?=$)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>name</key>
							<string>string.quoted.double.macro.inputrc</string>
							<key>begin</key>
							<string>\G&quot;</string>
							<key>end</key>
							<string>&quot;|(?=$)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#escapes</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.begin.inputrc</string>
								</dict>
							</dict>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.end.inputrc</string>
								</dict>
							</dict>
						</dict>
						<dict>
							<key>name</key>
							<string>string.quoted.single.macro.inputrc</string>
							<key>begin</key>
							<string>\G&apos;</string>
							<key>end</key>
							<string>&apos;|(?=$)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#escapes</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.begin.inputrc</string>
								</dict>
							</dict>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.end.inputrc</string>
								</dict>
							</dict>
						</dict>
						<dict>
							<key>name</key>
							<string>entity.name.function.inputrc</string>
							<key>match</key>
							<string>\G([-\w]+)</string>
						</dict>
						<dict>
							<key>name</key>
							<string>comment.line.ignored.inputrc</string>
							<key>begin</key>
							<string>(?&lt;=[&apos;&quot;\s])\s*(?=\S)</string>
							<key>end</key>
							<string>$</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>etc#kolon</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>keyName</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.key-name.quoted.inputrc</string>
					<key>begin</key>
					<string>\G(&quot;)</string>
					<key>end</key>
					<string>(&quot;)|(?=$)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#keyNameInnards</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.inputrc</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.inputrc</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.inputrc</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.inputrc</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.key-name.quoted.inputrc</string>
					<key>begin</key>
					<string>\G(&apos;)</string>
					<key>end</key>
					<string>(&apos;)|(?=$)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#keyNameInnards</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>string.quoted.single.inputrc</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.inputrc</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>string.quoted.single.inputrc</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.inputrc</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.key-name.unquoted.inputrc</string>
					<key>match</key>
					<string>\G((?:[^\\:\s]|\\.)+)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#keyNameInnards</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>keyNameInnards</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)(-)?\b(CONTROL|DEL|ESCAPE|ESC|LFD|META|NEWLINE|RETURN|RET|RUBOUT|SPACE|SPC|TAB)\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.dash.hyphen.inputrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.character.key-name.symbolic.inputrc</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>include</key>
					<string>#escapes</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(-)?(\S)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.dash.hyphen.inputrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.character.key-name.literal.inputrc</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>main</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#include</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#conditional</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keyBinding</string>
				</dict>
			</array>
		</dict>
		<key>variable</key>
		<dict>
			<key>begin</key>
			<string>(?i)^\s*(set)(?=\s|$)[ \t]*</string>
			<key>end</key>
			<string>$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)\G(bell-style)(?=\s|$)</string>
					<key>end</key>
					<string>(?i)(visible|audible|none)(?=\s|$)|(?=$|#|\S)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.assignment.inputrc</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.language.bell-style.inputrc</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\G(editing-mode)(?=\s|$)</string>
					<key>end</key>
					<string>(?i)(emacs|vi)(?=\s|$)|(?=$|#|\S)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.assignment.inputrc</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.language.editing-mode.inputrc</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>contentName</key>
					<string>string.unquoted.inputc</string>
					<key>begin</key>
					<string>(?i)\G(comment-begin|emacs-mode-string|vi-(?:cmd|ins)-mode-string)(?=\s|$)\s*</string>
					<key>end</key>
					<string>(?=$)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#escapes</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.assignment.inputrc</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\G([-a-z0-9]+)(?=\s|$)</string>
					<key>end</key>
					<string>(?i)(?:(on|off)(?=\s|$)|([^#\s]+))|(?=$|#)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.assignment.inputrc</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.logical.bool.boolean.${1:/downcase}.inputrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>etc#num</string>
								</dict>
								<dict>
									<key>include</key>
									<string>etc#bareword</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.set.inputrc</string>
				</dict>
			</dict>
		</dict>
	</dict>
	<key>fileTypes</key>
	<array>
		<string>.inputrc</string>
		<string>inputrc</string>
	</array>
</dict>
</plist>
