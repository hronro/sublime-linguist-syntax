<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>name</key>
	<string>smt</string>
	<key>scopeName</key>
	<string>source.smt</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>begin</key>
			<string>(^[ \t]+)?(?=;)</string>
			<key>end</key>
			<string>(?!\G)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.line.semicolon.smt</string>
					<key>begin</key>
					<string>;</string>
					<key>end</key>
					<string>\n</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.smt</string>
						</dict>
					</dict>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.whitespace.comment.leading.smt</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.function.define.smt</string>
			<key>match</key>
			<string>(?x)                                                  (?# multiline mode )
			         (\b(?i:(define-fun|define-fun-rec|define-sort))\b)
					 (\s+)
					 ((\w|\.|\||_|@|%|\-|\!|\?)*)</string>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.function-type.smt</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.smt</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.function.declare.smt</string>
			<key>match</key>
			<string>(\b(?i:(declare-sort|declare-fun|declare-const))\b)(\s+)((\w|\.|\||_|@|%|\-|\!|\?)*)</string>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.function-type.smt</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.smt</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.character.smt</string>
			<key>match</key>
			<string>(#|\?)(\w|[\\+-=&lt;&gt;&apos;&quot;&amp;#])+</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.constant.smt</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.control.smt</string>
			<key>match</key>
			<string>\b(?i:as|let|exists|forall|par|_)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.other.predefined.smt</string>
			<key>match</key>
			<string>(?x)(\:)(assertion-stack-levels|authors|chainable|definition|diagnostic-output-channel
                      |error-behavior|extensions|funs|funs-description|global-declarations|interactive-mode
                      |language|left-assoc|name|named|notes|pattern|print-success|produce-assignments
                      |produce-models|produce-proofs|produce-unsat-assumptions|produce-unsat-cores
                      |random-seed|reason-unknown|regular-output-channel|reproducible-resource-limit|right-assoc
                      |sorts|sorts-description|status|theories|values|verbosity|version)</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.control.commands.smt</string>
			<key>match</key>
			<string>(?x)\b(?i:assert|check-sat|check-sat-assuming|echo|exit
                     |get-assertions|get-assignment|get-info|get-model|get-option
                     |get-proof|get-unsat-assumptions|get-unsat-core|get-value
					 |pop|push|reset|reset-assertions|set-info|set-logic|set-option)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.core.smt</string>
			<key>match</key>
			<string>\b(?i:ite|not|or|and|xor|distinct)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.array.smt</string>
			<key>match</key>
			<string>\b(?i:array|select|store)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.bitvector.smt</string>
			<key>match</key>
			<string>(?x)
					 \b(BitVec|concat|extract|bvnot|bvneg|bvand|bvor|bvadd|bvmul|bvudiv|bvurem|bvshl|bvlshr|bvult   (?#  FixedSizeBitVectors )
					 |bvnand|bvnor|bvxor|bvxnor|bvcomp|bvsub|bvsdiv|bvsrem|bvsmod|bvashr|repeat|zero_extend         (?#  QF_BV)
					 |sign_extend|rotate_left|rotate_right|bvule|bvugt|bvuge|bvslt|bvsle|bvsgt|bvsge|bv[0-9]+       (?#  QF_BV)
				 	)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.ints.smt</string>
			<key>match</key>
			<string>\b(Int|div|mod|abs)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.floatingpoint.smt</string>
			<key>match</key>
			<string>\b(RoundingMode|FloatingPoint|Nan|div|mod|abs)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.reals.smt</string>
			<key>match</key>
			<string>\b(Real)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.reals_ints.smt</string>
			<key>match</key>
			<string>\b(divisible|to_real|to_int|is_int)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.smt</string>
			<key>match</key>
			<string>\b(?i:eq|neq|and|or)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.language.smt</string>
			<key>match</key>
			<string>(?x)\b(Bool|continued-execution|error|false|immediate-exit|incomplete|logic
                    	|memout|sat|success|theory|true|unknown|unsupported|unsat)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.numeric.smt</string>
			<key>match</key>
			<string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.logical.smt</string>
			<key>match</key>
			<string>(?x)
				(?&lt;=(\s|\()) # preceded by space or (
				( &gt; | &lt; | &gt;= | &lt;= | =&gt; | = | ! | [*/+-] )
				(?=(\s|\()) # followed by space or (
				</string>
		</dict>
		<dict>
			<key>name</key>
			<string>variable.parameter.symbol.smt</string>
			<key>begin</key>
			<string>\|</string>
			<key>end</key>
			<string>\|</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.character.escape.smt</string>
					<key>match</key>
					<string>\\.</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.symbol.begin.smt</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.symbol.end.smt</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>string.quoted.double.smt</string>
			<key>begin</key>
			<string>&quot;</string>
			<key>end</key>
			<string>&quot;</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.character.escape.smt</string>
					<key>match</key>
					<string>\\.</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.smt</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.smt</string>
				</dict>
			</dict>
		</dict>
	</array>
	<key>fileTypes</key>
	<array>
		<string>smt2</string>
		<string>smt</string>
	</array>
</dict>
</plist>
