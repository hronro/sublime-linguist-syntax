<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>name</key>
	<string>ShaderLab</string>
	<key>scopeName</key>
	<string>source.shaderlab</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>name</key>
			<string>comment.line.double-slash.shaderlab</string>
			<key>begin</key>
			<string>//</string>
			<key>end</key>
			<string>$</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.type.basic.shaderlab</string>
			<key>match</key>
			<string>\b(?i:Range|Float|Int|Color|Vector|2D|3D|Cube|Any)\b</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#numbers</string>
		</dict>
		<dict>
			<key>name</key>
			<string>storage.type.structure.shaderlab</string>
			<key>match</key>
			<string>\b(?i:Shader|Properties|SubShader|Pass|Category)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.type.propertyname.shaderlab</string>
			<key>match</key>
			<string>\b(?i:Name|Tags|Fallback|CustomEditor|Cull|ZWrite|ZTest|Offset|Blend|BlendOp|ColorMask|AlphaToMask|LOD|Lighting|Stencil|Ref|ReadMask|WriteMask|Comp|CompBack|CompFront|Fail|ZFail|UsePass|GrabPass|Dependency|Material|Diffuse|Ambient|Shininess|Specular|Emission|Fog|Mode|Density|SeparateSpecular|SetTexture|Combine|ConstantColor|Matrix|AlphaTest|ColorMaterial|BindChannels|Bind)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.constant.property-value.shaderlab</string>
			<key>match</key>
			<string>\b(?i:Back|Front|On|Off|[RGBA]{1,3}|AmbientAndDiffuse|Emission)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.constant.property-value.comparisonfunction.shaderlab</string>
			<key>match</key>
			<string>\b(?i:Less|Greater|LEqual|GEqual|Equal|NotEqual|Always|Never)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.constant.property-value.stenciloperation.shaderlab</string>
			<key>match</key>
			<string>\b(?i:Keep|Zero|Replace|IncrSat|DecrSat|Invert|IncrWrap|DecrWrap)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.constant.property-value.texturecombiners.shaderlab</string>
			<key>match</key>
			<string>\b(?i:Previous|Primary|Texture|Constant|Lerp|Double|Quad|Alpha)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.constant.property-value.fog.shaderlab</string>
			<key>match</key>
			<string>\b(?i:Global|Linear|Exp2|Exp)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.constant.property-value.bindchannels.shaderlab</string>
			<key>match</key>
			<string>\b(?i:Vertex|Normal|Tangent|TexCoord0|TexCoord1)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.constant.property-value.blendoperations.shaderlab</string>
			<key>match</key>
			<string>\b(?i:Add|Sub|RevSub|Min|Max|LogicalClear|LogicalSet|LogicalCopyInverted|LogicalCopy|LogicalNoop|LogicalInvert|LogicalAnd|LogicalNand|LogicalOr|LogicalNor|LogicalXor|LogicalEquiv|LogicalAndReverse|LogicalAndInverted|LogicalOrReverse|LogicalOrInverted)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.constant.property-value.blendfactors.shaderlab</string>
			<key>match</key>
			<string>\b(?i:One|Zero|SrcColor|SrcAlpha|DstColor|DstAlpha|OneMinusSrcColor|OneMinusSrcAlpha|OneMinusDstColor|OneMinusDstAlpha)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.variable.reference.shaderlab</string>
			<key>match</key>
			<string>\[([a-zA-Z_][a-zA-Z0-9_]*)\](?!\s*[a-zA-Z_][a-zA-Z0-9_]*\s*\(&quot;)</string>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.attribute.shaderlab</string>
			<key>begin</key>
			<string>(\[)</string>
			<key>end</key>
			<string>(\])</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>support.type.attributename.shaderlab</string>
					<key>match</key>
					<string>\G([a-zA-Z]+)\b</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#numbers</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>support.variable.declaration.shaderlab</string>
			<key>match</key>
			<string>\b([a-zA-Z_][a-zA-Z0-9_]*)\s*\(</string>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.cgblock</string>
			<key>begin</key>
			<string>\b(CGPROGRAM|CGINCLUDE)\b</string>
			<key>end</key>
			<string>\b(ENDCG)\b</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#hlsl-embedded</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.hlslblock</string>
			<key>begin</key>
			<string>\b(HLSLPROGRAM|HLSLINCLUDE)\b</string>
			<key>end</key>
			<string>\b(ENDHLSL)\b</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#hlsl-embedded</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>string.quoted.double.shaderlab</string>
			<key>begin</key>
			<string>&quot;</string>
			<key>end</key>
			<string>&quot;</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>hlsl-embedded</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.hlsl</string>
				</dict>
				<dict>
					<key>name</key>
					<string>storage.type.basic.shaderlab</string>
					<key>match</key>
					<string>\b(fixed([1-4](x[1-4])?)?)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>support.variable.transformations.shaderlab</string>
					<key>match</key>
					<string>\b(UNITY_MATRIX_MVP|UNITY_MATRIX_MV|UNITY_MATRIX_M|UNITY_MATRIX_V|UNITY_MATRIX_P|UNITY_MATRIX_VP|UNITY_MATRIX_T_MV|UNITY_MATRIX_I_V|UNITY_MATRIX_IT_MV|_Object2World|_World2Object|unity_ObjectToWorld|unity_WorldToObject)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>support.variable.camera.shaderlab</string>
					<key>match</key>
					<string>\b(_WorldSpaceCameraPos|_ProjectionParams|_ScreenParams|_ZBufferParams|unity_OrthoParams|unity_CameraProjection|unity_CameraInvProjection|unity_CameraWorldClipPlanes)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>support.variable.time.shaderlab</string>
					<key>match</key>
					<string>\b(_Time|_SinTime|_CosTime|unity_DeltaTime)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>support.variable.lighting.shaderlab</string>
					<key>match</key>
					<string>\b(_LightColor0|_WorldSpaceLightPos0|_LightMatrix0|unity_4LightPosX0|unity_4LightPosY0|unity_4LightPosZ0|unity_4LightAtten0|unity_LightColor|_LightColor|unity_LightPosition|unity_LightAtten|unity_SpotDirection)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>support.variable.fog.shaderlab</string>
					<key>match</key>
					<string>\b(unity_AmbientSky|unity_AmbientEquator|unity_AmbientGround|UNITY_LIGHTMODEL_AMBIENT|unity_FogColor|unity_FogParams)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>support.variable.various.shaderlab</string>
					<key>match</key>
					<string>\b(unity_LODFade)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>support.variable.preprocessor.targetplatform.shaderlab</string>
					<key>match</key>
					<string>\b(SHADER_API_D3D9|SHADER_API_D3D11|SHADER_API_GLCORE|SHADER_API_OPENGL|SHADER_API_GLES|SHADER_API_GLES3|SHADER_API_METAL|SHADER_API_D3D11_9X|SHADER_API_PSSL|SHADER_API_XBOXONE|SHADER_API_PSP2|SHADER_API_WIIU|SHADER_API_MOBILE|SHADER_API_GLSL)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>support.variable.preprocessor.targetmodel.shaderlab</string>
					<key>match</key>
					<string>\b(SHADER_TARGET)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>support.variable.preprocessor.unityversion.shaderlab</string>
					<key>match</key>
					<string>\b(UNITY_VERSION)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>support.variable.preprocessor.platformdifference.shaderlab</string>
					<key>match</key>
					<string>\b(UNITY_BRANCH|UNITY_FLATTEN|UNITY_NO_SCREENSPACE_SHADOWS|UNITY_NO_LINEAR_COLORSPACE|UNITY_NO_RGBM|UNITY_NO_DXT5nm|UNITY_FRAMEBUFFER_FETCH_AVAILABLE|UNITY_USE_RGBA_FOR_POINT_SHADOWS|UNITY_ATTEN_CHANNEL|UNITY_HALF_TEXEL_OFFSET|UNITY_UV_STARTS_AT_TOP|UNITY_MIGHT_NOT_HAVE_DEPTH_Texture|UNITY_NEAR_CLIP_VALUE|UNITY_VPOS_TYPE|UNITY_CAN_COMPILE_TESSELLATION|UNITY_COMPILER_HLSL|UNITY_COMPILER_HLSL2GLSL|UNITY_COMPILER_CG|UNITY_REVERSED_Z)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>support.variable.preprocessor.texture2D.shaderlab</string>
					<key>match</key>
					<string>\b(UNITY_PASS_FORWARDBASE|UNITY_PASS_FORWARDADD|UNITY_PASS_DEFERRED|UNITY_PASS_SHADOWCASTER|UNITY_PASS_PREPASSBASE|UNITY_PASS_PREPASSFINAL)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>support.class.structures.shaderlab</string>
					<key>match</key>
					<string>\b(appdata_base|appdata_tan|appdata_full|appdata_img)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>support.class.surface.shaderlab</string>
					<key>match</key>
					<string>\b(SurfaceOutputStandardSpecular|SurfaceOutputStandard|SurfaceOutput|Input)\b</string>
				</dict>
			</array>
		</dict>
		<key>numbers</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.numeric.shaderlab</string>
					<key>match</key>
					<string>\b([0-9]+\.?[0-9]*)\b</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>fileTypes</key>
	<array>
		<string>shader</string>
	</array>
</dict>
</plist>
