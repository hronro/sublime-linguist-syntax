<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>name</key>
	<string>Sieve</string>
	<key>scopeName</key>
	<string>source.sieve</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#main</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>action</key>
		<dict>
			<key>name</key>
			<string>meta.action.sieve</string>
			<key>begin</key>
			<string>\b(?!\d)\w+</string>
			<key>end</key>
			<string>(?=\s*(?:$|\]|\)|[};,]))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#arguments</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.action.sieve</string>
				</dict>
			</dict>
		</dict>
		<key>arguments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#taggedArgument</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comparator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#stringBlock</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#testList</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#stringList</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#numbers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#punctuation</string>
				</dict>
			</array>
		</dict>
		<key>block</key>
		<dict>
			<key>name</key>
			<string>meta.block.sieve</string>
			<key>begin</key>
			<string>{</string>
			<key>end</key>
			<string>}</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#main</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.brace.bracket.curly.begin.sieve</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.brace.bracket.curly.end.sieve</string>
				</dict>
			</dict>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.line.number-sign.sieve</string>
					<key>begin</key>
					<string>#</string>
					<key>end</key>
					<string>$</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.sieve</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>comment.block.bracketed.sieve</string>
					<key>begin</key>
					<string>/\*</string>
					<key>end</key>
					<string>\*/</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.begin.sieve</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.end.sieve</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>comparator</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>storage.modifier.comparator.${3:/downcase}.sieve</string>
					<key>match</key>
					<string>(?i)(&quot;)i(;)(octet|ascii-casemap)(&quot;)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comparator.begin.sieve</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.delimiter.semicolon.sieve</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comparator.end.sieve</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=:comparator)\s*((&quot;)(?!i;(?:octet|ascii-casemap)&quot;)[^&quot;]+(&quot;))</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.comparator.non-standard.sieve</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comparator.begin.sieve</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comparator.end.sieve</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>conditional</key>
		<dict>
			<key>name</key>
			<string>meta.conditional.${1:/downcase}.sieve</string>
			<key>begin</key>
			<string>(?i)\b(if|elsif|else)(?=[\s{]|$)</string>
			<key>end</key>
			<string>(?&lt;=\})</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#test</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.flow.${1:/downcase}.sieve</string>
				</dict>
			</dict>
		</dict>
		<key>encodedCharacter</key>
		<dict>
			<key>name</key>
			<string>meta.encoded-character.${2:/downcase}.sieve</string>
			<key>match</key>
			<string>(?i)(\$\{)(hex|unicode)(:)([\s0-9A-Fa-f]+)(})</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.embedded.begin.sieve</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.encoding.${2:/downcase}.sieve</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.delimiter.separator.colon.sieve</string>
				</dict>
				<key>4</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>name</key>
							<string>constant.numeric.integer.hex.sieve</string>
							<key>match</key>
							<string>[0-9A-Fa-f]+</string>
						</dict>
					</array>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.embedded.end.sieve</string>
				</dict>
			</dict>
		</dict>
		<key>main</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#conditional</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#require</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#arguments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#action</string>
				</dict>
			</array>
		</dict>
		<key>numbers</key>
		<dict>
			<key>name</key>
			<string>constant.numeric.integer.int.decimal.sieve</string>
			<key>match</key>
			<string>(?i)\d+(K|M|G)?</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.language.quantifier.${1:/downcase}b.sieve</string>
				</dict>
			</dict>
		</dict>
		<key>punctuation</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>punctuation.separator.delimiter.sieve</string>
					<key>match</key>
					<string>,</string>
				</dict>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.statement.semicolon.sieve</string>
					<key>match</key>
					<string>;</string>
				</dict>
			</array>
		</dict>
		<key>require</key>
		<dict>
			<key>name</key>
			<string>keyword.control.directive.include.require.sieve</string>
			<key>match</key>
			<string>\b(?i:require)(?=\s|$|\[)</string>
		</dict>
		<key>stringBlock</key>
		<dict>
			<key>name</key>
			<string>meta.multi-line.sieve</string>
			<key>contentName</key>
			<string>string.unquoted.heredoc.multiline.sieve</string>
			<key>begin</key>
			<string>(?i)\b(text(:))\s*(?:$|(#.*))</string>
			<key>end</key>
			<string>^\.$</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.text.sieve</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.heredoc.begin.sieve</string>
				</dict>
				<key>3</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
					</array>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.heredoc.end.sieve</string>
				</dict>
			</dict>
		</dict>
		<key>stringEscapes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.character.escape.backslash.sieve</string>
					<key>match</key>
					<string>(\\)\\</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.escape.backslash.sieve</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.quote.sieve</string>
					<key>match</key>
					<string>(\\)&quot;</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.escape.backslash.sieve</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>invalid.deprecated.unknown-escape.sieve</string>
					<key>match</key>
					<string>(\\).</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.escape.backslash.sieve</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>stringList</key>
		<dict>
			<key>name</key>
			<string>meta.string-list.sieve</string>
			<key>begin</key>
			<string>\[</string>
			<key>end</key>
			<string>\]</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#main</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.bracket.square.begin.sieve</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.bracket.square.end.sieve</string>
				</dict>
			</dict>
		</dict>
		<key>strings</key>
		<dict>
			<key>name</key>
			<string>string.quoted.double.sieve</string>
			<key>begin</key>
			<string>&quot;</string>
			<key>end</key>
			<string>&quot;</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#encodedCharacter</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#stringEscapes</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.sieve</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.sieve</string>
				</dict>
			</dict>
		</dict>
		<key>taggedArgument</key>
		<dict>
			<key>name</key>
			<string>keyword.operator.tagged-argument.sieve</string>
			<key>match</key>
			<string>(:)(?!\d)\w+</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.colon.tagged-argument.sieve</string>
				</dict>
			</dict>
		</dict>
		<key>test</key>
		<dict>
			<key>name</key>
			<string>meta.tests.sieve</string>
			<key>begin</key>
			<string>(?:\G|^|(?&lt;=,|\())\s*(?i:(not)\s+)?((?:[^\s(){},:\[\]#/]|/[^*])++)</string>
			<key>end</key>
			<string>(?=\s*[{,\)])</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#arguments</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.test.negation.sieve</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.test.sieve</string>
				</dict>
			</dict>
		</dict>
		<key>testList</key>
		<dict>
			<key>name</key>
			<string>meta.test-list.sieve</string>
			<key>begin</key>
			<string>\(</string>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#test</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#main</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.bracket.round.begin.sieve</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.bracket.round.end.sieve</string>
				</dict>
			</dict>
		</dict>
	</dict>
	<key>fileTypes</key>
	<array>
		<string>sieve</string>
	</array>
</dict>
</plist>
