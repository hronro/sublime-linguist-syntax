<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>name</key>
	<string>Slice</string>
	<key>scopeName</key>
	<string>source.slice</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#preprocessor</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#metadata.global</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#storage.module</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>annotation</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>storage.type.annotation.slice</string>
					<key>match</key>
					<string>(@)\S*\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.annotation.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>comment</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment.line</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment.block</string>
				</dict>
			</array>
		</dict>
		<key>comment.block</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.block.slice</string>
					<key>contentName</key>
					<string>text.slice</string>
					<key>begin</key>
					<string>\/\*</string>
					<key>end</key>
					<string>\*\/</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#annotation</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#link</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#line.continuation</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.block.begin.slice</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.block.end.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>comment.line</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.line.slice</string>
					<key>contentName</key>
					<string>text.slice</string>
					<key>begin</key>
					<string>\/\/</string>
					<key>end</key>
					<string>$</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#annotation</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#link</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#line.continuation</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.line.begin.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>constant</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#constant.boolean</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constant.string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constant.numeric.float</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constant.numeric.hex</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constant.numeric.oct</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constant.numeric.dec</string>
				</dict>
			</array>
		</dict>
		<key>constant.boolean</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(?:(true)|(false))\b</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>constant.langauge.slice</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.boolean.true.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.boolean.false.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>constant.numeric.dec</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.numeric.integer.slice</string>
					<key>match</key>
					<string>(-|\+)?\b(?:0|[1-9]\d*)\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.numeric.sign.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>constant.numeric.float</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.numeric.float.slice</string>
					<key>match</key>
					<string>(-|\+)?(?:\d+(\.)\d*|\d*(\.)\d+|\d+(?=e|E|f|F))(?:(e|E)-?\d+)?(f|F)?</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.numeric.sign.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.decimal.slice</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.decimal.slice</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.numeric.exponent.slice</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.float.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>constant.numeric.hex</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.numeric.hex.slice</string>
					<key>match</key>
					<string>(-|\+)?\b(0x)[\da-fA-F]+\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.numeric.sign.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.numeric.hex.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>constant.numeric.oct</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.numeric.octal.slice</string>
					<key>match</key>
					<string>(-|\+)?\b(0)(\d+)\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.numeric.sign.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.numeric.oct.slice</string>
						</dict>
						<key>3</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>name</key>
									<string>invalid.illegal.oct.slice</string>
									<key>match</key>
									<string>[8-9]</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>constant.string</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>string.quoted.double.slice</string>
					<key>begin</key>
					<string>&quot;</string>
					<key>end</key>
					<string>(&quot;)|$</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\.</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#line.continuation</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.slice</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.mismatched-quotes.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>invalid</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>invalid.illegal</string>
					<key>match</key>
					<string>\S</string>
				</dict>
			</array>
		</dict>
		<key>line.continuation</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\\)\s*$</string>
					<key>end</key>
					<string>^</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.continuation.backslash.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>link</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>variable.link.slice</string>
					<key>match</key>
					<string>(\b\S*)?(#)\S*\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.link.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>metadata</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#metadata.global</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#metadata.local</string>
				</dict>
			</array>
		</dict>
		<key>metadata.content</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#standard</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&quot;)</string>
					<key>end</key>
					<string>(?=\])|(?&lt;=,)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#line.continuation</string>
						</dict>
						<dict>
							<key>name</key>
							<string>string.quoted.double.slice</string>
							<key>match</key>
							<string>((?:[^\\&quot;]|\\.)+)</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#metadata.identifier</string>
										</dict>
									</array>
								</dict>
							</dict>
						</dict>
						<dict>
							<key>begin</key>
							<string>(&quot;)</string>
							<key>end</key>
							<string>(?=\])|(,)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#standard</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>string.quoted.double.slice</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.end.slice</string>
								</dict>
							</dict>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.metadata.slice</string>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.slice</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.slice</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>end</key>
					<string>(?=\])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#line.continuation</string>
						</dict>
						<dict>
							<key>name</key>
							<string>string.unquoted.slice</string>
							<key>match</key>
							<string>((?:[^\\&quot;\]]|\\.)+)</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#metadata.identifier</string>
										</dict>
									</array>
								</dict>
							</dict>
						</dict>
						<dict>
							<key>name</key>
							<string>invalid.illegal.punctuation.definition.string.slice</string>
							<key>match</key>
							<string>&quot;</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>metadata.global</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.metadata.global.slice</string>
					<key>begin</key>
					<string>\[\[</string>
					<key>end</key>
					<string>\]\]</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#metadata.content</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.metadata.global.begin.slice</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.metadata.global.end.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>metadata.identifier</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>entity.metadata.directive.slice</string>
					<key>match</key>
					<string>\S+</string>
				</dict>
			</array>
		</dict>
		<key>metadata.local</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.metadata.local.slice</string>
					<key>begin</key>
					<string>\[</string>
					<key>end</key>
					<string>\]</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#metadata.content</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.metadata.local.begin.slice</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.metadata.local.end.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>preprocessor</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#preprocessor.if</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#preprocessor.ifdef</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#preprocessor.ifndef</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#preprocessor.elif</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#preprocessor.else</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#preprocessor.endif</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#preprocessor.define</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#preprocessor.undef</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#preprocessor.include</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#preprocessor.pragma</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#preprocessor.line</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#preprocessor.error</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#preprocessor.null</string>
				</dict>
			</array>
		</dict>
		<key>preprocessor.define</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.preprocessor.define.slice</string>
					<key>begin</key>
					<string>(#)\s*define\b</string>
					<key>end</key>
					<string>$</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standardP</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\b(\w+)((\())</string>
							<key>end</key>
							<string>$</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#standardP</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>\b\w+\b</string>
									<key>end</key>
									<string>(?=\))|(,)|($)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#standardP</string>
										</dict>
									</array>
									<key>beginCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>patterns</key>
											<array>
												<dict>
													<key>include</key>
													<string>#preprocessor.identifier</string>
												</dict>
											</array>
										</dict>
									</dict>
									<key>endCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>punctuation.separator.parameter.preprocessor.slice</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>invalid.mismatched.parenthesis.slice</string>
										</dict>
									</dict>
								</dict>
								<dict>
									<key>begin</key>
									<string>\b\w+\b</string>
									<key>end</key>
									<string>(?=\))|((,))|($)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#standardP</string>
										</dict>
									</array>
									<key>beginCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>punctuation.variable.parameter.preprocessor.slice</string>
										</dict>
									</dict>
									<key>endCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>punctuation.separator.parameter.preprocessor.slice</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>invalid.trailing-comma.slice</string>
										</dict>
										<key>3</key>
										<dict>
											<key>name</key>
											<string>invalid.mismatched.parenthesis.slice</string>
										</dict>
									</dict>
								</dict>
								<dict>
									<key>begin</key>
									<string>(\))</string>
									<key>end</key>
									<string>$</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#standardP</string>
										</dict>
										<dict>
											<key>name</key>
											<string>constant.preprocessor.slice</string>
											<key>match</key>
											<string>\S</string>
										</dict>
									</array>
									<key>beginCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>meta.group.parameters.preprocessor.slice</string>
										</dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>punctuation.section.group.parameters.end.slice</string>
										</dict>
									</dict>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#preprocessor.identifier</string>
										</dict>
									</array>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>meta.group.parameters.preprocessor.slice</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.group.parameters.begin.slice</string>
								</dict>
							</dict>
						</dict>
						<dict>
							<key>begin</key>
							<string>\b\w+\b</string>
							<key>end</key>
							<string>$</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#standardP</string>
								</dict>
								<dict>
									<key>name</key>
									<string>constant.preprocessor.slice</string>
									<key>match</key>
									<string>\S</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#preprocessor.identifier</string>
										</dict>
									</array>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.preprocessor.define.slice</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.preprocessor.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>preprocessor.elif</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.preprocessor.elif.slice</string>
					<key>begin</key>
					<string>(#)\s*elif\b</string>
					<key>end</key>
					<string>$</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standardP</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.preprocessor.elif.slice</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.preprocessor.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>preprocessor.else</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.preprocessor.endif.slice</string>
					<key>begin</key>
					<string>(#)\s*else\b</string>
					<key>end</key>
					<string>$</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standardP</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.preprocessor.else.slice</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.preprocessor.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>preprocessor.endif</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.preprocessor.endif.slice</string>
					<key>begin</key>
					<string>(#)\s*endif\b</string>
					<key>end</key>
					<string>$</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standardP</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.preprocessor.endif.slice</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.preprocessor.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>preprocessor.error</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.preprocessor.error.slice</string>
					<key>begin</key>
					<string>((#)\s*error)\b</string>
					<key>end</key>
					<string>$</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standardP</string>
						</dict>
						<dict>
							<key>name</key>
							<string>text.error.slice</string>
							<key>match</key>
							<string>.</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.preprocessor.error.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.preprocessor.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>preprocessor.identifier</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>entity.identifier.preproprocessor.slice</string>
					<key>match</key>
					<string>\b[a-zA-Z_][a-zA-Z0-9_]*\b</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#invalid</string>
				</dict>
			</array>
		</dict>
		<key>preprocessor.if</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.preprocessor.if.slice</string>
					<key>begin</key>
					<string>(#)\s*if\b</string>
					<key>end</key>
					<string>$</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standardP</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.preprocessor.if.slice</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.preprocessor.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>preprocessor.ifdef</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.preprocessor.ifdef.slice</string>
					<key>begin</key>
					<string>(#)\s*ifdef\b</string>
					<key>end</key>
					<string>$</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standardP</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\b\w+\b</string>
							<key>end</key>
							<string>$</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#standardP</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#preprocessor.identifier</string>
										</dict>
									</array>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.preprocessor.ifdef.slice</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.preprocessor.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>preprocessor.ifndef</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.preprocessor.ifndef.slice</string>
					<key>begin</key>
					<string>(#)\s*ifndef\b</string>
					<key>end</key>
					<string>$</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standardP</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\b\w+\b</string>
							<key>end</key>
							<string>$</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#standardP</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#preprocessor.identifier</string>
										</dict>
									</array>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.preprocessor.ifndef.slice</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.preprocessor.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>preprocessor.include</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.preprocessor.include.slice</string>
					<key>begin</key>
					<string>((#)\s*include)\b</string>
					<key>end</key>
					<string>$</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standardP</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?&lt;=&quot;|&gt;)</string>
							<key>end</key>
							<string>$</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#standardP</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>name</key>
							<string>string.quoted.double.slice</string>
							<key>contentName</key>
							<string>entity.name.header.slice</string>
							<key>begin</key>
							<string>&quot;</string>
							<key>end</key>
							<string>(&quot;)|($)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\\.</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#line.continuation</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.begin.slice</string>
								</dict>
							</dict>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.end.slice</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>invalid.illegal.mismatched-quotes.slice</string>
								</dict>
							</dict>
						</dict>
						<dict>
							<key>name</key>
							<string>string.quoted.other.angle.slice</string>
							<key>contentName</key>
							<string>entity.name.header.slice</string>
							<key>begin</key>
							<string>&lt;</string>
							<key>end</key>
							<string>(&gt;)|($)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\\.</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#line.continuation</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.begin.slice</string>
								</dict>
							</dict>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.end.slice</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>invalid.illegal.mismatched-quotes.slice</string>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.preprocessor.include.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.preprocessor.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>preprocessor.line</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.preprocessor.line.slice</string>
					<key>begin</key>
					<string>((#)\s*line)\b</string>
					<key>end</key>
					<string>$</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standardP</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\b[\d]+\b</string>
							<key>end</key>
							<string>$</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#standardP</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>(?&lt;=&quot;)</string>
									<key>end</key>
									<string>$</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#standardP</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>name</key>
									<string>string.quoted.double.slice</string>
									<key>contentName</key>
									<string>entity.name.file.slice</string>
									<key>begin</key>
									<string>&quot;</string>
									<key>end</key>
									<string>(&quot;)|($)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>match</key>
											<string>\\.</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#line.continuation</string>
										</dict>
									</array>
									<key>beginCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>punctuation.definition.string.begin.slice</string>
										</dict>
									</dict>
									<key>endCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>punctuation.definition.string.end.slice</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>invalid.illegal.mismatched-quotes.slice</string>
										</dict>
									</dict>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#constant.numeric.dec</string>
										</dict>
									</array>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.preprocessor.line.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.preprocessor.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>preprocessor.null</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.preprocessor.null.slice</string>
					<key>begin</key>
					<string>(#)</string>
					<key>end</key>
					<string>$</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standardP</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.preprocessor.slice</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.preprocessor.null.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>preprocessor.pragma</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.preprocessor.pragma.slice</string>
					<key>begin</key>
					<string>((#)\s*pragma)\b</string>
					<key>end</key>
					<string>$</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standardP</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\b\S+\b</string>
							<key>end</key>
							<string>$</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#standardP</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>keyword.control.preprocessor.pragma.other.slice</string>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.preprocessor.pragma.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.preprocessor.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>preprocessor.undef</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.preprocessor.undef.slice</string>
					<key>begin</key>
					<string>((#)\s*undef)\b</string>
					<key>end</key>
					<string>$</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standardP</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\b\w+\b</string>
							<key>end</key>
							<string>$</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#standardP</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#preprocessor.identifier</string>
										</dict>
									</array>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.preprocessor.undef.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.preprocessor.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>standard</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#preprocessor</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#line.continuation</string>
				</dict>
			</array>
		</dict>
		<key>standardP</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#line.continuation</string>
				</dict>
			</array>
		</dict>
		<key>storage</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#storage.module</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#storage.enum</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#storage.struct</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#storage.sequence</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#storage.dictionary</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#storage.interface</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#storage.exception</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#storage.class</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#storage.basic</string>
				</dict>
			</array>
		</dict>
		<key>storage.basic</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#storage.modifier</string>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.bool.slice</string>
					<key>begin</key>
					<string>\\?\bbool\b\s*\??</string>
					<key>end</key>
					<string>(;)|((?=}))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standard</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\\?\b\w+\b</string>
							<key>end</key>
							<string>(?=;|})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage.basic.assignment</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>entity.name.bool.slice</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#storage.identifier</string>
										</dict>
									</array>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage.types</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.semicolon.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.missing.semicolon.slice</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.byte.slice</string>
					<key>begin</key>
					<string>\\?\bbyte\b\s*\??</string>
					<key>end</key>
					<string>(;)|((?=}))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standard</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\\?\b\w+\b</string>
							<key>end</key>
							<string>(?=;|})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage.basic.assignment</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>entity.name.byte.slice</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#storage.identifier</string>
										</dict>
									</array>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage.types</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.semicolon.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.missing.semicolon.slice</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.short.slice</string>
					<key>begin</key>
					<string>\\?\bshort\b\s*\??</string>
					<key>end</key>
					<string>(;)|((?=}))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standard</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\\?\b\w+\b</string>
							<key>end</key>
							<string>(?=;|})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage.basic.assignment</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>entity.name.short.slice</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#storage.identifier</string>
										</dict>
									</array>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage.types</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.semicolon.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.missing.semicolon.slice</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.ushort.slice</string>
					<key>begin</key>
					<string>\\?\bushort\b\s*\??</string>
					<key>end</key>
					<string>(;)|((?=}))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standard</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\\?\b\w+\b</string>
							<key>end</key>
							<string>(?=;|})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage.basic.assignment</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>entity.name.ushort.slice</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#storage.identifier</string>
										</dict>
									</array>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage.types</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.semicolon.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.missing.semicolon.slice</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.int.slice</string>
					<key>begin</key>
					<string>\\?\bint\b\s*\??</string>
					<key>end</key>
					<string>(;)|((?=}))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standard</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\\?\b\w+\b</string>
							<key>end</key>
							<string>(?=;|})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage.basic.assignment</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>entity.name.int.slice</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#storage.identifier</string>
										</dict>
									</array>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage.types</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.semicolon.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.missing.semicolon.slice</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.uint.slice</string>
					<key>begin</key>
					<string>\\?\buint\b\s*\??</string>
					<key>end</key>
					<string>(;)|((?=}))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standard</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\\?\b\w+\b</string>
							<key>end</key>
							<string>(?=;|})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage.basic.assignment</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>entity.name.uint.slice</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#storage.identifier</string>
										</dict>
									</array>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage.types</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.semicolon.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.missing.semicolon.slice</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.varint.slice</string>
					<key>begin</key>
					<string>\\?\bvarint\b\s*\??</string>
					<key>end</key>
					<string>(;)|((?=}))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standard</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\\?\b\w+\b</string>
							<key>end</key>
							<string>(?=;|})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage.basic.assignment</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>entity.name.varint.slice</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#storage.identifier</string>
										</dict>
									</array>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage.types</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.semicolon.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.missing.semicolon.slice</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.varuint.slice</string>
					<key>begin</key>
					<string>\\?\bvaruint\b\s*\??</string>
					<key>end</key>
					<string>(;)|((?=}))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standard</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\\?\b\w+\b</string>
							<key>end</key>
							<string>(?=;|})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage.basic.assignment</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>entity.name.varuint.slice</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#storage.identifier</string>
										</dict>
									</array>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage.types</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.semicolon.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.missing.semicolon.slice</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.long.slice</string>
					<key>begin</key>
					<string>\\?\blong\b\s*\??</string>
					<key>end</key>
					<string>(;)|((?=}))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standard</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\\?\b\w+\b</string>
							<key>end</key>
							<string>(?=;|})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage.basic.assignment</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>entity.name.long.slice</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#storage.identifier</string>
										</dict>
									</array>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage.types</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.semicolon.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.missing.semicolon.slice</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.ulong.slice</string>
					<key>begin</key>
					<string>\\?\bulong\b\s*\??</string>
					<key>end</key>
					<string>(;)|((?=}))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standard</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\\?\b\w+\b</string>
							<key>end</key>
							<string>(?=;|})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage.basic.assignment</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>entity.name.ulong.slice</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#storage.identifier</string>
										</dict>
									</array>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage.types</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.semicolon.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.missing.semicolon.slice</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.varlong.slice</string>
					<key>begin</key>
					<string>\\?\bvarlong\b\s*\??</string>
					<key>end</key>
					<string>(;)|((?=}))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standard</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\\?\b\w+\b</string>
							<key>end</key>
							<string>(?=;|})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage.basic.assignment</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>entity.name.varlong.slice</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#storage.identifier</string>
										</dict>
									</array>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage.types</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.semicolon.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.missing.semicolon.slice</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.varulong.slice</string>
					<key>begin</key>
					<string>\\?\bvarulong\b\s*\??</string>
					<key>end</key>
					<string>(;)|((?=}))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standard</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\\?\b\w+\b</string>
							<key>end</key>
							<string>(?=;|})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage.basic.assignment</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>entity.name.varulong.slice</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#storage.identifier</string>
										</dict>
									</array>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage.types</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.semicolon.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.missing.semicolon.slice</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.float.slice</string>
					<key>begin</key>
					<string>\\?\bfloat\b\s*\??</string>
					<key>end</key>
					<string>(;)|((?=}))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standard</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\\?\b\w+\b</string>
							<key>end</key>
							<string>(?=;|})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage.basic.assignment</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>entity.name.float.slice</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#storage.identifier</string>
										</dict>
									</array>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage.types</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.semicolon.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.missing.semicolon.slice</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.double.slice</string>
					<key>begin</key>
					<string>\\?\bdouble\b\s*\??</string>
					<key>end</key>
					<string>(;)|((?=}))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standard</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\\?\b\w+\b</string>
							<key>end</key>
							<string>(?=;|})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage.basic.assignment</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>entity.name.double.slice</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#storage.identifier</string>
										</dict>
									</array>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage.types</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.semicolon.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.missing.semicolon.slice</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.string.slice</string>
					<key>begin</key>
					<string>\\?\bstring\b\s*\??</string>
					<key>end</key>
					<string>(;)|((?=}))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standard</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\\?\b\w+\b</string>
							<key>end</key>
							<string>(?=;|})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage.basic.assignment</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>entity.name.string.slice</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#storage.identifier</string>
										</dict>
									</array>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage.types</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.semicolon.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.missing.semicolon.slice</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.type.slice</string>
					<key>begin</key>
					<string>\\?\b[:\w]+\b\s*\??</string>
					<key>end</key>
					<string>(;)|((?=}))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standard</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\\?\b\w+\b</string>
							<key>end</key>
							<string>(?=;|})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage.basic.assignment</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>entity.name.slice</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#storage.identifier</string>
										</dict>
									</array>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage.types.custom</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.semicolon.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.missing.semicolon.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>storage.basic.assignment</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#standard</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>=</string>
					<key>end</key>
					<string>(?=;|})</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standard</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#constant</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>storage.class</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#storage.modifier</string>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.class.slice</string>
					<key>begin</key>
					<string>(?&lt;!\\)\bclass\b</string>
					<key>end</key>
					<string>(})|(;)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standard</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\\?\b\w+\b</string>
							<key>end</key>
							<string>(?=}|;)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#standard</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>(?&lt;!\\)(?:(\bextends\b)|(:))</string>
									<key>end</key>
									<string>(?=})|((?=;))</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#standard</string>
										</dict>
										<dict>
											<key>begin</key>
											<string>\\?[:\w]+</string>
											<key>end</key>
											<string>(?=}|;)</string>
											<key>patterns</key>
											<array>
												<dict>
													<key>include</key>
													<string>#standard</string>
												</dict>
												<dict>
													<key>include</key>
													<string>#storage.class.implements</string>
												</dict>
											</array>
											<key>beginCaptures</key>
											<dict>
												<key>0</key>
												<dict>
													<key>patterns</key>
													<array>
														<dict>
															<key>include</key>
															<string>#storage.types</string>
														</dict>
													</array>
												</dict>
											</dict>
										</dict>
										<dict>
											<key>name</key>
											<string>invalid.illegal.missing-types.slice</string>
											<key>include</key>
											<string>#storage.class.implements</string>
										</dict>
									</array>
									<key>beginCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>storage.modifier.extends.slice</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>punctuation.storage.modifier.extends.slice</string>
										</dict>
									</dict>
									<key>endCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>invalid.illegal.missing-brace.slice</string>
										</dict>
									</dict>
								</dict>
								<dict>
									<key>include</key>
									<string>#storage.class.implements</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>entity.name.class.slice</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#storage.identifier</string>
										</dict>
									</array>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>storage.type.class.slice</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.block.end.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.semicolon.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>storage.class.body</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>{</string>
					<key>end</key>
					<string>(?=})</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standard</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#storage.basic</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.block.begin.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>storage.class.implements</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!\\)\bimplements\b</string>
					<key>end</key>
					<string>(?=})|((?=;))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standard</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\\?[:\w]+</string>
							<key>end</key>
							<string>(?={|}|;)|(,)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#standard</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#storage.types</string>
										</dict>
									</array>
								</dict>
							</dict>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.class.implements.slice</string>
								</dict>
							</dict>
						</dict>
						<dict>
							<key>include</key>
							<string>#storage.class.body</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.implements.slice</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.missing-brace.slice</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>include</key>
					<string>#storage.class.body</string>
				</dict>
			</array>
		</dict>
		<key>storage.dictionary</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#storage.modifier</string>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.dictionary.slice</string>
					<key>begin</key>
					<string>(?&lt;!\\)\bdictionary\b</string>
					<key>end</key>
					<string>(;)|((?=}))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standard</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(\&lt;)</string>
							<key>end</key>
							<string>(?=;|})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#standard</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>(\\?[:\w]+)|(?=\&gt;)</string>
									<key>end</key>
									<string>(?=;|})</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#standard</string>
										</dict>
										<dict>
											<key>begin</key>
											<string>(,)|(?=\&gt;)</string>
											<key>end</key>
											<string>(?=;|{|})</string>
											<key>patterns</key>
											<array>
												<dict>
													<key>include</key>
													<string>#standard</string>
												</dict>
												<dict>
													<key>begin</key>
													<string>(\\?[:\w]+)|(?=\&gt;)</string>
													<key>end</key>
													<string>(?=;|})</string>
													<key>patterns</key>
													<array>
														<dict>
															<key>include</key>
															<string>#standard</string>
														</dict>
														<dict>
															<key>begin</key>
															<string>(\&gt;)</string>
															<key>end</key>
															<string>(?=;|})</string>
															<key>patterns</key>
															<array>
																<dict>
																	<key>include</key>
																	<string>#standard</string>
																</dict>
																<dict>
																	<key>begin</key>
																	<string>\\?\b\w+\b</string>
																	<key>end</key>
																	<string>(?=;|})</string>
																	<key>beginCaptures</key>
																	<dict>
																		<key>0</key>
																		<dict>
																			<key>name</key>
																			<string>entity.name.dictionary.slice</string>
																			<key>patterns</key>
																			<array>
																				<dict>
																					<key>include</key>
																					<string>#storage.identifier</string>
																				</dict>
																			</array>
																		</dict>
																	</dict>
																</dict>
															</array>
															<key>beginCaptures</key>
															<dict>
																<key>0</key>
																<dict>
																	<key>name</key>
																	<string>meta.generic.dictionary.slice</string>
																</dict>
																<key>1</key>
																<dict>
																	<key>name</key>
																	<string>punctuation.definition.generic.end.slice</string>
																</dict>
															</dict>
														</dict>
													</array>
													<key>beginCaptures</key>
													<dict>
														<key>1</key>
														<dict>
															<key>name</key>
															<string>meta.generic.dictionary.slice</string>
															<key>patterns</key>
															<array>
																<dict>
																	<key>include</key>
																	<string>#storage.types</string>
																</dict>
															</array>
														</dict>
														<key>2</key>
														<dict>
															<key>name</key>
															<string>invalid.illegal.missing-type.slice</string>
														</dict>
													</dict>
												</dict>
											</array>
											<key>beginCaptures</key>
											<dict>
												<key>0</key>
												<dict>
													<key>name</key>
													<string>meta.generic.dictionary.slice</string>
												</dict>
												<key>1</key>
												<dict>
													<key>name</key>
													<string>punctuation.separator.dictionary.slice</string>
												</dict>
												<key>2</key>
												<dict>
													<key>name</key>
													<string>invalid.illegal.missing-type.slice</string>
												</dict>
											</dict>
										</dict>
									</array>
									<key>beginCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>meta.generic.dictionary.slice</string>
											<key>patterns</key>
											<array>
												<dict>
													<key>include</key>
													<string>#storage.types</string>
												</dict>
											</array>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>invalid.illegal.missing-type.slice</string>
										</dict>
									</dict>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>meta.generic.dictionary.slice</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.generic.begin.slice</string>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>storage.type.dictionary.slice</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.semicolon.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.missing.semicolon.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>storage.enum</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#storage.modifier</string>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.enum.slice</string>
					<key>begin</key>
					<string>(?&lt;!\\)\benum\b</string>
					<key>end</key>
					<string>}</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standard</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\\?\b\w+\b</string>
							<key>end</key>
							<string>(?=})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#standard</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>(:)\s*(\w*)</string>
									<key>end</key>
									<string>(?=({|;))</string>
									<key>beginCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>punctuation.storage.modifier.extends.slice</string>
										</dict>
										<key>2</key>
										<dict>
											<key>patterns</key>
											<array>
												<dict>
													<key>include</key>
													<string>#storage.types</string>
												</dict>
											</array>
										</dict>
									</dict>
								</dict>
								<dict>
									<key>begin</key>
									<string>{</string>
									<key>end</key>
									<string>(?=})</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#standard</string>
										</dict>
										<dict>
											<key>begin</key>
											<string>\\?\b\w+\b</string>
											<key>end</key>
											<string>(?=})|(,)</string>
											<key>patterns</key>
											<array>
												<dict>
													<key>include</key>
													<string>#standard</string>
												</dict>
												<dict>
													<key>begin</key>
													<string>=</string>
													<key>end</key>
													<string>(?=})|(?=,)</string>
													<key>patterns</key>
													<array>
														<dict>
															<key>include</key>
															<string>#standard</string>
														</dict>
														<dict>
															<key>include</key>
															<string>#constant</string>
														</dict>
													</array>
													<key>beginCaptures</key>
													<dict>
														<key>0</key>
														<dict>
															<key>name</key>
															<string>keyword.operator.assignment.slice</string>
														</dict>
													</dict>
												</dict>
											</array>
											<key>beginCaptures</key>
											<dict>
												<key>0</key>
												<dict>
													<key>name</key>
													<string>constant.other.enum.slice</string>
													<key>patterns</key>
													<array>
														<dict>
															<key>include</key>
															<string>#identifier</string>
														</dict>
													</array>
												</dict>
											</dict>
											<key>endCaptures</key>
											<dict>
												<key>1</key>
												<dict>
													<key>name</key>
													<string>punctuation.separator.enum.slice</string>
												</dict>
											</dict>
										</dict>
									</array>
									<key>beginCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>punctuation.section.block.begin.slice</string>
										</dict>
									</dict>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>entity.name.enum.slice</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#storage.identifier</string>
										</dict>
									</array>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>storage.type.enum.slice</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.block.end.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>storage.exception</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#storage.modifier</string>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.exception.slice</string>
					<key>begin</key>
					<string>(?&lt;!\\)\bexception\b</string>
					<key>end</key>
					<string>}</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standard</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\\?\b\w+\b</string>
							<key>end</key>
							<string>(?=})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#standard</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>(?&lt;!\\)(?:(\bextends\b)|(:))</string>
									<key>end</key>
									<string>(?=})</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#standard</string>
										</dict>
										<dict>
											<key>begin</key>
											<string>\\?[:\w]+</string>
											<key>end</key>
											<string>(?={|})|(,)</string>
											<key>patterns</key>
											<array>
												<dict>
													<key>include</key>
													<string>#standard</string>
												</dict>
											</array>
											<key>beginCaptures</key>
											<dict>
												<key>0</key>
												<dict>
													<key>patterns</key>
													<array>
														<dict>
															<key>include</key>
															<string>#storage.types</string>
														</dict>
													</array>
												</dict>
											</dict>
											<key>endCaptures</key>
											<dict>
												<key>1</key>
												<dict>
													<key>name</key>
													<string>punctuation.separator.exception.extends.slice</string>
												</dict>
											</dict>
										</dict>
										<dict>
											<key>include</key>
											<string>#storage.exception.body</string>
										</dict>
									</array>
									<key>beginCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>storage.modifier.extends.slice</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>punctuation.storage.modifier.extends.slice</string>
										</dict>
									</dict>
								</dict>
								<dict>
									<key>include</key>
									<string>#storage.exception.body</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>entity.name.exception.slice</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#storage.identifier</string>
										</dict>
									</array>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>storage.type.exception.slice</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.block.end.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>storage.exception.body</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>{</string>
					<key>end</key>
					<string>(?=})</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standard</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#storage.basic</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.block.begin.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>storage.identifier</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>invalid.illegal.reserved.identifier.slice</string>
					<key>match</key>
					<string>(?&lt;!\\)\b(?:bool|byte|class|const|dictionary|double|enum|exception|extends|false|float|idempotent|implements|int|interface|local|LocalObject|long|module|Object|optional|out|sequence|short|string|struct|tag|throws|true|uint|ulong|ushort|Value|varuint|varulong|void)\b</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\\)?\b([a-zA-Z_][a-zA-Z0-9_]*)\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.escape.backslash.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>name</key>
									<string>invalid.illegal.underscore.slice</string>
									<key>match</key>
									<string>__+|\b_|_\b</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>invalid.illegal.identifier.slice</string>
					<key>match</key>
					<string>.</string>
				</dict>
			</array>
		</dict>
		<key>storage.interface</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#storage.modifier</string>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.interface.slice</string>
					<key>begin</key>
					<string>(?&lt;!\\)\binterface\b</string>
					<key>end</key>
					<string>(})|(;)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standard</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\\?\b\w+\b</string>
							<key>end</key>
							<string>(?=}|;)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#standard</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>(?&lt;!\\)(?:(\bextends\b)|(:))</string>
									<key>end</key>
									<string>(?=})|((?=;))</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#standard</string>
										</dict>
										<dict>
											<key>begin</key>
											<string>\\?[:\w]+</string>
											<key>end</key>
											<string>(?={|}|;)|(,)</string>
											<key>patterns</key>
											<array>
												<dict>
													<key>include</key>
													<string>#standard</string>
												</dict>
											</array>
											<key>beginCaptures</key>
											<dict>
												<key>0</key>
												<dict>
													<key>patterns</key>
													<array>
														<dict>
															<key>include</key>
															<string>#storage.types</string>
														</dict>
													</array>
												</dict>
											</dict>
											<key>endCaptures</key>
											<dict>
												<key>1</key>
												<dict>
													<key>name</key>
													<string>punctuation.separator.interface.extends.slice</string>
												</dict>
											</dict>
										</dict>
										<dict>
											<key>include</key>
											<string>#storage.interface.body</string>
										</dict>
									</array>
									<key>beginCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>storage.modifier.extends.slice</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>punctuation.storage.modifier.extends.slice</string>
										</dict>
									</dict>
									<key>endCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>invalid.illegal.missing-brace.slice</string>
										</dict>
									</dict>
								</dict>
								<dict>
									<key>include</key>
									<string>#storage.interface.body</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>entity.name.interface.slice</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#storage.identifier</string>
										</dict>
									</array>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>storage.type.interface.slice</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.block.end.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.semicolon.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>storage.interface.body</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>{</string>
					<key>end</key>
					<string>(?=})</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standard</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#storage.operation</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.block.begin.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>storage.modifier</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=\[)</string>
					<key>end</key>
					<string>(?&lt;=])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standard</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#metadata.local</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\\)\b(?:(local)|(const)|(idempotent)|(out)|(unchecked)|((?:optional|tag)\([-a-zA-Z0-9:]*\)))(?:\b|(?&lt;=\)))</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.local.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.const.slice</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.idempotent.slice</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.out.slice</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.unchecked.slice</string>
						</dict>
						<key>6</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(optional|tag)(\()([-a-zA-Z0-9:]*)(\))</string>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>storage.modifier.tagged.slice</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>punctuation.section.group.tagged.begin.slice</string>
										</dict>
										<key>3</key>
										<dict>
											<key>patterns</key>
											<array>
												<dict>
													<key>include</key>
													<string>#constant.numeric.oct</string>
												</dict>
												<dict>
													<key>include</key>
													<string>#constant.numeric.dec</string>
												</dict>
												<dict>
													<key>include</key>
													<string>#constant.numeric.hex</string>
												</dict>
												<dict>
													<key>include</key>
													<string>#storage.types.custom</string>
												</dict>
											</array>
										</dict>
										<key>4</key>
										<dict>
											<key>name</key>
											<string>punctuation.section.group.tagged.end.slice</string>
										</dict>
									</dict>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>storage.module</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#storage.modifier</string>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.module.slice</string>
					<key>begin</key>
					<string>(?&lt;!\\)\bmodule\b</string>
					<key>end</key>
					<string>}</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standard</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\\?\b\w+\b</string>
							<key>end</key>
							<string>(?=})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#standard</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>{</string>
									<key>end</key>
									<string>(?=})</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#standard</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#storage</string>
										</dict>
									</array>
									<key>beginCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>punctuation.section.block.begin.slice</string>
										</dict>
									</dict>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>entity.name.module.slice</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#storage.identifier</string>
										</dict>
									</array>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>storage.type.module.slice</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.block.end.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>storage.operation</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#storage.modifier</string>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.operation.slice</string>
					<key>begin</key>
					<string>\\?[:\w]+\s*\??</string>
					<key>end</key>
					<string>(;)|((?=}))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#storage.operation.body</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage.types.void</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#storage.types</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.semicolon.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.missing-brace.slice</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.operation.slice</string>
					<key>begin</key>
					<string>\(</string>
					<key>end</key>
					<string>(;)|((?=}))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standard</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\)</string>
							<key>end</key>
							<string>(?=;|})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#standard</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#storage.operation.body</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.group.operation.return-tuple.end.slice</string>
								</dict>
							</dict>
						</dict>
						<dict>
							<key>include</key>
							<string>#storage.modifier</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\\?[:\w]+\s*\??</string>
							<key>end</key>
							<string>(?=\))|(?&lt;=,)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>begin</key>
									<string>\\?\b\w+\b</string>
									<key>end</key>
									<string>(?=\))|(,)</string>
									<key>beginCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>entity.name.operation.return-member</string>
											<key>patterns</key>
											<array>
												<dict>
													<key>include</key>
													<string>#storage.identifier</string>
												</dict>
											</array>
										</dict>
									</dict>
									<key>endCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>punctuation.separator.operation.return-tuple.slice</string>
										</dict>
									</dict>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#storage.types</string>
										</dict>
									</array>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.group.operation.return-tuple.begin.slice</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.semicolon.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.missing-brace.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>storage.operation.body</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#standard</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\\?\b\w+\b</string>
					<key>end</key>
					<string>(?=;|})</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standard</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\(</string>
							<key>end</key>
							<string>(?=;|})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#standard</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>\)</string>
									<key>end</key>
									<string>(?=;|})</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#standard</string>
										</dict>
										<dict>
											<key>begin</key>
											<string>(?&lt;!\\)\bthrows\b</string>
											<key>end</key>
											<string>(?=;|})</string>
											<key>patterns</key>
											<array>
												<dict>
													<key>include</key>
													<string>#standard</string>
												</dict>
												<dict>
													<key>begin</key>
													<string>\\?[:\w]+</string>
													<key>end</key>
													<string>(?=;|})|(,)</string>
													<key>patterns</key>
													<array>
														<dict>
															<key>include</key>
															<string>#standard</string>
														</dict>
													</array>
													<key>beginCaptures</key>
													<dict>
														<key>0</key>
														<dict>
															<key>patterns</key>
															<array>
																<dict>
																	<key>include</key>
																	<string>#storage.types</string>
																</dict>
															</array>
														</dict>
													</dict>
													<key>endCaptures</key>
													<dict>
														<key>1</key>
														<dict>
															<key>name</key>
															<string>punctuation.separator.operation.throws.slice</string>
														</dict>
													</dict>
												</dict>
											</array>
											<key>beginCaptures</key>
											<dict>
												<key>0</key>
												<dict>
													<key>name</key>
													<string>storage.modifier.throws.slice</string>
												</dict>
											</dict>
										</dict>
									</array>
									<key>beginCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>punctuation.section.group.operation.parameters.end.slice</string>
										</dict>
									</dict>
								</dict>
								<dict>
									<key>include</key>
									<string>#storage.modifier</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>\\?[:\w]+\s*\??</string>
									<key>end</key>
									<string>(?=\))|(?&lt;=,)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>begin</key>
											<string>\\?\b\w+\b</string>
											<key>end</key>
											<string>(?=\))|(,)</string>
											<key>beginCaptures</key>
											<dict>
												<key>0</key>
												<dict>
													<key>name</key>
													<string>entity.name.operation.parameter</string>
													<key>patterns</key>
													<array>
														<dict>
															<key>include</key>
															<string>#storage.identifier</string>
														</dict>
													</array>
												</dict>
											</dict>
											<key>endCaptures</key>
											<dict>
												<key>1</key>
												<dict>
													<key>name</key>
													<string>punctuation.separator.operation.parameter.slice</string>
												</dict>
											</dict>
										</dict>
									</array>
									<key>beginCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>patterns</key>
											<array>
												<dict>
													<key>include</key>
													<string>#storage.types</string>
												</dict>
											</array>
										</dict>
									</dict>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.group.operation.parameters.begin.slice</string>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.slice</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage.identifier</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>storage.sequence</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#storage.modifier</string>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.sequence.slice</string>
					<key>begin</key>
					<string>(?&lt;!\\)\bsequence\b</string>
					<key>end</key>
					<string>(;)|((?=}))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standard</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(\&lt;)</string>
							<key>end</key>
							<string>(?=;|})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#standard</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>(\\?[:\w]+)|(?=\&gt;)</string>
									<key>end</key>
									<string>(?=;|})</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#standard</string>
										</dict>
										<dict>
											<key>begin</key>
											<string>(\&gt;)</string>
											<key>end</key>
											<string>(?=;|})</string>
											<key>patterns</key>
											<array>
												<dict>
													<key>include</key>
													<string>#standard</string>
												</dict>
												<dict>
													<key>begin</key>
													<string>\\?\b\w+\b</string>
													<key>end</key>
													<string>(?=;|})</string>
													<key>beginCaptures</key>
													<dict>
														<key>0</key>
														<dict>
															<key>name</key>
															<string>entity.name.sequence.slice</string>
															<key>patterns</key>
															<array>
																<dict>
																	<key>include</key>
																	<string>#storage.identifier</string>
																</dict>
															</array>
														</dict>
													</dict>
												</dict>
											</array>
											<key>beginCaptures</key>
											<dict>
												<key>0</key>
												<dict>
													<key>name</key>
													<string>meta.generic.sequence.slice</string>
												</dict>
												<key>1</key>
												<dict>
													<key>name</key>
													<string>punctuation.definition.generic.end.slice</string>
												</dict>
											</dict>
										</dict>
									</array>
									<key>beginCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>meta.generic.sequence.slice</string>
											<key>patterns</key>
											<array>
												<dict>
													<key>include</key>
													<string>#storage.types</string>
												</dict>
											</array>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>invalid.illegal.missing-type.slice</string>
										</dict>
									</dict>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>meta.generic.sequence.slice</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.generic.begin.slice</string>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>storage.type.sequence.slice</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.semicolon.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.missing.semicolon.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>storage.struct</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#storage.modifier</string>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.struct.slice</string>
					<key>begin</key>
					<string>(?&lt;!\\)\bstruct\b</string>
					<key>end</key>
					<string>}</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#standard</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\\?\b\w+\b</string>
							<key>end</key>
							<string>(?=})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#standard</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>{</string>
									<key>end</key>
									<string>(?=})</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#standard</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#storage.basic</string>
										</dict>
									</array>
									<key>beginCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>punctuation.section.block.begin.slice</string>
										</dict>
									</dict>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>entity.name.struct.slice</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#storage.identifier</string>
										</dict>
									</array>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>storage.type.struct.slice</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.block.end.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>storage.types</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(\\)?\b(?:(bool)|(byte)|(short)|(ushort)|(int)|(uint)|(varint)|(varuint)|(long)|(ulong)|(varlong)|(varulong)|(float)|(double)|(string)|(Object)|(LocalObject)|(Value))\b\s*(\?)?</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.escape.backslash.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.bool.slice</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.type.byte.slice</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>storage.type.short.slice</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>storage.type.ushort.slice</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>storage.type.int.slice</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>storage.type.uint.slice</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>storage.type.varint.slice</string>
						</dict>
						<key>9</key>
						<dict>
							<key>name</key>
							<string>storage.type.varuint.slice</string>
						</dict>
						<key>10</key>
						<dict>
							<key>name</key>
							<string>storage.type.long.slice</string>
						</dict>
						<key>11</key>
						<dict>
							<key>name</key>
							<string>storage.type.ulong.slice</string>
						</dict>
						<key>12</key>
						<dict>
							<key>name</key>
							<string>storage.type.varlong.slice</string>
						</dict>
						<key>13</key>
						<dict>
							<key>name</key>
							<string>storage.type.varulong.slice</string>
						</dict>
						<key>14</key>
						<dict>
							<key>name</key>
							<string>storage.type.float.slice</string>
						</dict>
						<key>15</key>
						<dict>
							<key>name</key>
							<string>storage.type.double.slice</string>
						</dict>
						<key>16</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.slice</string>
						</dict>
						<key>17</key>
						<dict>
							<key>name</key>
							<string>storage.type.object.slice</string>
						</dict>
						<key>18</key>
						<dict>
							<key>name</key>
							<string>storage.type.localobject.slice</string>
						</dict>
						<key>19</key>
						<dict>
							<key>name</key>
							<string>storage.type.value.slice</string>
						</dict>
						<key>20</key>
						<dict>
							<key>name</key>
							<string>punctuation.storage.modifier.optional.slice</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>include</key>
					<string>#storage.types.custom</string>
				</dict>
			</array>
		</dict>
		<key>storage.types.custom</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(\\)?([:\w]+)\s*(\?)?</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.escape.backslash.slice</string>
						</dict>
						<key>2</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>name</key>
									<string>variable.type.slice</string>
									<key>match</key>
									<string>\w+</string>
								</dict>
								<dict>
									<key>name</key>
									<string>punctuation.accessor.slice</string>
									<key>match</key>
									<string>::</string>
								</dict>
								<dict>
									<key>name</key>
									<string>invalid.illegal.accessor.slice</string>
									<key>match</key>
									<string>:</string>
								</dict>
							</array>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.storage.modifier.optional.slice</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>include</key>
					<string>#invalid</string>
				</dict>
			</array>
		</dict>
		<key>storage.types.void</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>storage.type.void.slice</string>
					<key>match</key>
					<string>(\\)?\bvoid\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.escape.backslash.slice</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
	</dict>
	<key>fileTypes</key>
	<array>
		<string>ice</string>
	</array>
</dict>
</plist>
