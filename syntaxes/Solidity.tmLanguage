<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>name</key>
	<string>Solidity</string>
	<key>scopeName</key>
	<string>source.solidity</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>name</key>
			<string>scope</string>
			<key>begin</key>
			<string>\b(assembly)(?:\s*\((\&quot;.*?\&quot;)\))?\s*\{</string>
			<key>end</key>
			<string>\}</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#assembly</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.quoted</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?&lt;!\.)(addmod|mulmod|keccak256|sha256|sha3|ripemd160|ecrecover)\s*\(</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.type</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>include</key>
			<string>#everything</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>assembly</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(?&lt;!\.)(stop|add|sub|mul|div|sdiv|mod|smod|exp|not|lt|gt|slt|sgt|eq|iszero|and|or|xor|byte|shl|shr|sar|addmod|mulmod|signextend|keccak256|pc|pop|mload|mstore|mstore8|sload|sstore|msize|gas|address|balance|selfbalance|caller|callvalue|calldataload|calldatasize|calldatacopy|codesize|codecopy|extcodesize|extcodecopy|returndatasize|returndatacopy|extcodehash|create|create2|call|callcode|delegatecall|staticcall|return|revert|selfdestruct|invalid|log0|log1|log2|log3|log4|chainid|basefee|origin|gasprice|blockhash|coinbase|timestamp|number|difficulty|gaslimit)\s*\(</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.function</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword</string>
					<key>match</key>
					<string>\b(let|switch|case|default)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>scope</string>
					<key>begin</key>
					<string>\{</string>
					<key>end</key>
					<string>\}</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#assembly</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#everything</string>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment</string>
					<key>match</key>
					<string>\/\/.*</string>
				</dict>
				<dict>
					<key>name</key>
					<string>comment</string>
					<key>begin</key>
					<string>(\/\*)</string>
					<key>end</key>
					<string>(\*\/)</string>
				</dict>
			</array>
		</dict>
		<key>everything</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword</string>
					<key>match</key>
					<string>\b(event|enum)\s+([A-Za-z_]\w*)\b</string>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>scope</string>
					<key>begin</key>
					<string>\b(contract|interface|library)\s+([A-Za-z_]\w*)(?:\s+(is)\s+)?</string>
					<key>end</key>
					<string>\{</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>name</key>
							<string>entity.name.function</string>
							<key>match</key>
							<string>[A-Za-z_]\w*</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#numbers</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword</string>
					<key>match</key>
					<string>\b(constructor|error|using|struct|type|modifier|fallback)(\s+[A-Za-z_]\w*)?\b</string>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword</string>
					<key>match</key>
					<string>\b(function)(\s+[A-Za-z_]\w*)?\b</string>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>\.(length|selector)\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>markup.italic</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>markup.italic</string>
					<key>match</key>
					<string>\bthis\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>markup.italic</string>
					<key>match</key>
					<string>\bsuper\b</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(msg|block|tx|bytes|string)\.([A-Za-z_]\w*)\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.type</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.type</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?:(indexed|memory|storage|calldata|payable|immutable)\s*(\b[A-Za-z_]\w*)?\s*)(?=[,\)\n])</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.parameter</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.language</string>
					<key>match</key>
					<string>\b(true|false)\b</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(payable)\s*\(</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.language</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(from)\s*(?=[\&apos;\&quot;])</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?:[A-Za-z_]\w*)\s+(as)\s+(?:[A-Za-z_]\w*)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(global);</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword</string>
					<key>match</key>
					<string>\b(var|import|solidity|constant|pragma\s*(?:experimental|abicoder)?|mapping|payable|storage|memory|calldata|if|else|for|while|do|break|continue|returns?|try|catch|private|public|pure|view|internal|immutable|external|virtual|override|abstract|suicide|emit|is|throw|revert|assert|require|receive|delete)\b</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#numbers</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.numeric</string>
					<key>match</key>
					<string>\b(0[xX][a-fA-F0-9]+)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator</string>
					<key>match</key>
					<string>(=|:=|!|&gt;|&lt;|\||&amp;|\?|\^|~|\*|\+|\-|\/|\%)</string>
				</dict>
				<dict>
					<key>name</key>
					<string>markup.italic</string>
					<key>match</key>
					<string>(\bhex\b|\bunicode\b)</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator</string>
					<key>match</key>
					<string>\s\:\s</string>
				</dict>
				<dict>
					<key>name</key>
					<string>support.type</string>
					<key>match</key>
					<string>\bnow\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword</string>
					<key>match</key>
					<string>\b_;</string>
				</dict>
				<dict>
					<key>name</key>
					<string>support.type</string>
					<key>match</key>
					<string>\b(abi)\.([A-Za-z_]\w*)\b</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(blockhash|gasleft)\s*\(</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.type</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>\.(call|delegatecall|staticcall)\s*[\(\{]</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.type</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>(?:\.|(new\s+))([A-Za-z_]\w*)\{</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?:(address(?:\s+payable)?|I?ERC[\dA-Za-z_]\w*|string|bytes?\d*|int\d*|uint\d*|bool|u?fixed\d+x\d+)|([A-Za-z_]\w*))\s*(?:\[(\d*)\])?\s*(?:\[(\d*)\])?\s*(?:(indexed|memory|storage|calldata|payable|immutable)?\s*(\b[A-Za-z_]\w*)?\s*)?(?=[,\)\n])</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>scope</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.numeric</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>constant.numeric</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>keyword</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>variable.parameter</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(address(?:\s*payable)?|I?ERC[\dA-Za-z_]\w*|string|bytes?\d*|int\d*|uint\d*|bool|u?fixed\d+x\d+)\b(?:(?:\s*\[(\d*)\])?(?:\s*\[(\d*)\])?(?:\s*\[(\d*)\])?\s*((?:private\s|public\s|internal\s|external\s|constant\s|immutable\s|memory\s|storage\s)*)\s*(?:[A-Za-z_]\w*)\s*(\=))?</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.numeric</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.numeric</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>constant.numeric</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>keyword</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>keyword</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>\b([A-Za-z_]\w*)(?:\s*\[(\d*)\]\s*)?(?:\s*\[(\d*)\]\s*)?\(</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.function</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.numeric</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.numeric</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(wei|gwei|ether|seconds|minutes|hours|days|weeks)\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.type</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword</string>
					<key>match</key>
					<string>\bnew\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword</string>
					<key>match</key>
					<string>\banonymous\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword</string>
					<key>match</key>
					<string>\bunchecked\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>string.quoted</string>
					<key>begin</key>
					<string>(?&lt;!\\)[\&quot;\&apos;]</string>
					<key>end</key>
					<string>(?&lt;!\\)[\&quot;\&apos;]</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>numbers</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.numeric</string>
					<key>match</key>
					<string>\b(?:[+-]?\.?\d[\d_eE]*)(?:\.\d+[\deE]*)?\b</string>
				</dict>
			</array>
		</dict>
		<key>string</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.character.escape</string>
					<key>match</key>
					<string>\\&quot;</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape</string>
					<key>match</key>
					<string>\\&apos;</string>
				</dict>
				<dict>
					<key>name</key>
					<string>string.quoted</string>
					<key>match</key>
					<string>.</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>fileTypes</key>
	<array>
		<string>sol</string>
	</array>
</dict>
</plist>
