<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>name</key>
	<string>Squirrel</string>
	<key>scopeName</key>
	<string>source.nut</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#special-block</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.control.squirrel</string>
			<key>match</key>
			<string>\b(break|case|catch|default|do|else|for|foreach|if|resume|return|switch|throw|try|while|yield)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.control.squirrel</string>
			<key>match</key>
			<string>\b(clone|delete|in|instanceof|typeof)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>variable.language.squirrel</string>
			<key>match</key>
			<string>\b(base|this)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>storage.type.squirrel</string>
			<key>match</key>
			<string>\b(class|constructor|function|local)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>storage.modifier.squirrel</string>
			<key>match</key>
			<string>\b(const|extends|static)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.squirrel.squirrel</string>
			<key>match</key>
			<string>\b(null|true|false)\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.squirrel</string>
			<key>match</key>
			<string>!|%|&amp;|\*|\-\-|\-|\+\+|\+|==|=|!=|&lt;=&gt;|&lt;=|&gt;=|&lt;-|&gt;&gt;&gt;|&lt;&lt;|&gt;&gt;|&lt;|&gt;|!|&amp;&amp;|\|\||\?\:|\*=|(?&lt;!\()/=|%=|\+=|\-=|&amp;=|%=|\.</string>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.numeric.squirrel</string>
			<key>match</key>
			<string>\b((0(x|X)[0-9a-fA-F]+)|([0-9]+(\.[0-9]+)?))\b</string>
		</dict>
		<dict>
			<key>name</key>
			<string>support.function.any-method.squirrel</string>
			<key>match</key>
			<string>\b([_A-Za-z][_A-Za-z0-9]\w*)\b(?=\s*(?:[({&quot;&apos;]|\[\[))</string>
		</dict>
		<dict>
			<key>name</key>
			<string>variable.other.squirrel</string>
			<key>match</key>
			<string>(?&lt;=[^.]\.)\b([_A-Za-z][_A-Za-z0-9]\w*)</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#attributes</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#block</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#strings</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>attributes</key>
		<dict>
			<key>name</key>
			<string>meta.attributes.squirrel</string>
			<key>begin</key>
			<string>&lt;/</string>
			<key>end</key>
			<string>/&gt;</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$base</string>
				</dict>
			</array>
		</dict>
		<key>block</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.block.squirrel</string>
					<key>begin</key>
					<string>\{</string>
					<key>end</key>
					<string>\}</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$base</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.block.begin.bracket.curly.squirrel</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.block.end.bracket.curly.squirrel</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.block.squirrel</string>
					<key>match</key>
					<string>^/\* =(\s*.*?)\s*= \*/$\n?</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.toc-list.banner.block.squirrel</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>comment.block.squirrel</string>
					<key>begin</key>
					<string>/\*</string>
					<key>end</key>
					<string>\*/</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.begin.squirrel</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.end.squirrel</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>begin</key>
					<string>(^[ \t]+)?(?=//)</string>
					<key>end</key>
					<string>(?!\G)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>name</key>
							<string>comment.line.double-slash.squirrel</string>
							<key>begin</key>
							<string>//</string>
							<key>end</key>
							<string>(?=\n)</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.comment.squirrel</string>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.whitespace.comment.leading.squirrel</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>begin</key>
					<string>(^[ \t]+)?(?=#)</string>
					<key>end</key>
					<string>(?!\G)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>name</key>
							<string>comment.line.hash.squirrel</string>
							<key>begin</key>
							<string>#</string>
							<key>end</key>
							<string>(?=\n)</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.comment.squirrel</string>
								</dict>
							</dict>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.whitespace.comment.leading.squirrel</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>special-block</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.class-block.squirrel</string>
					<key>begin</key>
					<string>\b(class)\b\s*([_A-Za-z][_A-Za-z0-9]*\b)?+(\s*(extends)\s*([_A-Za-z][_A-Za-z0-9]*\b))?</string>
					<key>end</key>
					<string>(?&lt;=\})|(?=(=))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#block</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.squirrel</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.squirrel</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>storage.type.modifier.squirrel</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.inherited.squirrel</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.function-block.squirrel</string>
					<key>begin</key>
					<string>\b(function)\b\s*([_A-Za-z][_A-Za-z0-9]*\b)?+(\s*(::)\s*([_A-Za-z][_A-Za-z0-9]*\b))?</string>
					<key>end</key>
					<string>(?&lt;=\})|(?=(=))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#block</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.squirrel</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.squirrel</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.global.access.squirrel</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.squirrel</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.namespace-block.squirrel</string>
					<key>begin</key>
					<string>\b([_A-Za-z][_A-Za-z0-9]*\b)?+(\s*(&lt;-))</string>
					<key>end</key>
					<string>(?&lt;=\})|(?=(;|,|\(|\)|&gt;|\[|\]|=))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#block</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.squirrel</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.namespace.access.squirrel</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>string.quoted.double.squirrel</string>
					<key>begin</key>
					<string>@?&quot;</string>
					<key>end</key>
					<string>&quot;</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>name</key>
							<string>constant.character.escape.squirrel</string>
							<key>match</key>
							<string>\\.</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.squirrel</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.squirrel</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
	</dict>
	<key>fileTypes</key>
	<array>
		<string>nut</string>
	</array>
</dict>
</plist>
