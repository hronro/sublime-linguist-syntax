<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>name</key>
	<string>VimL</string>
	<key>scopeName</key>
	<string>source.viml</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>name</key>
			<string>meta.file-archive.vimball</string>
			<key>begin</key>
			<string>\A(?=&quot; Vimball Archiver)</string>
			<key>end</key>
			<string>(?=A)B</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.file-record.help-file.vimball</string>
					<key>contentName</key>
					<string>text.embedded.vim-help</string>
					<key>begin</key>
					<string>^(.*?\S.*?\.txt)(\t)(\[{3}1)(?=$)</string>
					<key>end</key>
					<string>(?!\G)(?=^.*?\S.*?\t\[{3}1$)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\G</string>
							<key>end</key>
							<string>^(\d+$)?</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>comment.ignored.line-count.viml</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>sublimelinter.gutter-mark</string>
								</dict>
							</dict>
						</dict>
						<dict>
							<key>include</key>
							<string>text.vim-help</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>markup.heading.1.vimball</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.file.path.vimball</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.whitespace.tab.separator.vimball</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.header.vimball</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.file-record.vimball.viml</string>
					<key>begin</key>
					<string>^(.*?\S.*?[ \t]*?)(\t)(\[{3}1)(?=$)</string>
					<key>end</key>
					<string>(?!\G)(?=^.*?\S.*?\t\[{3}1$)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\G</string>
							<key>end</key>
							<string>^(\d+$)?</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>comment.ignored.line-count.viml</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>sublimelinter.gutter-mark</string>
								</dict>
							</dict>
						</dict>
						<dict>
							<key>include</key>
							<string>#main</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>markup.heading.1.vimball</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.file.path.vimball</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.whitespace.tab.separator.vimball</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.header.vimball</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>include</key>
					<string>#main</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>include</key>
			<string>#main</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>assignment</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment.compound.viml</string>
					<key>match</key>
					<string>[-+.]=</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment.viml</string>
					<key>match</key>
					<string>=</string>
				</dict>
			</array>
		</dict>
		<key>auCmd</key>
		<dict>
			<key>name</key>
			<string>meta.autocmd.viml</string>
			<key>match</key>
			<string>\b(autocmd|au)(!)?\b\s+(?!\*)(\S+)\s+(\S+)(?:\s+(\+\+(nested|once)))?</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.autocmd.viml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.force.viml</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>meta.events-list.viml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#main</string>
						</dict>
					</array>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>string.unquoted.autocmd-suffix-list.viml</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.$6.viml</string>
				</dict>
			</dict>
		</dict>
		<key>auGroup</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.augroup.viml</string>
					<key>begin</key>
					<string>\b(augroup|aug)(!)?\b\s*([\w#]+)</string>
					<key>end</key>
					<string>\b(\1)\s+(END)\b</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#main</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.viml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.force.viml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.viml</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.augroup.viml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.control.end</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>commentInnards</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#modelines</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#todo</string>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.line.quotes.viml</string>
					<key>contentName</key>
					<string>support.constant.field.viml</string>
					<key>begin</key>
					<string>^\s*(&quot;)(?=(\s*[A-Z]\w+)+:)</string>
					<key>end</key>
					<string>((:))(.*)$</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.viml</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.constant.field.viml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.colon.viml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#commentInnards</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>comment.line.quotes.viml</string>
					<key>begin</key>
					<string>^\s*(&quot;)</string>
					<key>end</key>
					<string>$</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#commentInnards</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.viml</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>comment.inline.quotes.viml</string>
					<key>begin</key>
					<string>(?&lt;!^)\s*(&quot;)(?=[^\n&quot;]*$)</string>
					<key>end</key>
					<string>$</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#commentInnards</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.viml</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>escape</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#escapedCodePoint</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escapedKey</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.backspace.viml</string>
					<key>match</key>
					<string>(\\)b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.escape.viml</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.escape.viml</string>
					<key>match</key>
					<string>(\\)e</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.escape.viml</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.form-feed.viml</string>
					<key>match</key>
					<string>(\\)f</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.escape.viml</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.newline.viml</string>
					<key>match</key>
					<string>(\\)n</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.escape.viml</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.return.viml</string>
					<key>match</key>
					<string>(\\)r</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.escape.viml</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.tab.viml</string>
					<key>match</key>
					<string>(\\)t</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.escape.viml</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.backslash.viml</string>
					<key>match</key>
					<string>(\\)\1</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.escape.viml</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.quote.viml</string>
					<key>match</key>
					<string>(\\)&quot;</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.escape.viml</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.other.viml</string>
					<key>match</key>
					<string>(\\).</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.escape.viml</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>escapedCodePoint</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.character.escape.codepoint.hex.short.viml</string>
					<key>match</key>
					<string>(\\)[xX][0-9A-Fa-f]{1,2}</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.escape.backslash.viml</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.codepoint.hex.long.viml</string>
					<key>match</key>
					<string>(\\)(?:u[0-9A-Fa-f]{1,4}|U[0-9A-Fa-f]{1,8})</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.escape.backslash.viml</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.codepoint.octal.viml</string>
					<key>match</key>
					<string>(\\)([0-7]{1,3})</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.escape.backslash.viml</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>escapedKey</key>
		<dict>
			<key>name</key>
			<string>constant.character.escape.keymapping.viml</string>
			<key>match</key>
			<string>(\\&lt;\*?)(?:[^&quot;&gt;\\]|\\.)+(&gt;)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.escape.key.begin.viml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.escape.key.end.viml</string>
				</dict>
			</dict>
		</dict>
		<key>expr</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>keyword.operator.logical.viml</string>
					<key>match</key>
					<string>[&amp;|=]{2}[?#]?|[!&gt;&lt;]=[#?]?|[=!]~(?!\/)[#?]?|[&gt;&lt;][#?*]|\b(?:isnot|is)\b|\\|[-+%*]</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.logical.viml</string>
					<key>match</key>
					<string>\s[&gt;&lt;]\s</string>
				</dict>
				<dict>
					<key>name</key>
					<string>storage.modifier.force.viml</string>
					<key>match</key>
					<string>(?&lt;=\S)!</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.logical.not.viml</string>
					<key>match</key>
					<string>!(?=\S)</string>
				</dict>
				<dict>
					<key>name</key>
					<string>punctuation.expression.bracket.curly.begin.viml</string>
					<key>match</key>
					<string>{</string>
				</dict>
				<dict>
					<key>name</key>
					<string>punctuation.expression.bracket.curly.end.viml</string>
					<key>match</key>
					<string>}</string>
				</dict>
				<dict>
					<key>name</key>
					<string>punctuation.expression.bracket.square.begin.viml</string>
					<key>match</key>
					<string>\[</string>
				</dict>
				<dict>
					<key>name</key>
					<string>punctuation.expression.bracket.square.end.viml</string>
					<key>match</key>
					<string>\]</string>
				</dict>
				<dict>
					<key>name</key>
					<string>punctuation.expression.bracket.round.begin.viml</string>
					<key>match</key>
					<string>\(</string>
				</dict>
				<dict>
					<key>name</key>
					<string>punctuation.expression.bracket.round.end.viml</string>
					<key>match</key>
					<string>\)</string>
				</dict>
				<dict>
					<key>name</key>
					<string>punctuation.separator.statement.viml</string>
					<key>match</key>
					<string>\|</string>
				</dict>
				<dict>
					<key>name</key>
					<string>punctuation.separator.comma.viml</string>
					<key>match</key>
					<string>,</string>
				</dict>
				<dict>
					<key>name</key>
					<string>punctuation.separator.colon.viml</string>
					<key>match</key>
					<string>:</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.rest.viml</string>
					<key>match</key>
					<string>\.{3}</string>
				</dict>
				<dict>
					<key>name</key>
					<string>punctuation.delimiter.property.dot.viml</string>
					<key>match</key>
					<string>\.</string>
				</dict>
				<dict>
					<key>name</key>
					<string>punctuation.definition.option.viml</string>
					<key>match</key>
					<string>&amp;(?=\w+)</string>
				</dict>
			</array>
		</dict>
		<key>extraVimFunc</key>
		<dict>
			<key>name</key>
			<string>support.function.viml</string>
			<key>match</key>
			<string>(?x)\b
	((?:echo(?:hl?)?)|exe(?:c(?:ute)?)?|[lxvn]?noremap|smapc(?:lear)?|mapmode|xmap|(?:[xs]un|snore)map
	|Plugin|autocmd|[cinvo]?(?:un|nore)?(?:map|menu)|(?:range)?go(?:to)?|(?:count)?(?:pop?|tag?|tn(?:ext)?|tp(?:revious)?|tr(?:ewind)?)
	|(?:range)?(?:s(?:ubstitute)?|ret(?:ab)?|g(?:lobal)?)|unm(?:ap)?|map_l|mapc(?:lear)?|N?buffer|N?bnext|N?bNext|N?bprevious|N?bmod
	|ab(?:breviate)?|norea(?:bbrev)?|[ic](?:un|nore)?ab|split_f|rangefold|[ic](?:un|nore)?ab|[ic]abbrev|edit_f|next_f|[vcoxli]u
	|(?:range)?(?:w(?:rite)?|up(?:date)?)|sar|cno|[vl]n|[io]?no|[xn]n|snor|lm(?:ap)?|lunmap|lear|[vnx]m|om|[ci]m|ap|nun|sunm)
\b</string>
		</dict>
		<key>extraVimOptions</key>
		<dict>
			<key>name</key>
			<string>support.variable.option.viml</string>
			<key>match</key>
			<string>(?x)\b (no)?
	(altwerase|bf|escapetime|extended|filec|iclower|keytime|leftright|li|lock|noprint|octal|recdir|searchincr
	|shellmeta|ttywerase|windowname|wl|wraplen)
\b</string>
		</dict>
		<key>filetype</key>
		<dict>
			<key>match</key>
			<string>\b(?:(setf|setfiletype)(?:\s+(FALLBACK))?\s+|(ft|filetype)\s*(=))([.\w]+)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.command.viml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.variable.option.viml</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.fallback.viml</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment.viml</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.function.filetype.viml</string>
				</dict>
			</dict>
		</dict>
		<key>funcDef</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>storage.function.viml</string>
					<key>match</key>
					<string>\b(fu(nc?|nction)?|end(f|fu|func?|function)?)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>entity.name.function.viml</string>
					<key>match</key>
					<string>(?:([sSgGbBwWtTlL]?(:))?[\w#]+)(?=\()</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.scope.viml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.scope.key-value.viml</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>storage.modifier.$1.function.viml</string>
					<key>match</key>
					<string>(?&lt;=\)|\s)(abort|dict|closure|range)(?=\s|$)</string>
				</dict>
			</array>
		</dict>
		<key>hashbang</key>
		<dict>
			<key>name</key>
			<string>comment.line.shebang.viml</string>
			<key>begin</key>
			<string>\A#!</string>
			<key>end</key>
			<string>$</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.shebang.viml</string>
				</dict>
			</dict>
		</dict>
		<key>highlightLink</key>
		<dict>
			<key>match</key>
			<string>(?x)^\s* (:)? \s*              (?# 1: punctuation.separator.key-value.colon.viml) (hi|highlight)         (?# 2: support.function.highlight.viml) (!)?                   (?# 3: storage.modifier.force.viml) (?:\s+(def|default))? (?# 4: support.function.highlight-default.viml) (?:\s+(link))         (?# 5: support.function.highlight-link.viml) (?:\s+([-\w]+))      (?# 6: variable.parameter.group-name.viml) (?:\s+(?:(NONE)|([-\w]+)))?</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.key-value.colon.viml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.highlight.viml</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.force.viml</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.function.highlight-default.viml</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.function.highlight-link.viml</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.group-name.viml</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>support.constant.highlighting.viml</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.group-name.viml</string>
				</dict>
			</dict>
		</dict>
		<key>keyword</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>keyword.control.$1.viml</string>
					<key>match</key>
					<string>\b(if|while|for|return|try|catch|finally|finish|end(if|for|while|try)?|else(if)?|do|in|:)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.$1.viml</string>
					<key>match</key>
					<string>\b(unlet)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>storage.type.let.viml</string>
					<key>match</key>
					<string>\blet\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>support.constant.vimball.use.viml</string>
					<key>match</key>
					<string>(?&lt;=^|\n)UseVimball(?=\s*$)</string>
				</dict>
			</array>
		</dict>
		<key>keywordLists</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#vimTodo</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vimAugroupKey</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vimAutoEvent</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vimBehaveModel</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vimCommand</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vimFTCmd</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vimFTOption</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vimFgBgAttrib</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vimFuncKey</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vimFuncName</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vimGroup</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vimGroupSpecial</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vimHLGroup</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vimHiAttrib</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vimHiClear</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vimHiCtermColor</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vimMapModKey</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vimOption</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vimPattern</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vimStdPlugin</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vimSynCase</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vimSynType</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vimSyncC</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vimSyncLinecont</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vimSyncMatch</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vimSyncNone</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vimSyncRegion</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vimUserAttrbCmplt</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vimUserAttrbKey</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vimUserCommand</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vimErrSetting</string>
				</dict>
			</array>
		</dict>
		<key>main</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#vimTodo</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#modelines</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#pathname</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escape</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#hashbang</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#numbers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#syntax</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#highlightLink</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#funcDef</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#auCmd</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#auGroup</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parameter</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#assignment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expr</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keyword</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#register</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#filetype</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#supportType</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#supportVariable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#extraVimOptions</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#extraVimFunc</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keywordLists</string>
				</dict>
			</array>
		</dict>
		<key>modelines</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>string.other.modeline.viml</string>
					<key>begin</key>
					<string>(?:(?:\s|^)vi(?:m[&lt;=&gt;]?\d+|m)?|[\t\x20]ex):\s*(?=set?\s)</string>
					<key>end</key>
					<string>:|$</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#main</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>name</key>
					<string>string.other.modeline.viml</string>
					<key>begin</key>
					<string>(?:(?:\s|^)vi(?:m[&lt;=&gt;]?\d+|m)?|[\t\x20]ex):</string>
					<key>end</key>
					<string>$</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#main</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>numbers</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.numeric.hex.short.viml</string>
					<key>match</key>
					<string>0[xX][0-9A-Fa-f]+</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.numeric.hex.long.viml</string>
					<key>match</key>
					<string>0[zZ][0-9A-Fa-f]+</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.numeric.float.exponential.viml</string>
					<key>match</key>
					<string>(?&lt;!\w)-?\d+\.\d+[eE][-+]?\d+</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.numeric.float.viml</string>
					<key>match</key>
					<string>(?&lt;!\w)-?\d+\.\d+</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.numeric.integer.viml</string>
					<key>match</key>
					<string>(?&lt;!\w)-?\d+</string>
				</dict>
			</array>
		</dict>
		<key>parameter</key>
		<dict>
			<key>name</key>
			<string>meta.parameter.viml</string>
			<key>match</key>
			<string>(-)(\w+)(=)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameter.viml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.parameter.viml</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.assignment.parameter.viml</string>
				</dict>
			</dict>
		</dict>
		<key>pathname</key>
		<dict>
			<key>name</key>
			<string>constant.pathname.viml</string>
			<key>begin</key>
			<string>~/</string>
			<key>end</key>
			<string>(?=\s)</string>
		</dict>
		<key>regex</key>
		<dict>
			<key>name</key>
			<string>string.regexp.viml</string>
			<key>begin</key>
			<string>(?&lt;=\s|=)(\S)</string>
			<key>end</key>
			<string>$|(\1)(\S*)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#regexInnards</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.viml</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.viml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#regexOffset</string>
						</dict>
					</array>
				</dict>
			</dict>
		</dict>
		<key>regexInnards</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\[</string>
					<key>end</key>
					<string>\]|$</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#regexInnards</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.character-class.begin.viml</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.character-class.end.viml</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.viml</string>
					<key>match</key>
					<string>(\\).</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.backslash.escape.viml</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>regexOffset</key>
		<dict>
			<key>name</key>
			<string>meta.pattern-offset.viml</string>
			<key>match</key>
			<string>(ms|me|hs|he|rs|re|lc)(=)(?:(\d+)|([se])(?:([-+])(\d+))?)(,)?</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.language.pattern-offset.viml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.assignment.parameter.viml</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.integer.viml</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>constant.language.pattern-position.viml</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.arithmetic.viml</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.integer.viml</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.comma.viml</string>
				</dict>
			</dict>
		</dict>
		<key>register</key>
		<dict>
			<key>name</key>
			<string>variable.other.register.viml</string>
			<key>match</key>
			<string>(@)([-&quot;A-Za-z\d:.%#=*+~_/])</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.register.viml</string>
				</dict>
			</dict>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>string.quoted.double.empty.viml</string>
					<key>match</key>
					<string>(&quot;)(&quot;)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.viml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.viml</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>string.quoted.single.empty.viml</string>
					<key>match</key>
					<string>(&apos;)(&apos;)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.viml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.viml</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>string.quoted.double.viml</string>
					<key>match</key>
					<string>(&quot;)((?:[^\\&quot;]|\\.)*)(&quot;)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.viml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#escape</string>
								</dict>
							</array>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.viml</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>string.quoted.single.viml</string>
					<key>match</key>
					<string>(&apos;)((?:[^&apos;]|&apos;&apos;)*)(&apos;)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.viml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>name</key>
									<string>constant.character.escape.quotes.viml</string>
									<key>match</key>
									<string>&apos;&apos;</string>
								</dict>
							</array>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.viml</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>string.regexp.interpolated.viml</string>
					<key>match</key>
					<string>(/)(?:\\\\|\\/|[^\n/])*(/)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.regexp.begin.viml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.regexp.end.viml</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>supportType</key>
		<dict>
			<key>name</key>
			<string>entity.tag.name.viml</string>
			<key>match</key>
			<string>(&lt;).*?(&gt;)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.bracket.angle.begin.viml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.bracket.angle.end.viml</string>
				</dict>
			</dict>
		</dict>
		<key>supportVariable</key>
		<dict>
			<key>name</key>
			<string>support.variable.viml</string>
			<key>match</key>
			<string>\b(?:am(?:enu)?|(?:hl|inc)?search|[Bb]uf(?:[Nn]ew[Ff]ile|[Rr]ead)?|[Ff]ile[Tt]ype)\b</string>
		</dict>
		<key>syntax</key>
		<dict>
			<key>name</key>
			<string>meta.syntax-item.viml</string>
			<key>begin</key>
			<string>^\s*(:)?(?:(VimFold\w)\s+)?\s*(syntax|syn?)(?=\s|$)</string>
			<key>end</key>
			<string>$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\G\s+(case)(?:\s+(match|ignore))?(?=\s|$)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.syntax-case.viml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.constant.$2-case.viml</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>\G\s+(spell)(?:\s+(toplevel|notoplevel|default))?(?=\s|$)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.syntax-spellcheck.viml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.constant.$2-checking.viml</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>contentName</key>
					<string>keyword.other.syntax-definition.viml</string>
					<key>begin</key>
					<string>\G\s+(keyword)(?:\s+([-\w]+))?</string>
					<key>end</key>
					<string>(?=$)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#syntaxOptions</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#assignment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expr</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.syntax-keywords.viml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.group-name.viml</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>begin</key>
					<string>\G\s+(match)(?:\s+([-\w]+))?\s*</string>
					<key>end</key>
					<string>(?=$)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#syntaxRegex</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.syntax-match.viml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.group-name.viml</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>begin</key>
					<string>\G\s+(region)(?:\s+([-\w]+))?</string>
					<key>end</key>
					<string>(?=$)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#syntaxOptions</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#main</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.syntax-region.viml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.group-name.viml</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>begin</key>
					<string>\G\s+(cluster)(?:\s+([-\w]+))?(?=\s|$)</string>
					<key>end</key>
					<string>(?=$)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#syntaxOptions</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#main</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.syntax-cluster.viml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.group-name.viml</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>\G\s+(conceal)(?:\s+(on|off)(?=\s|$))?</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.syntax-conceal.viml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.constant.boolean.$2.viml</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>\G\s+(include)(?:\s+((@)?[-\w]+))?(?:\s+(\S+))?</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.syntax-include.viml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.group-name.viml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group-reference.viml</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.filename.viml</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#supportType</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>begin</key>
					<string>\G\s+(sync)(?=\s|$)</string>
					<key>end</key>
					<string>$</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\G\s+(fromstart)(?=\s|$)</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>support.constant.sync-$1.viml</string>
								</dict>
							</dict>
						</dict>
						<dict>
							<key>match</key>
							<string>\G\s+(ccomment|clear)(?:\s+(?![-\w]+\s*=)([-\w]+))?</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>support.constant.sync-$1.viml</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>variable.parameter.group-name.viml</string>
								</dict>
							</dict>
						</dict>
						<dict>
							<key>match</key>
							<string>\G\s+(minlines|lines)\s*(=)(\d*)</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>support.constant.sync-mode.viml</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.assignment.parameter.viml</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>constant.numeric.integer.viml</string>
								</dict>
							</dict>
						</dict>
						<dict>
							<key>match</key>
							<string>(?x)\G\s+(match|region)(?:\s+(?![-\w]+\s*=)([-\w]+))?</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>support.constant.sync-mode.viml</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>variable.parameter.group-name.viml</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>support.constant.sync-mode-location.viml</string>
								</dict>
							</dict>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?&lt;=\s)(groupt?here|linecont)(?:\s+(?![-\w]+\s*=)([-\w]+))?(?=\s|$)</string>
							<key>end</key>
							<string>(?=$)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#syntaxRegex</string>
								</dict>
							</array>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>support.constant.sync-match.viml</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>variable.parameter.group-name.viml</string>
								</dict>
							</dict>
						</dict>
						<dict>
							<key>include</key>
							<string>#syntaxOptions</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.syntax-sync.viml</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>include</key>
					<string>#main</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.key-value.colon.viml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.fold-command.viml</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage.type.syntax-item.viml</string>
				</dict>
			</dict>
		</dict>
		<key>syntaxOptions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.syntax-item.pattern-argument.viml</string>
					<key>begin</key>
					<string>(?&lt;=\s)(start|skip|end)(?:\s*(=))</string>
					<key>end</key>
					<string>(?=$|\s)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#regex</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.constant.$1-pattern.viml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.assignment.parameter.viml</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.syntax-item.argument.viml</string>
					<key>match</key>
					<string>(?x)(?&lt;=\s)
((?:matchgroup|contains|containedin|nextgroup|add|remove|minlines|linebreaks|maxlines)(?=\s*=)
|(?:cchar|conceal|concealends|contained|display|excludenl|extend|fold|keepend|oneline|skipempty|skipnl|skipwhite|transparent))
(?:(?=$|\s)|\s*(=)(\S*)?)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.constant.syntax-$1.viml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.assignment.parameter.viml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.syntax-option.viml</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#numbers</string>
								</dict>
								<dict>
									<key>name</key>
									<string>punctuation.separator.comma.viml</string>
									<key>match</key>
									<string>,</string>
								</dict>
								<dict>
									<key>name</key>
									<string>punctuation.definition.group-reference.viml</string>
									<key>match</key>
									<string>@</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>syntaxRegex</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#syntaxOptions</string>
				</dict>
				<dict>
					<key>name</key>
					<string>string.regexp.viml</string>
					<key>begin</key>
					<string>(?&lt;=\s)(\S)</string>
					<key>end</key>
					<string>(?:(\1)(\S*)(.*))?$</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#regexInnards</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.viml</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.viml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#regexOffset</string>
								</dict>
							</array>
						</dict>
						<key>3</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#syntaxOptions</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#main</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>variable</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>variable.language.self.viml</string>
					<key>match</key>
					<string>\b(self)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>support.variable.environment.viml</string>
					<key>match</key>
					<string>(\$)\w+</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.viml</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>variable.other.viml</string>
					<key>match</key>
					<string>(&amp;?)(?:([sSgGbBwWlLaAvV](:))|[@$]|&amp;(?!&amp;))\w*</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.reference.viml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.scope.viml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.scope.key-value.viml</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>vimAugroupKey</key>
		<dict>
			<key>name</key>
			<string>support.function.vimAugroupKey.viml</string>
			<key>match</key>
			<string>(?x) \b
( aug
| augroup
) \b</string>
		</dict>
		<key>vimAutoEvent</key>
		<dict>
			<key>name</key>
			<string>support.function.auto-event.viml</string>
			<key>match</key>
			<string>(?xi) \b
( BufAdd
| BufCreate
| BufDelete
| BufEnter
| BufFilePost
| BufFilePre
| BufHidden
| BufLeave
| BufNewFile
| BufNew
| BufReadCmd
| BufReadPost
| BufReadPre
| BufRead
| BufUnload
| BufWinEnter
| BufWinLeave
| BufWipeout
| BufWriteCmd
| BufWritePost
| BufWritePre
| BufWrite
| CmdUndefined
| CmdlineChanged
| CmdlineEnter
| CmdlineLeave
| CmdwinEnter
| CmdwinLeave
| ColorSchemePre
| ColorScheme
| CompleteChanged
| CompleteDonePre
| CompleteDone
| CursorHoldI
| CursorHold
| CursorMovedI
| CursorMoved
| DiffUpdated
| DirChanged
| EncodingChanged
| ExitPre
| FileAppendCmd
| FileAppendPost
| FileAppendPre
| FileChangedRO
| FileChangedShellPost
| FileChangedShell
| FileEncoding
| FileReadCmd
| FileReadPost
| FileReadPre
| FileType
| FileWriteCmd
| FileWritePost
| FileWritePre
| FilterReadPost
| FilterReadPre
| FilterWritePost
| FilterWritePre
| FocusGained
| FocusLost
| FuncUndefined
| GUIEnter
| GUIFailed
| InsertChange
| InsertCharPre
| InsertEnter
| InsertLeavePre
| InsertLeave
| MenuPopup
| OptionSet
| QuickFixCmdPost
| QuickFixCmdPre
| QuitPre
| RemoteReply
| SafeStateAgain
| SafeState
| SessionLoadPost
| ShellCmdPost
| ShellFilterPost
| SigUSR1
| SourceCmd
| SourcePost
| SourcePre
| SpellFileMissing
| StdinReadPost
| StdinReadPre
| SwapExists
| Syntax
| TabClosed
| TabEnter
| TabLeave
| TabNew
| TermChanged
| TermResponse
| TerminalOpen
| TerminalWinOpen
| TextChangedI
| TextChangedP
| TextChanged
| TextYankPost
| User
| VimEnter
| VimLeavePre
| VimLeave
| VimResized
| VimResume
| VimSuspend
| WinEnter
| WinLeave
| WinNew
) \b</string>
		</dict>
		<key>vimBehaveModel</key>
		<dict>
			<key>name</key>
			<string>support.function.vimBehaveModel.viml</string>
			<key>match</key>
			<string>(?x) \b
( mswin
| xterm
) \b</string>
		</dict>
		<key>vimCommand</key>
		<dict>
			<key>name</key>
			<string>support.function.command.viml</string>
			<key>match</key>
			<string>(?x) \b
( abc
| abclear
| abo
| aboveleft
| ab
| addd
| all?
| ar
| args
| arga
| argadd
| argd
| argdelete
| argdo
| arge
| argedit
| argg
| argglobal
| argl
| arglocal
| argu
| argument
| as
| ascii
| au
| a
| bN
| bNext
| b
| buffer
| ba
| ball
| badd?
| balt
| bd
| bdelete
| bel
| belowright
| bf
| bfirst
| bl
| blast
| bm
| bmodified
| bn
| bnext
| bo
| botright
| bp
| bprevious
| br
| brewind
| break?
| breaka
| breakadd
| breakd
| breakdel
| breakl
| breaklist
| bro
| browse
| bufdo
| buffers
| bun
| bunload
| bw
| bwipeout
| cN
| cNext
| cNf
| cNfile
| c
| change
| cabc
| cabclear
| cabo
| cabove
| cad
| caddbuffer
| cadde
| caddexpr
| caddf
| caddfile
| caf
| cafter
| call?
| cat
| catch
| ca
| cb
| cbuffer
| cbe
| cbefore
| cbel
| cbelow
| cbo
| cbottom
| ccl
| cclose
| cc
| cdo
| cd
| ce
| center
| cex
| cexpr
| cf
| cfile
| cfdo
| cfir
| cfirst
| cg
| cgetfile
| cgetb
| cgetbuffer
| cgete
| cgetexpr
| changes
| chd
| chdir
| che
| checkpath
| checkt
| checktime
| chi
| chistory
| cl
| clist
| cla
| clast
| class
| cle
| clearjumps
| clo
| close
| cmapc
| cmapclear
| cn
| cnext
| cnew
| cnewer
| cnf
| cnfile
| cnor
| co
| copy
| col
| colder
| colo
| colorscheme
| comc
| comclear
| comp
| compiler
| com
| con
| continue
| conf
| confirm
| const?
| copen?
| cp
| cprevious
| cpf
| cpfile
| cq
| cquit
| cr
| crewind
| cscope
| cstag
| cs
| cuna
| cunabbrev
| cun
| cw
| cwindow
| d
| delete
| debugg
| debuggreedy
| debug
| defc
| defcompile
| def
| delc
| delcommand
| delel
| delep
| deletel
| deletep
| deletl
| deletp
| delf
| delfunction
| dell
| delm
| delmarks
| delp
| dep
| di
| display
| dif
| diffupdate
| diffg
| diffget
| diffo
| diffoff
| diffp
| diffpatch
| diffput?
| diffs
| diffsplit
| difft
| diffthis
| dig
| digraphs
| dir
| disa
| disassemble
| dj
| djump
| dli
| dlist
| dl
| doaut
| doau
| do
| dp
| dr
| drop
| ds
| dsearch
| dsp
| dsplit
| e
| edit
| earlier
| ea
| echoc
| echoconsole
| echoe
| echoerr
| echom
| echomsg
| echon
| ec
| el
| else
| elseif?
| em
| emenu
| en
| endif
| enddef
| endf
| endfunction
| endfor?
| endt
| endtry
| endw
| endwhile
| enew?
| eval
| exit?
| export
| exp
| exu
| exusage
| ex
| f
| file
| files
| filetype
| filet
| filt
| filter
| find?
| fina
| finally
| fini
| finish
| fir
| first
| fix
| fixdel
| fo
| fold
| foldc
| foldclose
| foldd
| folddoopen
| folddoc
| folddoclosed
| foldo
| foldopen
| for
| fu
| function
| go
| goto
| gr
| grep
| grepa
| grepadd
| gui
| gvim
| g
| h
| help
| ha
| hardcopy
| helpc
| helpclose
| helpf
| helpfind
| helpg
| helpgrep
| helpt
| helptags
| hide?
| his
| history
| hi
| iabc
| iabclear
| ia
| if
| ij
| ijump
| il
| ilist
| imapc
| imapclear
| import
| imp
| inor
| interface
| intro
| in
| is
| isearch
| isp
| isplit
| iuna
| iunabbrev
| i
| j
| join
| ju
| jumps
| kee
| keepmarks
| keepalt
| keepa
| keepj
| keepjumps
| keepp
| keeppatterns
| k
| lN
| lNext
| lNf
| lNfile
| l
| list
| la
| last
| lab
| labove
| lad
| laddexpr
| laddb
| laddbuffer
| laddf
| laddfile
| laf
| lafter
| lan
| language
| later
| lat
| lb
| lbuffer
| lbe
| lbefore
| lbel
| lbelow
| lbo
| lbottom
| lcd?
| lch
| lchdir
| lcl
| lclose
| lcscope
| lcs
| ldo?
| le
| left
| lefta
| leftabove
| leg
| legacy
| lex
| lexpr
| lf
| lfile
| lfdo
| lfir
| lfirst
| lg
| lgetfile
| lgetb
| lgetbuffer
| lgete
| lgetexpr
| lgr
| lgrep
| lgrepa
| lgrepadd
| lh
| lhelpgrep
| lhi
| lhistory
| lla
| llast
| lli
| llist
| ll
| lmake?
| lmapc
| lmapclear
| lma
| lne
| lnext
| lnew
| lnewer
| lnf
| lnfile
| lo
| loadview
| loadkeymap
| loadk
| loc
| lockmarks
| lockv
| lockvar
| lol
| lolder
| lop
| lopen
| lp
| lprevious
| lpf
| lpfile
| lr
| lrewind
| ls
| lt
| ltag
| luado
| luafile
| lua
| lv
| lvimgrep
| lvimgrepa
| lvimgrepadd
| lw
| lwindow
| m
| move
| ma
| mark
| make?
| marks
| mat
| match
| menut
| menutranslate
| mes
| messages
| mk
| mkexrc
| mks
| mksession
| mksp
| mkspell
| mkv
| mkvimrc
| mkview?
| mode?
| mz
| mzscheme
| mzf
| mzfile
| n
| next
| nb
| nbkey
| nbc
| nbclose
| nbs
| nbstart
| new
| nmapc
| nmapclear
| noautocmd
| noa
| noh
| nohlsearch
| nore
| nor
| nos
| noswapfile
| nu
| number
| o
| open
| ol
| oldfiles
| omapc
| omapclear
| on
| only
| opt
| options
| ownsyntax
| p
| print
| pa
| packadd
| packl
| packloadall
| pc
| pclose
| pe
| perl
| ped
| pedit
| perldo?
| pop?
| popup?
| pp
| ppop
| pre
| preserve
| prev
| previous
| prof
| profile
| profd
| profdel
| promptf
| promptfind
| promptr
| promptrepl
| pro
| ps
| psearch
| ptN
| ptNext
| ptag?
| ptf
| ptfirst
| ptj
| ptjump
| ptl
| ptlast
| ptn
| ptnext
| ptp
| ptprevious
| ptr
| ptrewind
| pts
| ptselect
| put?
| pwd?
| py3do
| py3f
| py3file
| py3
| py
| python
| pydo
| pyf
| pyfile
| python3
| pythonx
| pyxdo
| pyxfile
| pyx
| q
| quit
| qa
| qall
| quita
| quitall
| r
| read
| rec
| recover
| redo?
| redir?
| redr
| redraw
| redraws
| redrawstatus
| redrawt
| redrawtabline
| reg
| registers
| res
| resize
| ret
| retab
| retu
| return
| rew
| rewind
| ri
| right
| rightb
| rightbelow
| ru
| runtime
| ruby?
| rubydo?
| rubyf
| rubyfile
| rundo
| rv
| rviminfo
| sIc
| sIe
| sIg
| sIl
| sIn
| sIp
| sIr
| sI
| sN
| sNext
| sa
| sargument
| sall?
| san
| sandbox
| sav
| saveas
| sbN
| sbNext
| sb
| sbuffer
| sba
| sball
| sbf
| sbfirst
| sbl
| sblast
| sbm
| sbmodified
| sbn
| sbnext
| sbp
| sbprevious
| sbr
| sbrewind
| scI
| sce
| scg
| sci
| scl
| scp
| scr
| scriptnames
| scripte
| scriptencoding
| scriptv
| scriptversion
| scscope
| scs
| sc
| set?
| setf
| setfiletype
| setg
| setglobal
| setl
| setlocal
| sf
| sfind
| sfir
| sfirst
| sgI
| sgc
| sge
| sgi
| sgl
| sgn
| sgp
| sgr
| sg
| sh
| shell
| sic
| sie
| sign
| sig
| sil
| silent
| sim
| simalt
| sin
| sip
| sir
| si
| sl
| sleep
| sla
| slast
| sm
| smagic
| sm
| smap
| smenu
| sme
| smile
| sn
| snext
| sno
| snomagic
| snoremenu
| snoreme
| so
| source
| sort?
| sp
| split
| spe
| spellgood
| spelld
| spelldump
| spelli
| spellinfo
| spellr
| spellrare
| spellr
| spellrepall
| spellr
| spellrrare
| spellu
| spellundo
| spellw
| spellwrong
| spr
| sprevious
| srI
| src
| sre
| srewind
| srg
| sri
| srl
| srn
| srp
| sr
| st
| stop
| stag?
| star
| startinsert
| startg
| startgreplace
| startr
| startreplace
| stj
| stjump
| stopi
| stopinsert
| sts
| stselect
| substitutepattern
| substituterepeat
| sun
| sunhide
| sunmenu
| sunme
| sus
| suspend
| sv
| sview
| sw
| swapname
| syncbind
| sync
| syntime
| syn
| sy
| tN
| tNext
| tag?
| tabN
| tabNext
| tabc
| tabclose
| tabdo?
| tabe
| tabedit
| tabf
| tabfind
| tabfir
| tabfirst
| tabl
| tablast
| tabm
| tabmove
| tabn
| tabnext
| tabnew
| tabo
| tabonly
| tabp
| tabprevious
| tabr
| tabrewind
| tabs
| tab
| tags
| tcl?
| tcd
| tch
| tchdir
| tcldo?
| tclf
| tclfile
| te
| tearoff
| ter
| terminal
| tf
| tfirst
| th
| throw
| tj
| tjump
| tl
| tlast
| tlmenu
| tlm
| tlnoremenu
| tln
| tlunmenu
| tlu
| tm
| tmenu
| tmap?
| tmapc
| tmapclear
| tn
| tnext
| tno
| tnoremap
| to
| topleft
| tp
| tprevious
| tr
| trewind
| try
| ts
| tselect
| tu
| tunmenu
| tunmap?
| type
| t
| u
| undo
| una
| unabbreviate
| undoj
| undojoin
| undol
| undolist
| unh
| unhide
| unlo
| unlockvar
| unl
| uns
| unsilent
| up
| update
| var
| ve
| version
| verb
| verbose
| vert
| vertical
| vi
| visual
| view?
| vim9
| vim9cmd
| vim9s
| vim9script
| vim
| vimgrep
| vimgrepa
| vimgrepadd
| viu
| viusage
| vmapc
| vmapclear
| vnew?
| vs
| vsplit
| v
| wN
| wNext
| w
| write
| wa
| wall
| wh
| while
| win
| winsize
| winc
| wincmd
| windo
| winp
| winpos
| wn
| wnext
| wp
| wprevious
| wqa
| wqall
| wq
| wundo
| wv
| wviminfo
| x
| xit
| xa
| xall
| xmapc
| xmapclear
| xmenu
| xme
| xnoremenu
| xnoreme
| xprop
| xr
| xrestore
| xunmenu
| xunme
| xwininfo
| y
| yank
) \b</string>
		</dict>
		<key>vimErrSetting</key>
		<dict>
			<key>name</key>
			<string>invalid.deprecated.legacy-setting.viml</string>
			<key>match</key>
			<string>(?x) \b
( autoprint
| beautify
| bioskey
| biosk
| conskey
| consk
| flash
| graphic
| hardtabs
| ht
| mesg
| noautoprint
| nobeautify
| nobioskey
| nobiosk
| noconskey
| noconsk
| noflash
| nographic
| nohardtabs
| nomesg
| nonovice
| noopen
| nooptimize
| noop
| noredraw
| noslowopen
| noslow
| nosourceany
| novice
| now1200
| now300
| now9600
| open
| optimize
| op
| redraw
| slowopen
| slow
| sourceany
| w1200
| w300
| w9600
) \b</string>
		</dict>
		<key>vimFTCmd</key>
		<dict>
			<key>name</key>
			<string>support.function.vimFTCmd.viml</string>
			<key>match</key>
			<string>(?x) \b
( filet
| filetype
) \b</string>
		</dict>
		<key>vimFTOption</key>
		<dict>
			<key>name</key>
			<string>support.function.vimFTOption.viml</string>
			<key>match</key>
			<string>(?x) \b
( detect
| indent
| off
| on
| plugin
) \b</string>
		</dict>
		<key>vimFgBgAttrib</key>
		<dict>
			<key>name</key>
			<string>support.constant.attribute.viml</string>
			<key>match</key>
			<string>(?x) \b
( background
| bg
| fg
| foreground
| none
) \b</string>
		</dict>
		<key>vimFuncKey</key>
		<dict>
			<key>name</key>
			<string>support.function.vimFuncKey.viml</string>
			<key>match</key>
			<string>(?x) \b
( def
| fu
| function
) \b</string>
		</dict>
		<key>vimFuncName</key>
		<dict>
			<key>name</key>
			<string>support.function.viml</string>
			<key>match</key>
			<string>(?x) \b
( abs
| acos
| add
| and
| appendbufline
| append
| argc
| argidx
| arglistid
| argv
| asin
| assert_beeps
| assert_equalfile
| assert_equal
| assert_exception
| assert_fails
| assert_false
| assert_inrange
| assert_match
| assert_nobeep
| assert_notequal
| assert_notmatch
| assert_report
| assert_true
| atan2
| atan
| balloon_gettext
| balloon_show
| balloon_split
| browsedir
| browse
| bufadd
| bufexists
| buflisted
| bufloaded
| bufload
| bufname
| bufnr
| bufwinid
| bufwinnr
| byte2line
| byteidxcomp
| byteidx
| call
| ceil
| ch_canread
| ch_close_in
| ch_close
| ch_evalexpr
| ch_evalraw
| ch_getbufnr
| ch_getjob
| ch_info
| ch_logfile
| ch_log
| ch_open
| ch_readblob
| ch_readraw
| ch_read
| ch_sendexpr
| ch_sendraw
| ch_setoptions
| ch_status
| changenr
| char2nr
| charclass
| charcol
| charidx
| chdir
| cindent
| clearmatches
| col
| complete_add
| complete_check
| complete_info
| complete
| confirm
| copy
| cosh
| cos
| count
| cscope_connection
| cursor
| debugbreak
| deepcopy
| deletebufline
| delete
| did_filetype
| diff_filler
| diff_hlID
| echoraw
| empty
| environ
| escape
| eval
| eventhandler
| executable
| execute
| exepath
| exists
| expandcmd
| expand
| exp
| extendnew
| extend
| feedkeys
| filereadable
| filewritable
| filter
| finddir
| findfile
| flattennew
| flatten
| float2nr
| floor
| fmod
| fnameescape
| fnamemodify
| foldclosedend
| foldclosed
| foldlevel
| foldtextresult
| foldtext
| foreground
| fullcommand
| funcref
| function
| garbagecollect
| getbufinfo
| getbufline
| getbufvar
| getchangelist
| getcharmod
| getcharpos
| getcharsearch
| getchar
| getcmdline
| getcmdpos
| getcmdtype
| getcmdwintype
| getcompletion
| getcurpos
| getcursorcharpos
| getcwd
| getenv
| getfontname
| getfperm
| getfsize
| getftime
| getftype
| getimstatus
| getjumplist
| getline
| getloclist
| getmarklist
| getmatches
| getmousepos
| getpid
| getpos
| getqflist
| getreginfo
| getregtype
| getreg
| gettabinfo
| gettabvar
| gettabwinvar
| gettagstack
| gettext
| getwininfo
| getwinposx
| getwinposy
| getwinpos
| getwinvar
| get
| glob2regpat
| globpath
| glob
| has_key
| haslocaldir
| hasmapto
| has
| histadd
| histdel
| histget
| histnr
| hlID
| hlexists
| hostname
| iconv
| indent
| index
| inputdialog
| inputlist
| inputrestore
| inputsave
| inputsecret
| input
| insert
| interrupt
| invert
| isdirectory
| isinf
| islocked
| isnan
| items
| job_getchannel
| job_info
| job_setoptions
| job_start
| job_status
| job_stop
| join
| js_decode
| js_encode
| json_decode
| json_encode
| keys
| len
| libcallnr
| libcall
| line2byte
| line
| lispindent
| list2str
| listener_add
| listener_flush
| listener_remove
| localtime
| log10
| log
| luaeval
| maparg
| mapcheck
| mapnew
| mapset
| map
| matchaddpos
| matchadd
| matcharg
| matchdelete
| matchend
| matchfuzzypos
| matchfuzzy
| matchlist
| matchstrpos
| matchstr
| match
| max
| menu_info
| min
| mkdir
| mode
| mzeval
| nextnonblank
| nr2char
| or
| pathshorten
| perleval
| popup_atcursor
| popup_beval
| popup_clear
| popup_close
| popup_create
| popup_dialog
| popup_filter_menu
| popup_filter_yesno
| popup_findinfo
| popup_findpreview
| popup_getoptions
| popup_getpos
| popup_hide
| popup_list
| popup_locate
| popup_menu
| popup_move
| popup_notification
| popup_setoptions
| popup_settext
| popup_show
| pow
| prevnonblank
| printf
| prompt_getprompt
| prompt_setcallback
| prompt_setinterrupt
| prompt_setprompt
| prop_add
| prop_clear
| prop_find
| prop_list
| prop_remove
| prop_type_add
| prop_type_change
| prop_type_delete
| prop_type_get
| prop_type_list
| pum_getpos
| pumvisible
| py3eval
| pyeval
| pyxeval
| rand
| range
| readblob
| readdirex
| readdir
| readfile
| reduce
| reg_executing
| reg_recording
| reltimefloat
| reltimestr
| reltime
| remote_expr
| remote_foreground
| remote_peek
| remote_read
| remote_send
| remote_startserver
| remove
| rename
| repeat
| resolve
| reverse
| round
| rubyeval
| screenattr
| screenchars
| screenchar
| screencol
| screenpos
| screenrow
| screenstring
| searchcount
| searchdecl
| searchpairpos
| searchpair
| searchpos
| search
| server2client
| serverlist
| setbufline
| setbufvar
| setcellwidths
| setcharpos
| setcharsearch
| setcmdpos
| setcursorcharpos
| setenv
| setfperm
| setline
| setloclist
| setmatches
| setpos
| setqflist
| setreg
| settabvar
| settabwinvar
| settagstack
| setwinvar
| sha256
| shellescape
| shiftwidth
| sign_define
| sign_getdefined
| sign_getplaced
| sign_jump
| sign_placelist
| sign_place
| sign_undefine
| sign_unplacelist
| sign_unplace
| simplify
| sinh
| sin
| slice
| sort
| sound_clear
| sound_playevent
| sound_playfile
| sound_stop
| soundfold
| spellbadword
| spellsuggest
| split
| sqrt
| srand
| state
| str2float
| str2list
| str2nr
| strcharlen
| strcharpart
| strchars
| strdisplaywidth
| strftime
| strgetchar
| stridx
| string
| strlen
| strpart
| strptime
| strridx
| strtrans
| strwidth
| submatch
| substitute
| swapinfo
| swapname
| synIDattr
| synIDtrans
| synID
| synconcealed
| synstack
| systemlist
| system
| tabpagebuflist
| tabpagenr
| tabpagewinnr
| tagfiles
| taglist
| tanh
| tan
| tempname
| term_dumpdiff
| term_dumpload
| term_dumpwrite
| term_getaltscreen
| term_getansicolors
| term_getattr
| term_getcursor
| term_getjob
| term_getline
| term_getscrolled
| term_getsize
| term_getstatus
| term_gettitle
| term_gettty
| term_list
| term_scrape
| term_sendkeys
| term_setansicolors
| term_setapi
| term_setkill
| term_setrestore
| term_setsize
| term_start
| term_wait
| terminalprops
| test_alloc_fail
| test_autochdir
| test_feedinput
| test_garbagecollect_now
| test_garbagecollect_soon
| test_getvalue
| test_ignore_error
| test_null_blob
| test_null_channel
| test_null_dict
| test_null_function
| test_null_job
| test_null_list
| test_null_partial
| test_null_string
| test_option_not_set
| test_override
| test_refcount
| test_scrollbar
| test_setmouse
| test_settime
| test_srand_seed
| test_unknown
| test_void
| timer_info
| timer_pause
| timer_start
| timer_stopall
| timer_stop
| tolower
| toupper
| trim
| trunc
| tr
| typename
| type
| undofile
| undotree
| uniq
| values
| virtcol
| visualmode
| wildmenumode
| win_execute
| win_findbuf
| win_getid
| win_gettype
| win_gotoid
| win_id2tabwin
| win_id2win
| win_screenpos
| win_splitmove
| winbufnr
| wincol
| windowsversion
| winheight
| winlayout
| winline
| winnr
| winrestcmd
| winrestview
| winsaveview
| winwidth
| wordcount
| writefile
| xor
) \b</string>
		</dict>
		<key>vimGroup</key>
		<dict>
			<key>name</key>
			<string>support.type.group.viml</string>
			<key>match</key>
			<string>(?xi) \b
( Boolean
| Character
| Comment
| Conditional
| Constant
| Debug
| Define
| Delimiter
| Error
| Exception
| Float
| Function
| Identifier
| Ignore
| Include
| Keyword
| Label
| Macro
| Number
| Operator
| PreCondit
| PreProc
| Repeat
| SpecialChar
| SpecialComment
| Special
| Statement
| StorageClass
| String
| Structure
| Tag
| Todo
| Typedef
| Type
| Underlined
) \b</string>
		</dict>
		<key>vimGroupSpecial</key>
		<dict>
			<key>name</key>
			<string>support.function.vimGroupSpecial.viml</string>
			<key>match</key>
			<string>(?x) \b
( ALLBUT
| ALL
| CONTAINED
| TOP
) \b</string>
		</dict>
		<key>vimHLGroup</key>
		<dict>
			<key>name</key>
			<string>support.type.highlight-group.viml</string>
			<key>match</key>
			<string>(?xi) \b
( ColorColumn
| CursorColumn
| CursorIM
| CursorLineNr
| CursorLine
| Cursor
| DiffAdd
| DiffChange
| DiffDelete
| DiffText
| Directory
| EndOfBuffer
| ErrorMsg
| FoldColumn
| Folded
| IncSearch
| LineNrAbove
| LineNrBelow
| LineNr
| MatchParen
| Menu
| ModeMsg
| MoreMsg
| NonText
| Normal
| PmenuSbar
| PmenuSel
| PmenuThumb
| Pmenu
| Question
| QuickFixLine
| Scrollbar
| Search
| SignColumn
| SpecialKey
| SpellBad
| SpellCap
| SpellLocal
| SpellRare
| StatusLineNC
| StatusLineTerm
| StatusLine
| TabLineFill
| TabLineSel
| TabLine
| Terminal
| Title
| Tooltip
| VertSplit
| VisualNOS
| Visual
| WarningMsg
| WildMenu
) \b</string>
		</dict>
		<key>vimHiAttrib</key>
		<dict>
			<key>name</key>
			<string>support.function.vimHiAttrib.viml</string>
			<key>match</key>
			<string>(?x) \b
( bold
| inverse
| italic
| nocombine
| none
| reverse
| standout
| strikethrough
| undercurl
| underline
) \b</string>
		</dict>
		<key>vimHiClear</key>
		<dict>
			<key>name</key>
			<string>support.function.vimHiClear.viml</string>
			<key>match</key>
			<string>(?x) \b
( clear
) \b</string>
		</dict>
		<key>vimHiCtermColor</key>
		<dict>
			<key>name</key>
			<string>support.constant.colour.color.$1.viml</string>
			<key>match</key>
			<string>(?x) \b
( black
| blue
| brown
| cyan
| darkblue
| darkcyan
| darkgray
| darkgreen
| darkgrey
| darkmagenta
| darkred
| darkyellow
| gray
| green
| grey40
| grey50
| grey90
| grey
| lightblue
| lightcyan
| lightgray
| lightgreen
| lightgrey
| lightmagenta
| lightred
| lightyellow
| magenta
| red
| seagreen
| white
| yellow
) \b</string>
		</dict>
		<key>vimMapModKey</key>
		<dict>
			<key>name</key>
			<string>support.function.vimMapModKey.viml</string>
			<key>match</key>
			<string>(?x) \b
( buffer
| expr
| leader
| localleader
| nowait
| plug
| script
| sid
| silent
| unique
) \b</string>
		</dict>
		<key>vimOption</key>
		<dict>
			<key>name</key>
			<string>support.variable.option.viml</string>
			<key>match</key>
			<string>(?x) \b
( acd
| ai
| akm
| aleph
| allowrevins
| altkeymap
| al
| ambiwidth
| ambw
| antialias
| anti
| arabicshape
| arabic
| arab
| ari
| arshape
| ar
| asd
| autochdir
| autoindent
| autoread
| autoshelldir
| autowriteall
| autowrite
| awa
| aw
| background
| backspace
| backupcopy
| backupdir
| backupext
| backupskip
| backup
| balloondelay
| balloonevalterm
| ballooneval
| balloonexpr
| bdir
| bdlay
| belloff
| bevalterm
| beval
| bexpr
| bex
| bg
| bh
| binary
| bin
| bkc
| bk
| bl
| bomb
| bo
| breakat
| breakindentopt
| breakindent
| briopt
| bri
| brk
| browsedir
| bsdir
| bsk
| bs
| bt
| bufhidden
| buflisted
| buftype
| casemap
| cb
| ccv
| cc
| cdpath
| cd
| cedit
| cfu
| cf
| charconvert
| ch
| cindent
| cinkeys
| cink
| cinoptions
| cino
| cinwords
| cinw
| cin
| ci
| clipboard
| cmdheight
| cmdwinheight
| cmp
| cms
| cm
| cocu
| cole
| colorcolumn
| columns
| commentstring
| comments
| compatible
| completefunc
| completeopt
| completepopup
| completeslash
| complete
| com
| confirm
| copyindent
| cot
| co
| cpoptions
| cpo
| cpp
| cpt
| cp
| crb
| cryptmethod
| cscopepathcomp
| cscopeprg
| cscopequickfix
| cscoperelative
| cscopetagorder
| cscopetag
| cscopeverbose
| csl
| cspc
| csprg
| csqf
| csre
| csto
| cst
| csverb
| cuc
| culopt
| cul
| cursorbind
| cursorcolumn
| cursorlineopt
| cursorline
| cursor
| cwh
| debug
| deco
| define
| def
| delcombine
| dex
| dg
| dictionary
| dict
| diffexpr
| diffopt
| diff
| digraph
| dip
| directory
| dir
| display
| dy
| eadirection
| ead
| ea
| eb
| edcompatible
| ed
| efm
| ef
| ei
| ek
| emoji
| emo
| encoding
| enc
| endofline
| eol
| ep
| equalalways
| equalprg
| errorbells
| errorfile
| errorformat
| esckeys
| et
| eventignore
| expandtab
| exrc
| ex
| fcl
| fcs
| fdc
| fde
| fdi
| fdls
| fdl
| fdm
| fdn
| fdo
| fdt
| fencs
| fenc
| fen
| fex
| ffs
| ff
| fic
| fileencodings
| fileencoding
| fileformats
| fileformat
| fileignorecase
| filetype
| fillchars
| fixendofline
| fixeol
| fkmap
| fk
| flp
| fml
| fmr
| foldclose
| foldcolumn
| foldenable
| foldexpr
| foldignore
| foldlevelstart
| foldlevel
| foldmarker
| foldmethod
| foldminlines
| foldnestmax
| foldopen
| foldtext
| formatexpr
| formatlistpat
| formatoptions
| formatprg
| fo
| fp
| fsync
| fs
| ft
| gcr
| gdefault
| gd
| gfm
| gfn
| gfs
| gfw
| ghr
| go
| gp
| grepformat
| grepprg
| gtl
| gtt
| guicursor
| guifontset
| guifontwide
| guifont
| guiheadroom
| guioptions
| guipty
| guitablabel
| guitabtooltip
| helpfile
| helpheight
| helplang
| hf
| hh
| hidden
| hid
| highlight
| history
| hi
| hkmapp
| hkmap
| hkp
| hk
| hlg
| hlsearch
| hls
| hl
| iconstring
| icon
| ic
| ignorecase
| imactivatefunc
| imactivatekey
| imaf
| imak
| imcmdline
| imc
| imdisable
| imd
| iminsert
| imi
| imsearch
| imsf
| imstatusfunc
| imstyle
| imst
| ims
| im
| includeexpr
| include
| incsearch
| inc
| indentexpr
| indentkeys
| inde
| indk
| inex
| infercase
| inf
| insertmode
| invacd
| invai
| invakm
| invallowrevins
| invaltkeymap
| invantialias
| invanti
| invarabicshape
| invarabic
| invarab
| invari
| invarshape
| invar
| invasd
| invautochdir
| invautoindent
| invautoread
| invautoshelldir
| invautowriteall
| invautowrite
| invawa
| invaw
| invbackup
| invballoonevalterm
| invballooneval
| invbevalterm
| invbeval
| invbinary
| invbin
| invbk
| invbl
| invbomb
| invbreakindent
| invbri
| invbuflisted
| invcf
| invcindent
| invcin
| invci
| invcompatible
| invconfirm
| invcopyindent
| invcp
| invcrb
| invcscoperelative
| invcscopetag
| invcscopeverbose
| invcsre
| invcst
| invcsverb
| invcuc
| invcul
| invcursorbind
| invcursorcolumn
| invcursorline
| invdeco
| invdelcombine
| invdg
| invdiff
| invdigraph
| invea
| inveb
| invedcompatible
| inved
| invek
| invemoji
| invemo
| invendofline
| inveol
| invequalalways
| inverrorbells
| invesckeys
| invet
| invexpandtab
| invexrc
| invex
| invfen
| invfic
| invfileignorecase
| invfixendofline
| invfixeol
| invfkmap
| invfk
| invfoldenable
| invfsync
| invfs
| invgdefault
| invgd
| invguipty
| invhidden
| invhid
| invhkmapp
| invhkmap
| invhkp
| invhk
| invhlsearch
| invhls
| invicon
| invic
| invignorecase
| invimcmdline
| invimc
| invimdisable
| invimd
| invim
| invincsearch
| invinfercase
| invinf
| invinsertmode
| invis
| invjoinspaces
| invjs
| invlangnoremap
| invlangremap
| invlazyredraw
| invlbr
| invlinebreak
| invlisp
| invlist
| invlnr
| invloadplugins
| invlpl
| invlrm
| invlz
| invmacatsui
| invmagic
| invma
| invmh
| invmle
| invml
| invmodelineexpr
| invmodeline
| invmodifiable
| invmodified
| invmod
| invmore
| invmousefocus
| invmousef
| invmousehide
| invnumber
| invnu
| invodev
| invopendevice
| invpaste
| invpi
| invpreserveindent
| invpreviewwindow
| invprompt
| invpvw
| invreadonly
| invrelativenumber
| invremap
| invrestorescreen
| invrevins
| invrightleft
| invri
| invrl
| invrnu
| invro
| invrs
| invruler
| invru
| invsb
| invscb
| invscf
| invscrollbind
| invscrollfocus
| invscs
| invsc
| invsecure
| invsft
| invshellslash
| invshelltemp
| invshiftround
| invshortname
| invshowcmd
| invshowfulltag
| invshowmatch
| invshowmode
| invsi
| invsmartcase
| invsmartindent
| invsmarttab
| invsmd
| invsm
| invsn
| invsol
| invspell
| invsplitbelow
| invsplitright
| invspr
| invsr
| invssl
| invstartofline
| invsta
| invstmp
| invswapfile
| invswf
| invtagbsearch
| invtagrelative
| invtagstack
| invta
| invtbidi
| invtbi
| invtbs
| invtermbidi
| invterse
| invtextauto
| invtextmode
| invtf
| invtgst
| invtildeop
| invtimeout
| invtitle
| invtop
| invto
| invtr
| invttimeout
| invttybuiltin
| invttyfast
| invtx
| invudf
| invundofile
| invvb
| invvisualbell
| invwarn
| invwa
| invwb
| invweirdinvert
| invwfh
| invwfw
| invwic
| invwildignorecase
| invwildmenu
| invwinfixheight
| invwinfixwidth
| invwiv
| invwmnu
| invwrapscan
| invwrap
| invwriteany
| invwritebackup
| invwrite
| invws
| isfname
| isf
| isident
| isi
| iskeyword
| isk
| isprint
| isp
| is
| joinspaces
| js
| keymap
| keymodel
| keywordprg
| key
| kmp
| km
| kp
| langmap
| langmenu
| langnoremap
| langremap
| laststatus
| lazyredraw
| lbr
| lcs
| level
| linebreak
| linespace
| lines
| lispwords
| lisp
| listchars
| list
| lmap
| lm
| lnr
| loadplugins
| lpl
| lrm
| lsp
| ls
| luadll
| lw
| lz
| macatsui
| magic
| makeef
| makeencoding
| makeprg
| matchpairs
| matchtime
| mat
| maxcombine
| maxfuncdepth
| maxmapdepth
| maxmempattern
| maxmemtot
| maxmem
| ma
| mco
| mef
| menc
| menuitems
| mfd
| mh
| mis
| mkspellmem
| mle
| mls
| ml
| mmd
| mmp
| mmt
| mm
| modelineexpr
| modelines
| modeline
| modifiable
| modified
| mod
| more
| mousefocus
| mousef
| mousehide
| mousemodel
| mousem
| mouseshape
| mouses
| mousetime
| mouset
| mouse
| mps
| mp
| msm
| mzquantum
| mzq
| mzschemedll
| mzschemegcdll
| nf
| noacd
| noai
| noakm
| noallowrevins
| noaltkeymap
| noantialias
| noanti
| noarabicshape
| noarabic
| noarab
| noari
| noarshape
| noar
| noasd
| noautochdir
| noautoindent
| noautoread
| noautoshelldir
| noautowriteall
| noautowrite
| noawa
| noaw
| nobackup
| noballoonevalterm
| noballooneval
| nobevalterm
| nobeval
| nobinary
| nobin
| nobk
| nobl
| nobomb
| nobreakindent
| nobri
| nobuflisted
| nocf
| nocindent
| nocin
| noci
| nocompatible
| noconfirm
| nocopyindent
| nocp
| nocrb
| nocscoperelative
| nocscopetag
| nocscopeverbose
| nocsre
| nocst
| nocsverb
| nocuc
| nocul
| nocursorbind
| nocursorcolumn
| nocursorline
| nodeco
| nodelcombine
| nodg
| nodiff
| nodigraph
| noea
| noeb
| noedcompatible
| noed
| noek
| noemoji
| noemo
| noendofline
| noeol
| noequalalways
| noerrorbells
| noesckeys
| noet
| noexpandtab
| noexrc
| noex
| nofen
| nofic
| nofileignorecase
| nofixendofline
| nofixeol
| nofkmap
| nofk
| nofoldenable
| nofsync
| nofs
| nogdefault
| nogd
| noguipty
| nohidden
| nohid
| nohkmapp
| nohkmap
| nohkp
| nohk
| nohlsearch
| nohls
| noicon
| noic
| noignorecase
| noimcmdline
| noimc
| noimdisable
| noimd
| noim
| noincsearch
| noinfercase
| noinf
| noinsertmode
| nois
| nojoinspaces
| nojs
| nolangnoremap
| nolangremap
| nolazyredraw
| nolbr
| nolinebreak
| nolisp
| nolist
| nolnr
| noloadplugins
| nolpl
| nolrm
| nolz
| nomacatsui
| nomagic
| noma
| nomh
| nomle
| noml
| nomodelineexpr
| nomodeline
| nomodifiable
| nomodified
| nomod
| nomore
| nomousefocus
| nomousef
| nomousehide
| nonumber
| nonu
| noodev
| noopendevice
| nopaste
| nopi
| nopreserveindent
| nopreviewwindow
| noprompt
| nopvw
| noreadonly
| norelativenumber
| noremap
| norestorescreen
| norevins
| norightleft
| nori
| norl
| nornu
| noro
| nors
| noruler
| noru
| nosb
| noscb
| noscf
| noscrollbind
| noscrollfocus
| noscs
| nosc
| nosecure
| nosft
| noshellslash
| noshelltemp
| noshiftround
| noshortname
| noshowcmd
| noshowfulltag
| noshowmatch
| noshowmode
| nosi
| nosmartcase
| nosmartindent
| nosmarttab
| nosmd
| nosm
| nosn
| nosol
| nospell
| nosplitbelow
| nosplitright
| nospr
| nosr
| nossl
| nostartofline
| nosta
| nostmp
| noswapfile
| noswf
| notagbsearch
| notagrelative
| notagstack
| nota
| notbidi
| notbi
| notbs
| notermbidi
| noterse
| notextauto
| notextmode
| notf
| notgst
| notildeop
| notimeout
| notitle
| notop
| noto
| notr
| nottimeout
| nottybuiltin
| nottyfast
| notx
| noudf
| noundofile
| novb
| novisualbell
| nowarn
| nowa
| nowb
| noweirdinvert
| nowfh
| nowfw
| nowic
| nowildignorecase
| nowildmenu
| nowinfixheight
| nowinfixwidth
| nowiv
| nowmnu
| nowrapscan
| nowrap
| nowriteany
| nowritebackup
| nowrite
| nows
| nrformats
| numberwidth
| number
| nuw
| nu
| odev
| oft
| ofu
| omnifunc
| opendevice
| operatorfunc
| opfunc
| osfiletype
| packpath
| paragraphs
| para
| pastetoggle
| paste
| patchexpr
| patchmode
| path
| pa
| pdev
| penc
| perldll
| pexpr
| pex
| pfn
| pheader
| ph
| pi
| pmbcs
| pmbfn
| pm
| popt
| pp
| preserveindent
| previewheight
| previewpopup
| previewwindow
| printdevice
| printencoding
| printexpr
| printfont
| printheader
| printmbcharset
| printmbfont
| printoptions
| prompt
| pt
| pumheight
| pumwidth
| pvh
| pvp
| pvw
| pw
| pythondll
| pythonhome
| pythonthreedll
| pythonthreehome
| pyxversion
| pyx
| qe
| qftf
| quickfixtextfunc
| quoteescape
| rdt
| readonly
| redrawtime
| regexpengine
| relativenumber
| remap
| renderoptions
| report
| restorescreen
| revins
| re
| rightleftcmd
| rightleft
| ri
| rlc
| rl
| rnu
| rop
| ro
| rs
| rtp
| rubydll
| ruf
| rulerformat
| ruler
| runtimepath
| ru
| sbo
| sbr
| sb
| scb
| scf
| scl
| scrollbind
| scrollfocus
| scrolljump
| scrolloff
| scrollopt
| scroll
| scr
| scs
| sc
| sections
| sect
| secure
| selection
| selectmode
| sel
| sessionoptions
| sft
| shcf
| shellcmdflag
| shellpipe
| shellquote
| shellredir
| shellslash
| shelltemp
| shelltype
| shellxescape
| shellxquote
| shell
| shiftround
| shiftwidth
| shm
| shortmess
| shortname
| showbreak
| showcmd
| showfulltag
| showmatch
| showmode
| showtabline
| shq
| sh
| sidescrolloff
| sidescroll
| signcolumn
| siso
| si
| sj
| slm
| smartcase
| smartindent
| smarttab
| smc
| smd
| sm
| sn
| softtabstop
| sol
| so
| spc
| spellcapcheck
| spellfile
| spelllang
| spelloptions
| spellsuggest
| spell
| spf
| splitbelow
| splitright
| spl
| spo
| spr
| sps
| sp
| srr
| sr
| ssl
| ssop
| ss
| stal
| startofline
| statusline
| sta
| stl
| stmp
| sts
| st
| sua
| suffixesadd
| suffixes
| su
| swapfile
| swapsync
| swb
| swf
| switchbuf
| sws
| sw
| sxe
| sxq
| synmaxcol
| syntax
| syn
| t_8b
| t_8f
| t_8u
| t_AB
| t_AF
| t_AL
| t_AU
| t_BD
| t_BE
| t_CS
| t_CV
| t_Ce
| t_Co
| t_Cs
| t_DL
| t_EC
| t_EI
| t_F1
| t_F2
| t_F3
| t_F4
| t_F5
| t_F6
| t_F7
| t_F8
| t_F9
| t_GP
| t_IE
| t_IS
| t_K1
| t_K3
| t_K4
| t_K5
| t_K6
| t_K7
| t_K8
| t_K9
| t_KA
| t_KB
| t_KC
| t_KD
| t_KE
| t_KF
| t_KG
| t_KH
| t_KI
| t_KJ
| t_KK
| t_KL
| t_PE
| t_PS
| t_RB
| t_RC
| t_RF
| t_RI
| t_RS
| t_RT
| t_RV
| t_Ri
| t_SC
| t_SH
| t_SI
| t_SR
| t_ST
| t_Sb
| t_Sf
| t_Si
| t_TE
| t_TI
| t_Te
| t_Ts
| t_VS
| t_WP
| t_WS
| t_ZH
| t_ZR
| t_al
| t_bc
| t_cd
| t_ce
| t_cl
| t_cm
| t_cs
| t_da
| t_db
| t_dl
| t_fd
| t_fe
| t_fs
| t_k1
| t_k2
| t_k3
| t_k4
| t_k5
| t_k6
| t_k7
| t_k8
| t_k9
| t_kB
| t_kD
| t_kI
| t_kN
| t_kP
| t_kb
| t_kd
| t_ke
| t_kh
| t_kl
| t_kr
| t_ks
| t_ku
| t_le
| t_mb
| t_md
| t_me
| t_mr
| t_ms
| t_nd
| t_op
| t_se
| t_so
| t_sr
| t_te
| t_ti
| t_ts
| t_u7
| t_ue
| t_us
| t_ut
| t_vb
| t_ve
| t_vi
| t_vs
| t_xn
| t_xs
| tabline
| tabpagemax
| tabstop
| tagbsearch
| tagcase
| tagfunc
| taglength
| tagrelative
| tagstack
| tags
| tag
| tal
| ta
| tbidi
| tbis
| tbi
| tbs
| tb
| tcldll
| tc
| tenc
| termbidi
| termencoding
| termguicolors
| termwinkey
| termwinscroll
| termwinsize
| termwintype
| term
| terse
| textauto
| textmode
| textwidth
| tfu
| tf
| tgc
| tgst
| thesaurus
| tildeop
| timeoutlen
| timeout
| titlelen
| titleold
| titlestring
| title
| tl
| tm
| toolbariconsize
| toolbar
| top
| to
| tpm
| tr
| tsl
| tsr
| ts
| ttimeoutlen
| ttimeout
| ttm
| ttybuiltin
| ttyfast
| ttymouse
| ttym
| ttyscroll
| ttytype
| tty
| twk
| twsl
| tws
| twt
| tw
| tx
| uc
| udf
| udir
| ul
| undodir
| undofile
| undolevels
| undoreload
| updatecount
| updatetime
| ur
| ut
| varsofttabstop
| vartabstop
| vbs
| vb
| vdir
| verbosefile
| verbose
| ve
| vfile
| viewdir
| viewoptions
| vif
| viminfofile
| viminfo
| virtualedit
| visualbell
| vi
| vop
| vsts
| vts
| wak
| warn
| wa
| wb
| wcm
| wcr
| wc
| wd
| weirdinvert
| wfh
| wfw
| whichwrap
| wh
| wic
| wig
| wildcharm
| wildchar
| wildignorecase
| wildignore
| wildmenu
| wildmode
| wildoptions
| wim
| winaltkeys
| wincolor
| window
| winfixheight
| winfixwidth
| winheight
| winminheight
| winminwidth
| winptydll
| winwidth
| wiv
| wiw
| wi
| wmh
| wmnu
| wmw
| wm
| wop
| wrapmargin
| wrapscan
| wrap
| writeany
| writebackup
| writedelay
| write
| ws
| ww
) \b</string>
		</dict>
		<key>vimPattern</key>
		<dict>
			<key>name</key>
			<string>support.function.vimPattern.viml</string>
			<key>match</key>
			<string>(?x) \b
( end
| skip
| start
) \b</string>
		</dict>
		<key>vimStdPlugin</key>
		<dict>
			<key>name</key>
			<string>support.class.stdplugin.viml</string>
			<key>match</key>
			<string>(?x) \b
( Arguments
| Asm
| Break
| Cfilter
| Clear
| Continue
| DiffOrig
| Evaluate
| Finish
| Gdb
| Lfilter
| Man
| N
| Next
| Over
| P
| Print
| Program
| Run
| Source
| Step
| Stop
| S
| TOhtml
| TermdebugCommand
| Termdebug
| Winbar
| XMLent
| XMLns
) \b</string>
		</dict>
		<key>vimSynCase</key>
		<dict>
			<key>name</key>
			<string>support.function.vimSynCase.viml</string>
			<key>match</key>
			<string>(?x) \b
( ignore
| match
) \b</string>
		</dict>
		<key>vimSynType</key>
		<dict>
			<key>name</key>
			<string>support.function.vimSynType.viml</string>
			<key>match</key>
			<string>(?x) \b
( case
| clear
| cluster
| enable
| include
| iskeyword
| keyword
| list
| manual
| match
| off
| on
| region
| reset
| sync
) \b</string>
		</dict>
		<key>vimSyncC</key>
		<dict>
			<key>name</key>
			<string>support.function.vimSyncC.viml</string>
			<key>match</key>
			<string>(?x) \b
( ccomment
| clear
| fromstart
) \b</string>
		</dict>
		<key>vimSyncLinecont</key>
		<dict>
			<key>name</key>
			<string>support.function.vimSyncLinecont.viml</string>
			<key>match</key>
			<string>(?x) \b
( linecont
) \b</string>
		</dict>
		<key>vimSyncMatch</key>
		<dict>
			<key>name</key>
			<string>support.function.vimSyncMatch.viml</string>
			<key>match</key>
			<string>(?x) \b
( match
) \b</string>
		</dict>
		<key>vimSyncNone</key>
		<dict>
			<key>name</key>
			<string>support.function.vimSyncNone.viml</string>
			<key>match</key>
			<string>(?x) \b
( NONE
) \b</string>
		</dict>
		<key>vimSyncRegion</key>
		<dict>
			<key>name</key>
			<string>support.function.vimSyncRegion.viml</string>
			<key>match</key>
			<string>(?x) \b
( region
) \b</string>
		</dict>
		<key>vimTodo</key>
		<dict>
			<key>name</key>
			<string>support.constant.${1:/downcase}.viml</string>
			<key>match</key>
			<string>(?x) \b
( COMBAK
| FIXME
| TODO
| XXX
) \b</string>
		</dict>
		<key>vimUserAttrbCmplt</key>
		<dict>
			<key>name</key>
			<string>support.function.vimUserAttrbCmplt.viml</string>
			<key>match</key>
			<string>(?x) \b
( augroup
| behave
| buffer
| color
| command
| compiler
| cscope
| customlist
| custom
| dir
| environment
| event
| expression
| file_in_path
| filetype
| file
| function
| help
| highlight
| history
| locale
| mapping
| menu
| option
| packadd
| shellcmd
| sign
| syntax
| syntime
| tag_listfiles
| tag
| user
| var
) \b</string>
		</dict>
		<key>vimUserAttrbKey</key>
		<dict>
			<key>name</key>
			<string>support.function.vimUserAttrbKey.viml</string>
			<key>match</key>
			<string>(?x) \b
( bang?
| bar
| com
| complete
| cou
| count
| n
| nargs
| ra
| range
| re
| register
) \b</string>
		</dict>
		<key>vimUserCommand</key>
		<dict>
			<key>name</key>
			<string>support.function.vimUserCommand.viml</string>
			<key>match</key>
			<string>(?x) \b
( com
| command
) \b</string>
		</dict>
	</dict>
	<key>fileTypes</key>
	<array>
		<string>vim</string>
		<string>vba</string>
		<string>vimrc</string>
		<string>vmb</string>
	</array>
</dict>
</plist>
