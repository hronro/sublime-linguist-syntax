<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>name</key>
	<string>YARA</string>
	<key>scopeName</key>
	<string>source.yara</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#includes</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#imports</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#rules</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#unmatched-characters</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>arithmetic-operators</key>
		<dict>
			<key>name</key>
			<string>keyword.operator.arithmetic.yara</string>
			<key>match</key>
			<string>(?&lt;=[0-9A-Z_a-z()\[\]\s]|^)([+*\\%])(?=[-0-9A-Z_a-z()\s]|[!@#$]|$)</string>
		</dict>
		<key>arithmetic-unary-operators</key>
		<dict>
			<key>name</key>
			<string>keyword.operator.arithmetic.yara</string>
			<key>match</key>
			<string>(?&lt;=[0-9A-Z_a-z()\[\]\s]|^)(-)(?=[-0-9A-Z_a-z()\s]|[!@#$]|$)</string>
		</dict>
		<key>array-subscripting</key>
		<dict>
			<key>name</key>
			<string>punctuation.definition.array.access.yara</string>
			<key>match</key>
			<string>(\[|\])</string>
		</dict>
		<key>base64-modifier</key>
		<dict>
			<key>begin</key>
			<string>\b(base64)\s*(\()(?=\s*&quot;)</string>
			<key>end</key>
			<string>(\))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#quoted-strings-64</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#unmatched-characters</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.modifier.yara</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.parenthesis.begin.yara</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.parenthesis.end.yara</string>
				</dict>
			</dict>
		</dict>
		<key>bitwise-operators</key>
		<dict>
			<key>name</key>
			<string>keyword.operator.bitwise.yara</string>
			<key>match</key>
			<string>(?&lt;=[0-9A-Z_a-z()\[\]\s]|^)([&amp;|^]|&lt;&lt;|&gt;&gt;)(?=[-0-9A-Z_a-z()\s]|[!@#$]|$)</string>
		</dict>
		<key>bitwise-unary-operators</key>
		<dict>
			<key>name</key>
			<string>keyword.operator.bitwise.yara</string>
			<key>match</key>
			<string>(?&lt;=[0-9A-Z_a-z()\[\]\s]|^)(~)(?=[-0-9A-Z_a-z()\s]|[!@#$]|$)</string>
		</dict>
		<key>boolean-operators</key>
		<dict>
			<key>name</key>
			<string>keyword.operator.logical.yara</string>
			<key>match</key>
			<string>\b(not|defined|and|or)\b</string>
		</dict>
		<key>booleans</key>
		<dict>
			<key>name</key>
			<string>constant.language.yara</string>
			<key>match</key>
			<string>\b(false|true)\b</string>
		</dict>
		<key>comments</key>
		<dict>
			<key>name</key>
			<string>meta.comment.yara</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.line.double-slash.yara</string>
					<key>match</key>
					<string>//.*$</string>
				</dict>
				<dict>
					<key>name</key>
					<string>comment.block.yara</string>
					<key>begin</key>
					<string>/\*</string>
					<key>end</key>
					<string>\*/</string>
				</dict>
			</array>
		</dict>
		<key>condition-expression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#condition-nested-expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#boolean-operators</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#struct-member-access</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#array-subscripting</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#relational-operators</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#relational-operators-text</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#relational-operators-regexp</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#arithmetic-unary-operators</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#arithmetic-operators</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#bitwise-unary-operators</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#bitwise-operators</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#regexp-strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#quoted-strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#numbers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#separator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#range-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-identifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#booleans</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.numeric.keyword.yara</string>
					<key>match</key>
					<string>\b(all|any|none|filesize)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.numeric.keyword.yara invalid.deprecated.keyword.yara</string>
					<key>match</key>
					<string>\b(entrypoint)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>variable.language.string.identifier.wildcard.yara</string>
					<key>match</key>
					<string>\b(them)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.other.yara</string>
					<key>match</key>
					<string>\b(at|for|in|of)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>support.function.other.yara</string>
					<key>match</key>
					<string>\b((?:u?int)(?:8|16|32)(?:be)?)(?=\s*(\(|
))</string>
				</dict>
				<dict>
					<key>name</key>
					<string>variable.language.loop.variable.yara</string>
					<key>match</key>
					<string>([!@#$])(?![0-9A-Z_a-z])</string>
				</dict>
				<dict>
					<key>name</key>
					<string>variable.language.loop.enter.yara</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#identifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#unmatched-characters</string>
				</dict>
			</array>
		</dict>
		<key>condition-nested-expression</key>
		<dict>
			<key>begin</key>
			<string>(:\s*)?\(</string>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#condition-expression</string>
				</dict>
			</array>
		</dict>
		<key>hex-alternate-values</key>
		<dict>
			<key>begin</key>
			<string>\(</string>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#hex-values</string>
				</dict>
				<dict>
					<key>name</key>
					<string>entity.other.special.pipe.hex.yara</string>
					<key>match</key>
					<string>\|</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#hex-alternate-values</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#unmatched-characters</string>
				</dict>
			</array>
		</dict>
		<key>hex-jump</key>
		<dict>
			<key>name</key>
			<string>entity.name.jump.hex.yara</string>
			<key>begin</key>
			<string>\[\s*(?=([1-9][0-9]*|[0-9]*\s*-|[0-9]+\s*-\s*[0-9]*)\s*\])</string>
			<key>end</key>
			<string>\]</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.numeric.jump.hex.yara</string>
					<key>match</key>
					<string>[0-9]</string>
				</dict>
				<dict>
					<key>name</key>
					<string>entity.other.dash.jump.hex.yara</string>
					<key>match</key>
					<string>-</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#unmatched-characters</string>
				</dict>
			</array>
		</dict>
		<key>hex-string-value</key>
		<dict>
			<key>contentName</key>
			<string>entity.name.hex.yara</string>
			<key>begin</key>
			<string>\{</string>
			<key>end</key>
			<string>\}|(?=[^?0-9A-Fa-f\[\-\]()/\s\n])(.*)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#hex-jump</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#hex-values</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#hex-alternate-values</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#unmatched-characters</string>
				</dict>
			</array>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.newline.yara</string>
				</dict>
			</dict>
		</dict>
		<key>hex-values</key>
		<dict>
			<key>contentName</key>
			<string>string.other.hex.yara</string>
			<key>begin</key>
			<string>(?=[0-9?A-Fa-f])</string>
			<key>end</key>
			<string>(?=[\s\[()}/|])</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>invalid.illegal.hex.missingchar.yara</string>
					<key>match</key>
					<string>(?&lt;![0-9?A-Fa-f])[0-9?A-Fa-f]([0-9?A-Fa-f]{2})*(?![0-9?A-Fa-f])</string>
				</dict>
				<dict>
					<key>name</key>
					<string>string.other.hex.yara</string>
					<key>match</key>
					<string>[0-9A-Fa-f]</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.other.placeholder.hex.yara</string>
					<key>match</key>
					<string>\?</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#unmatched-characters</string>
				</dict>
			</array>
		</dict>
		<key>identifiers</key>
		<dict>
			<key>name</key>
			<string>variable.other.identifier.yara</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#reserved-identifiers</string>
				</dict>
				<dict>
					<key>name</key>
					<string>variable.other.identifier.yara</string>
					<key>match</key>
					<string>\b[A-Z_a-z][0-9A-Z_a-z]{0,127}\b</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#unmatched-characters</string>
				</dict>
			</array>
		</dict>
		<key>imports</key>
		<dict>
			<key>name</key>
			<string>keyword.control.directive.yara</string>
			<key>begin</key>
			<string>\b(import)(?=\s+&quot;)</string>
			<key>end</key>
			<string>(?&lt;=&quot;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#quoted-strings</string>
				</dict>
			</array>
		</dict>
		<key>includes</key>
		<dict>
			<key>name</key>
			<string>keyword.control.directive.yara</string>
			<key>begin</key>
			<string>\b(include)(?=\s+&quot;)</string>
			<key>end</key>
			<string>(?&lt;=&quot;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#quoted-strings</string>
				</dict>
			</array>
		</dict>
		<key>integers</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.numeric.dec.yara</string>
					<key>match</key>
					<string>\b[0-9]+(KB|MB)?\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.number.postfix.yara</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.numeric.hex.yara</string>
					<key>match</key>
					<string>\b0x[0-9A-Fa-f]+\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.numeric.oct.yara</string>
					<key>match</key>
					<string>\b(0o)([0-7]+)\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.number.yara</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>meta-value-bool</key>
		<dict>
			<key>name</key>
			<string>support.other.meta-name.strings.yara</string>
			<key>match</key>
			<string>\b([A-Z_a-z][0-9A-Z_a-z]{0,127})\s*(=)\s*(true|false)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.meta.identifier.yara</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment.yara</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.language.yara</string>
				</dict>
			</dict>
		</dict>
		<key>meta-value-int</key>
		<dict>
			<key>name</key>
			<string>support.other.meta-name.strings.yara</string>
			<key>match</key>
			<string>\b([A-Z_a-z][0-9A-Z_a-z]{0,127})\s*(=)\s*([0-9]+)(KB|MB)?</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.meta.identifier.yara</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment.yara</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.yara</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>storage.type.number.postfix.yara</string>
				</dict>
			</dict>
		</dict>
		<key>meta-value-string</key>
		<dict>
			<key>name</key>
			<string>support.other.meta-name.strings.yara</string>
			<key>begin</key>
			<string>\b([A-Z_a-z][0-9A-Z_a-z]{0,127})\s*(=)\s*(?=&quot;)</string>
			<key>end</key>
			<string>(?&lt;=&quot;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#quoted-strings</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.meta.identifier.yara</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment.yara</string>
				</dict>
			</dict>
		</dict>
		<key>numbers</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.numeric.yara</string>
					<key>match</key>
					<string>\b([0-9]+\.[0-9]+)\b</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#integers</string>
				</dict>
			</array>
		</dict>
		<key>quoted-strings</key>
		<dict>
			<key>name</key>
			<string>string.quoted.double.yara</string>
			<key>begin</key>
			<string>(?&lt;!&quot;)(&quot;)(?!\n)</string>
			<key>end</key>
			<string>(&quot;)|((?:\\&quot;)?[^&quot;]*\n)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.character.escape.yara</string>
					<key>match</key>
					<string>\\([nrt\\&quot;]|x[0-9A-Fa-f]{2})</string>
				</dict>
				<dict>
					<key>name</key>
					<string>string.quoted.double.ascii.yara</string>
					<key>match</key>
					<string>[\x20\x21\x23-\x5B\x5D-\x7E]</string>
				</dict>
				<dict>
					<key>name</key>
					<string>string.quoted.double.unicode.yara</string>
					<key>match</key>
					<string>[^\x00-\x7F]</string>
				</dict>
				<dict>
					<key>name</key>
					<string>invalid.illegal.character.yara</string>
					<key>match</key>
					<string>[&quot;\\\n\r]</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.yara</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.yara</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.newline.yara</string>
				</dict>
			</dict>
		</dict>
		<key>quoted-strings-64</key>
		<dict>
			<key>name</key>
			<string>string.quoted.double.yara</string>
			<key>begin</key>
			<string>(&quot;)(?=(\\([nrt\\&quot;]|x[0-9A-Fa-f]{2})|[\x20\x21\x23-\x5B\x5D-\x7E]){64}&quot;)</string>
			<key>end</key>
			<string>(&quot;)|(\n)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.character.escape.yara</string>
					<key>match</key>
					<string>\\([nrt\\&quot;]|x[0-9A-Fa-f]{2})</string>
				</dict>
				<dict>
					<key>name</key>
					<string>string.double.quoted.ascii.yara</string>
					<key>match</key>
					<string>[\x20\x21\x23-\x5B\x5D-\x7E]</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.yara</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.character.length.yara</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.yara</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.newline.yara</string>
				</dict>
			</dict>
		</dict>
		<key>range-operator</key>
		<dict>
			<key>name</key>
			<string>keyword.operator.range.yara</string>
			<key>match</key>
			<string>(?&lt;!\.)\.\.(?!\.)</string>
		</dict>
		<key>regexp-base-expression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.character.class.regexp</string>
					<key>match</key>
					<string>\.</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.assertion.regexp</string>
					<key>match</key>
					<string>\^</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.assertion.regexp</string>
					<key>match</key>
					<string>\$</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.quantifier.regexp</string>
					<key>match</key>
					<string>[+*?]\??</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.disjunction.regexp</string>
					<key>match</key>
					<string>\|</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.quantifier.regexp</string>
					<key>match</key>
					<string>\{([0-9]+|[0-9]+,(?:[0-9]+)?|,[0-9]+)\}</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.yara</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>include</key>
					<string>#regexp-escape-sequence</string>
				</dict>
				<dict>
					<key>name</key>
					<string>string.regexp.yara</string>
					<key>match</key>
					<string>[\x20!&quot;#%&amp;&apos;,\-0-9:-&gt;@A-Z\]_`a-z{}~]</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#unmatched-characters</string>
				</dict>
			</array>
		</dict>
		<key>regexp-character-set</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.character.set.regexp</string>
					<key>begin</key>
					<string>(\[)(\^)?(\])?(-)?</string>
					<key>end</key>
					<string>(-?)(\])|([^\]]*)(?=\n)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#regexp-character-set-escapes</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#regexp-escape-sequence</string>
						</dict>
						<dict>
							<key>name</key>
							<string>constant.character.set.regexp</string>
							<key>match</key>
							<string>[\x20-\x2E\x30-\x5B\x5E-\x7E]</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.other.set.regexp punctuation.character.set.begin.regexp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.negation.regexp</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.character.set.regexp</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>constant.character.set.regexp</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.character.set.regexp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.other.set.regexp punctuation.character.set.end.regexp</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.newline.yara</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>regexp-character-set-escapes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.character.escape.regexp</string>
					<key>match</key>
					<string>\\([\]bB])</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(-)(-)(-)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.character.set.regexp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.character.class.range.regexp</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.character.set.regexp</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>(-)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.character.class.range.regexp</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>regexp-escape-sequence</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.character.escape.regexp</string>
					<key>match</key>
					<string>\\[./afnrt\\]</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\\x[0-9A-Fa-f]{2})|(\\x[^\]/]{0,2})</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.character.escape.regexp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.character.escape.regex</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.class.regexp</string>
					<key>match</key>
					<string>\\([wWsSdD])</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.assertion.regexp</string>
					<key>match</key>
					<string>\\([bB])</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.character.escape.regexp</string>
					<key>match</key>
					<string>\\(.)</string>
				</dict>
			</array>
		</dict>
		<key>regexp-expression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#regexp-parentheses</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#regexp-character-set</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#regexp-base-expression</string>
				</dict>
				<dict>
					<key>name</key>
					<string>invalid.illegal.regexp.end.yara</string>
					<key>match</key>
					<string>/</string>
				</dict>
			</array>
		</dict>
		<key>regexp-parentheses</key>
		<dict>
			<key>begin</key>
			<string>(\()([+*?])?</string>
			<key>end</key>
			<string>(\))|([^)]*)(?=\n)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#regexp-expression</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.parenthesis.begin.regexp support.other.parenthesis.regexp</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.group.construct.regexp</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.parenthesis.end.regexp support.other.parenthesis.regexp</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.newline.yara</string>
				</dict>
			</dict>
		</dict>
		<key>regexp-strings</key>
		<dict>
			<key>name</key>
			<string>string.regexp.yara</string>
			<key>begin</key>
			<string>(?&lt;!/)(/)(?!/|\n)</string>
			<key>end</key>
			<string>(?&lt;!\\)(/)(i?s?)|((?:\\/)?[^/]*\n)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#regexp-expression</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.begin.yara</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.end.yara</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.flag.regexp</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.newline.yara</string>
				</dict>
			</dict>
		</dict>
		<key>relational-operators</key>
		<dict>
			<key>name</key>
			<string>keyword.operator.comparison.yara</string>
			<key>match</key>
			<string>(?&lt;=[0-9A-Z_a-z()\[\]\s]|^)(&gt;=?|&lt;=?|==|!=)(?=[-0-9A-Z_a-z()\s]|[!@#$]|$)</string>
		</dict>
		<key>relational-operators-regexp</key>
		<dict>
			<key>name</key>
			<string>keyword.operator.comparison.yara</string>
			<key>match</key>
			<string>\b(matches)(?=\s*/)</string>
		</dict>
		<key>relational-operators-text</key>
		<dict>
			<key>name</key>
			<string>keyword.operator.comparison.yara</string>
			<key>match</key>
			<string>\b(contains|icontains|startswith|istartswith|endswith|iendswith|iequals)(?=\s*&quot;)</string>
		</dict>
		<key>reserved-identifiers</key>
		<dict>
			<key>name</key>
			<string>invalid.illegal.identifier.yara</string>
			<key>match</key>
			<string>\b(all|and|any|ascii|at|base64|base64wide|condition|contains|endswith|entrypoint|false|filesize|for|fullword|global|import|icontains|iendswith|iequals|in|include|int16|int16be|int32|int32be|int8|int8be|istartswith|matches|meta|nocase|none|not|of|or|private|rule|startswith|strings|them|true|uint16|uint16be|uint32|uint32be|uint8|uint8be|wide|xor|defined)\b</string>
		</dict>
		<key>rule-conditions</key>
		<dict>
			<key>name</key>
			<string>entity.name.section.condition.yara</string>
			<key>begin</key>
			<string>\b(condition)\s*:</string>
			<key>end</key>
			<string>(?=\})</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#condition-expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#reserved-identifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#unmatched-characters</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.condition.yara</string>
				</dict>
			</dict>
		</dict>
		<key>rule-declaration</key>
		<dict>
			<key>name</key>
			<string>meta.function.yara</string>
			<key>begin</key>
			<string>\b(rule)\b</string>
			<key>end</key>
			<string>(?=[{:])</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#reserved-identifiers</string>
				</dict>
				<dict>
					<key>name</key>
					<string>entity.name.function.yara</string>
					<key>match</key>
					<string>\b[A-Z_a-z][0-9A-Z_a-z]{0,127}\b</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#unmatched-characters</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.yara</string>
				</dict>
			</dict>
		</dict>
		<key>rule-end</key>
		<dict>
			<key>name</key>
			<string>punctuation.definition.rule.end.yara</string>
			<key>match</key>
			<string>\}</string>
		</dict>
		<key>rule-meta</key>
		<dict>
			<key>begin</key>
			<string>\b(meta)\s*:</string>
			<key>end</key>
			<string>(?=\b(strings|condition)\b)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#reserved-identifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#meta-value-bool</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#meta-value-int</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#meta-value-string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#unmatched-characters</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.meta.yara</string>
				</dict>
			</dict>
		</dict>
		<key>rule-restrictions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>entity.name.type.restrictions.yara</string>
					<key>match</key>
					<string>\b(global|private)\b</string>
				</dict>
			</array>
		</dict>
		<key>rule-start</key>
		<dict>
			<key>name</key>
			<string>punctuation.definition.rule.start.yara</string>
			<key>match</key>
			<string>\{</string>
		</dict>
		<key>rule-strings</key>
		<dict>
			<key>name</key>
			<string>entity.name.section.strings.yara</string>
			<key>begin</key>
			<string>\b(strings)\s*:</string>
			<key>end</key>
			<string>(?=\b(condition)\b)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#reserved-identifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-assignment-text</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-assignment-regex</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-assignment-hex</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#unmatched-characters</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.strings.yara</string>
				</dict>
			</dict>
		</dict>
		<key>rule-tags</key>
		<dict>
			<key>name</key>
			<string>entity.name.tag.yara</string>
			<key>begin</key>
			<string>:</string>
			<key>end</key>
			<string>(?=\{)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#identifiers</string>
				</dict>
			</array>
		</dict>
		<key>rules</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#rule-restrictions</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#rule-declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#rule-tags</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#rule-start</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#rule-meta</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#rule-strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#rule-conditions</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#rule-end</string>
				</dict>
			</array>
		</dict>
		<key>separator</key>
		<dict>
			<key>name</key>
			<string>punctuation.separator.arguments.yara</string>
			<key>match</key>
			<string>,</string>
		</dict>
		<key>string-assignment-hex</key>
		<dict>
			<key>name</key>
			<string>support.other.attribute-name.strings.yara</string>
			<key>begin</key>
			<string>(\$)([0-9A-Z_a-z]+\b)?+\s*+([^\n\s=][^=]*)?(=)</string>
			<key>end</key>
			<string>(?=\b(condition)\b|\$)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#hex-string-value</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.other.modifier.yara</string>
					<key>match</key>
					<string>\b(private)\b</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#reserved-identifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#unmatched-characters</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.language.string.identifier.yara</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.other.string.identifier.yara</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.string.identifier.yara</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment.yara</string>
				</dict>
			</dict>
		</dict>
		<key>string-assignment-regex</key>
		<dict>
			<key>name</key>
			<string>support.other.attribute-name.strings.yara</string>
			<key>begin</key>
			<string>(\$)([0-9A-Z_a-z]+\b)?+\s*+([^\n\s=][^=]*)?(=)(?=\s*/)</string>
			<key>end</key>
			<string>(?=\b(condition)\b|\$)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#regexp-strings</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.other.modifier.yara</string>
					<key>match</key>
					<string>\b(nocase|wide|ascii|fullword|private)\b</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#reserved-identifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#unmatched-characters</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.language.string.identifier.yara</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.other.string.identifier.yara</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.string.identifier.yara</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment.yara</string>
				</dict>
			</dict>
		</dict>
		<key>string-assignment-text</key>
		<dict>
			<key>name</key>
			<string>support.other.attribute-name.strings.yara</string>
			<key>begin</key>
			<string>(\$)([0-9A-Z_a-z]+\b)?+\s*+([^\n\s=][^=]*)?(=)(?=\s*&quot;)</string>
			<key>end</key>
			<string>(?=\b(condition)\b|\$)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#text-strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#reserved-identifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#unmatched-characters</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.language.string.identifier.yara</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.other.string.identifier.yara</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.string.identifier.yara</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment.yara</string>
				</dict>
			</dict>
		</dict>
		<key>string-identifiers</key>
		<dict>
			<key>name</key>
			<string>variable.other.string_identifier.yara</string>
			<key>match</key>
			<string>([!@#$])([0-9A-Z_a-z]+|(?=[*]))([*]?)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.language.string.identifier.yara</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.other.string.identifier.yara</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.interpolated.string.identifier.yara</string>
				</dict>
			</dict>
		</dict>
		<key>struct-member-access</key>
		<dict>
			<key>name</key>
			<string>meta.struct.access.yara</string>
			<key>match</key>
			<string>(?!&lt;\.\s*)\.\s*(?!\.)</string>
		</dict>
		<key>text-strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#quoted-strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#xor-modifier</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#base64-modifier</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.other.modifier.yara</string>
					<key>match</key>
					<string>\b(nocase|wide|ascii|xor|base64|base64wide|fullword|private)\b(?!\()</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#unmatched-characters</string>
				</dict>
			</array>
		</dict>
		<key>unmatched-characters</key>
		<dict>
			<key>name</key>
			<string>invalid.illegal.character.yara</string>
			<key>match</key>
			<string>\S</string>
		</dict>
		<key>xor-modifier</key>
		<dict>
			<key>match</key>
			<string>\b(xor)\s*(\()\s*(0x[0-9A-Fa-f]{1,2}|0o[0-7]{1,3}|[0-9]{1,3})(?:\s*(-)\s*(0x[0-9A-Fa-f]{1,2}|0o[0-7]{1,3}|[0-9]{1,3}))?\s*(\))</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.modifier.yara</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.parenthesis.begin.yara</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.yara</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>constant.character.hyphen.yara</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.yara</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>punctuation.parenthesis.end.yara</string>
				</dict>
			</dict>
		</dict>
	</dict>
	<key>fileTypes</key>
	<array>
		<string>yar</string>
		<string>yara</string>
	</array>
</dict>
</plist>
