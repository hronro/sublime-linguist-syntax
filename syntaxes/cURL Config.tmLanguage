<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>name</key>
	<string>.curlrc</string>
	<key>scopeName</key>
	<string>source.curlrc</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#main</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>auth</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>([^\s:;]+)(:)([^\s=:;]*)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.other.auth-info.curlrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>etc#kolon</string>
								</dict>
							</array>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.other.auth-info.curlrc</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>(:)([^\s:;]*)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>etc#kolon</string>
								</dict>
							</array>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.other.auth-info.curlrc</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>authProtocol</key>
		<dict>
			<key>match</key>
			<string>(?:\G|^)([^\\:\s/]*)(://|:)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.protocol.curlrc</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.protocol.separator.curlrc</string>
				</dict>
			</dict>
		</dict>
		<key>autoRefer</key>
		<dict>
			<key>match</key>
			<string>(;)(auto)\b</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.key-value.semicolon.curlrc</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.assignment.parameter.name.curlrc</string>
				</dict>
			</dict>
		</dict>
		<key>comment</key>
		<dict>
			<key>name</key>
			<string>comment.line.number-sign.curlrc</string>
			<key>begin</key>
			<string>(?:^|(?&lt;=[ \t\xA0&quot;]))#</string>
			<key>end</key>
			<string>$</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.curlrc</string>
				</dict>
			</dict>
		</dict>
		<key>header</key>
		<dict>
			<key>match</key>
			<string>(?:\G|^)\s*([-A-Za-z0-9]+)\s*(?:(:)\s*(.*)|(;))</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.header.curlrc</string>
				</dict>
				<key>2</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>etc#kolon</string>
						</dict>
					</array>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.unquoted.header-value.curlrc</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.statement.semicolon.curlrc</string>
				</dict>
			</dict>
		</dict>
		<key>longOptions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.option.long.curlrc</string>
					<key>match</key>
					<string>(?x)
(?:\G|^|(?&lt;=[ \t])) \s*
(
	(--)?
	(?&lt;optlist_no_parameter&gt;
		anyauth
	|	append
	|	basic
	|	cert-status
	|	compressed-ssh
	|	compressed
	|	create-dirs
	|	crlf
	|	digest
	|	disable-eprt
	|	disable-epsv
	|	disable
	|	disallow-username-in-url
	|	doh-cert-status
	|	doh-insecure
	|	fail-early
	|	fail-with-body
	|	fail
	|	false-start
	|	form-escape
	|	ftp-create-dirs
	|	ftp-pasv
	|	ftp-pret
	|	ftp-skip-pasv-ip
	|	ftp-ssl-ccc
	|	ftp-ssl-control
	|	get
	|	globoff
	|	haproxy-protocol
	|	head
	|	http0.9
	|	http1.0
	|	http1.1
	|	http2-prior-knowledge
	|	http2
	|	http3-only
	|	http3
	|	ignore-content-length
	|	include
	|	insecure
	|	ipv4
	|	ipv6
	|	junk-session-cookies
	|	list-only
	|	location-trusted
	|	location
	|	mail-rcpt-allowfails
	|	manual
	|	metalink
	|	negotiate
	|	netrc-optional
	|	netrc
	|	next
	|	no-alpn
	|	no-buffer
	|	no-clobber
	|	no-keepalive
	|	no-npn
	|	no-progress-meter
	|	no-sessionid
	|	ntlm-wb
	|	ntlm
	|	parallel-immediate
	|	parallel
	|	path-as-is
	|	post301
	|	post302
	|	post303
	|	progress-bar
	|	proxy-anyauth
	|	proxy-basic
	|	proxy-digest
	|	proxy-insecure
	|	proxy-negotiate
	|	proxy-ntlm
	|	proxy-ssl-allow-beast
	|	proxy-ssl-auto-client-cert
	|	proxy-tlsv1
	|	proxytunnel
	|	raw
	|	remote-header-name
	|	remote-name-all
	|	remote-name
	|	remote-time
	|	remove-on-error
	|	retry-all-errors
	|	retry-connrefused
	|	sasl-ir
	|	show-error
	|	silent
	|	socks5-basic
	|	socks5-gssapi-nec
	|	socks5-gssapi
	|	ssl-allow-beast
	|	ssl-auto-client-cert
	|	ssl-no-revoke
	|	ssl-reqd
	|	ssl-revoke-best-effort
	|	sslv2
	|	sslv3
	|	ssl
	|	styled-output
	|	suppress-connect-headers
	|	tcp-fastopen
	|	tcp-nodelay
	|	tftp-no-options
	|	tlsv1.0
	|	tlsv1.1
	|	tlsv1.2
	|	tlsv1.3
	|	tlsv1
	|	tr-encoding
	|	trace-time
	|	use-ascii
	|	verbose
	|	version
	|	xattr
	)
)
(?=\s|$)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.long.option.name.curlrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.dash.long.option.curlrc</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.option.long.curlrc</string>
					<key>begin</key>
					<string>(?x) (?:\G|^|(?&lt;=[ \t]))
(?!\s*--\w[-\w]*\s*[=:]) \s*
(
	(--)?
	(?&lt;optlist_urls&gt;
		dns-ipv4-addr
	|	dns-ipv6-addr
	|	dns-servers
	|	doh-url
	|	mail-auth
	|	mail-from
	|	mail-rcpt
	|	noproxy
	|	referer
	|	url
	)
)
(?:\s*(=|:)|(?=\s|$))</string>
					<key>end</key>
					<string>$|(?:((&quot;)((?:[^&quot;\\]|\\.)*)(?:(&quot;)|(?=$)))|([^\s]+))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.long.option.name.curlrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.dash.long.option.curlrc</string>
						</dict>
						<key>4</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#separators</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.curlrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.curlrc</string>
						</dict>
						<key>3</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#url</string>
								</dict>
							</array>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.curlrc</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.curlrc</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#url</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.option.long.curlrc</string>
					<key>begin</key>
					<string>(?x) (?:\G|^|(?&lt;=[ \t]))
(?!\s*--\w[-\w]*\s*[=:]) \s*
(
	(--)?
	(?&lt;optlist_headers&gt;
		header
	|	proxy-header
	)
)
(?:\s*(=|:)|(?=\s|$))</string>
					<key>end</key>
					<string>$|(?:((&quot;)((?:[^&quot;\\]|\\.)*)(?:(&quot;)|(?=$)))|([^\s]+))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.long.option.name.curlrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.dash.long.option.curlrc</string>
						</dict>
						<key>4</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#separators</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.curlrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.curlrc</string>
						</dict>
						<key>3</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#header</string>
								</dict>
								<dict>
									<key>include</key>
									<string>etc#bareword</string>
								</dict>
							</array>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.curlrc</string>
						</dict>
						<key>5</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#header</string>
								</dict>
								<dict>
									<key>include</key>
									<string>etc#bareword</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.option.long.curlrc</string>
					<key>begin</key>
					<string>(?x) (?:\G|^|(?&lt;=[ \t]))
(?!\s*--\w[-\w]*\s*[=:]) \s*
(
	(--)?
	(?&lt;optlist_form_data&gt;
		cookie
	|	form-string
	|	form
	|	telnet-option
	)
)
(?:\s*(=|:)|(?=\s|$))</string>
					<key>end</key>
					<string>$|(?:((&quot;)((?:[^&quot;\\]|\\.)*)(?:(&quot;)|(?=$)))|([^\s]+))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.long.option.name.curlrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.dash.long.option.curlrc</string>
						</dict>
						<key>4</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#separators</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.curlrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.curlrc</string>
						</dict>
						<key>3</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#params</string>
								</dict>
							</array>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.curlrc</string>
						</dict>
						<key>5</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#params</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.option.long.curlrc</string>
					<key>begin</key>
					<string>(?x) (?:\G|^|(?&lt;=[ \t]))
(?!\s*--\w[-\w]*\s*[=:]) \s*
(
	(--)?
	(?&lt;optlist_protocols&gt;
		proto-default
	|	proto-redir
	|	proto
	)
) (?:\s*(=|:)|(?=\s|$))</string>
					<key>end</key>
					<string>$|(?:((&quot;)((?:[^&quot;\\]|\\.)*)(?:(&quot;)|$))|([^\s]+))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.long.option.name.curlrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.dash.long.option.curlrc</string>
						</dict>
						<key>4</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#separators</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.curlrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.curlrc</string>
						</dict>
						<key>3</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#protocols</string>
								</dict>
							</array>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.curlrc</string>
						</dict>
						<key>5</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#protocols</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.option.long.curlrc</string>
					<key>begin</key>
					<string>(?x) (?:\G|^|(?&lt;=[ \t]))
(?!\s*--\w[-\w]*\s*[=:]) \s*
(
	(--)?
	(?&lt;optlist_port&gt;
		ftp-port
	)
) (?:\s*(=|:)|(?=\s|$))</string>
					<key>end</key>
					<string>$|(?:((&quot;)((?:[^&quot;\\]|\\.)*)(?:(&quot;)|$))|([^\s]+))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.long.option.name.curlrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.dash.long.option.curlrc</string>
						</dict>
						<key>4</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#separators</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.curlrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.curlrc</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.other.port-address.curlrc</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>etc#esc</string>
								</dict>
							</array>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.curlrc</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>constant.other.port-address.curlrc</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.option.long.curlrc</string>
					<key>begin</key>
					<string>(?x) (?:\G|^|(?&lt;=[ \t]))
(?!\s*--\w[-\w]*\s*[=:]) \s*
(
	(--)?
	(?&lt;optlist_md5&gt;
		hostpubmd5
	)
) (?:\s*(=|:)|(?=\s|$))</string>
					<key>end</key>
					<string>$|(?:((&quot;)((?:[^&quot;\\]|\\.)*)(?:(&quot;)|$))|([^\s]+))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.long.option.name.curlrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.dash.long.option.curlrc</string>
						</dict>
						<key>4</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#separators</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.curlrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.curlrc</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.other.md5.checksum.curlrc</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>etc#esc</string>
								</dict>
							</array>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.curlrc</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>constant.other.md5.checksum.curlrc</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.option.long.curlrc</string>
					<key>begin</key>
					<string>(?x) (?:\G|^|(?&lt;=[ \t]))
(?!\s*--\w[-\w]*\s*[=:]) \s*
(
	(--)?
	(?&lt;optlist_range&gt;
		local-port
	|	range
	)
) (?:\s*(=|:)|(?=\s|$))</string>
					<key>end</key>
					<string>$|(?:((&quot;)((?:[^&quot;\\]|\\.)*)(?:(&quot;)|$))|([^\s]+))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.long.option.name.curlrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.dash.long.option.curlrc</string>
						</dict>
						<key>4</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#separators</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.curlrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.curlrc</string>
						</dict>
						<key>3</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#range</string>
								</dict>
								<dict>
									<key>include</key>
									<string>etc#esc</string>
								</dict>
								<dict>
									<key>include</key>
									<string>etc#bareword</string>
								</dict>
							</array>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.curlrc</string>
						</dict>
						<key>5</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#range</string>
								</dict>
								<dict>
									<key>include</key>
									<string>etc#bareword</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.option.long.curlrc</string>
					<key>begin</key>
					<string>(?x) (?:\G|^|(?&lt;=[ \t]))
(?!\s*--\w[-\w]*\s*[=:](?=\s)) \s*
(
	(--)?
	(?&lt;optlist_kv_colon&gt;
		aws-sigv4
	|	cert
	|	connect-to
	|	preproxy
	|	proxy-cert
	|	proxy-user
	|	proxy1.0
	|	proxy
	|	resolve
	|	socks4a
	|	socks4
	|	socks5-hostname
	|	socks5
	|	user
	)
)
(?:\s*(=|:)|(?=\s|$))</string>
					<key>end</key>
					<string>$|(?:((&quot;)((?:[^&quot;\\]|\\.)*)(?:(&quot;)|$))|([^\s]+))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.long.option.name.curlrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.dash.long.option.curlrc</string>
						</dict>
						<key>4</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#separators</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.curlrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.curlrc</string>
						</dict>
						<key>3</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#auth</string>
								</dict>
								<dict>
									<key>include</key>
									<string>etc#bareword</string>
								</dict>
							</array>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.curlrc</string>
						</dict>
						<key>5</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#auth</string>
								</dict>
								<dict>
									<key>include</key>
									<string>etc#bareword</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.option.long.curlrc</string>
					<key>begin</key>
					<string>(?x) (?:\G|^|(?&lt;=[ \t]))
(?!\s*--\w[-\w]*\s*[=:](?=\s)) \s*
(
	(--)?
	(?&lt;optlist_string&gt;
		abstract-unix-socket
	|	alt-svc
	|	cacert
	|	capath
	|	cert-type
	|	ciphers
	|	config
	|	cookie-jar
	|	crlfile
	|	curves
	|	data-ascii
	|	data-binary
	|	data-raw
	|	data-urlencode
	|	data
	|	delegation
	|	dns-interface
	|	dump-header
	|	egd-file
	|	engine
	|	etag-compare
	|	etag-save
	|	ftp-account
	|	ftp-alternative-to-user
	|	ftp-method
	|	ftp-ssl-ccc-mode
	|	happy-eyeballs-timeout-ms
	|	help
	|	hostpubsha256
	|	hsts
	|	interface
	|	json
	|	key-type
	|	key
	|	krb
	|	libcurl
	|	login-options
	|	netrc-file
	|	oauth2-bearer
	|	output-dir
	|	output
	|	pass
	|	pinnedpubkey
	|	proxy-cacert
	|	proxy-capath
	|	proxy-cert-type
	|	proxy-ciphers
	|	proxy-crlfile
	|	proxy-key-type
	|	proxy-key
	|	proxy-pass
	|	proxy-pinnedpubkey
	|	proxy-service-name
	|	proxy-tls13-ciphers
	|	proxy-tlsauthtype
	|	proxy-tlspassword
	|	proxy-tlsuser
	|	pubkey
	|	quote
	|	random-file
	|	request-target
	|	request
	|	sasl-authzid
	|	service-name
	|	socks5-gssapi-service
	|	stderr
	|	tls-max
	|	tls13-ciphers
	|	tlsauthtype
	|	tlspassword
	|	tlsuser
	|	trace-ascii
	|	trace
	|	unix-socket
	|	upload-file
	|	url-query
	|	user-agent
	|	write-out
	)
)
(?:\s*(=|:)|(?=\s|$))</string>
					<key>end</key>
					<string>$|(?:(=)?|(?:([-A-Za-z0-9%_]+)(=)?)?([@&lt;]))?(?:((&quot;)((?:[^&quot;\\]|\\.)*)(?:(&quot;)|$))|([^\s]+))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.long.option.name.curlrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.dash.long.option.curlrc</string>
						</dict>
						<key>4</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#separators</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.encoding-modifier.curlrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.form-field.curlrc</string>
						</dict>
						<key>3</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>etc#eql</string>
								</dict>
							</array>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.source-modifier.curlrc</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.curlrc</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.curlrc</string>
						</dict>
						<key>7</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>etc#esc</string>
								</dict>
							</array>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.curlrc</string>
						</dict>
						<key>9</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.curlrc</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.option.long.curlrc</string>
					<key>begin</key>
					<string>(?x) (?:\G|^|(?&lt;=[ \t]))
(?!\s*--\w[-\w]*\s*[=:])
\s*
(
	(--)?
	(?&lt;optlist_numeric&gt;
		connect-timeout
	|	continue-at
	|	create-file-mode
	|	expect100-timeout
	|	keepalive-time
	|	limit-rate
	|	max-filesize
	|	max-redirs
	|	max-time
	|	parallel-max
	|	rate
	|	retry-delay
	|	retry-max-time
	|	retry
	|	speed-limit
	|	speed-time
	|	tftp-blksize
	|	time-cond
	)
) (?:\s*(=|:)|(?=\s|$))</string>
					<key>end</key>
					<string>$|(?:((&quot;)((?:[^&quot;\\]|\\.)*)(?:(&quot;)|$))|([^\s]+))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.long.option.name.curlrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.dash.long.option.curlrc</string>
						</dict>
						<key>4</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#separators</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.curlrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.curlrc</string>
						</dict>
						<key>3</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>etc#num</string>
								</dict>
								<dict>
									<key>include</key>
									<string>etc#bareword</string>
								</dict>
							</array>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.curlrc</string>
						</dict>
						<key>5</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>etc#num</string>
								</dict>
								<dict>
									<key>include</key>
									<string>etc#bareword</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>main</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#shortOptions</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#longOptions</string>
				</dict>
			</array>
		</dict>
		<key>params</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#autoRefer</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.encoding-modifier.curlrc</string>
					<key>match</key>
					<string>(?:\G|^|(?&lt;=\G&quot;|^&quot;))=</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?:\G|^|(?&lt;=\G&quot;|^&quot;))(;)([^\s=;&quot;]+(?=&quot;?(?:\s|$)))?</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.semicolon.curlrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.assignment.parameter.name.curlrc</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>(?:\G|^|(?&lt;=\G&quot;|^&quot;))(?:([-A-Za-z0-9%_]+)(=)?)?([@&lt;])</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.form-field.curlrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>etc#eql</string>
								</dict>
							</array>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.source-modifier.curlrc</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.parameter.curlrc</string>
					<key>match</key>
					<string>([^\s=;]+)(=)([^\s=;]*)(;)?</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.assignment.parameter.name.curlrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>etc#eql</string>
								</dict>
							</array>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.other.parameter.value.curlrc</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.semicolon.curlrc</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=@)(&quot;(?:[^\\&quot;]|\\.)++&quot;|(?:[^&quot;\s;\\]|\\.)++)(?:(;)|(?=$|\s))</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.assignment.parameter.name.curlrc</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>etc#esc</string>
								</dict>
							</array>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.semicolon.curlrc</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>include</key>
					<string>etc#esc</string>
				</dict>
				<dict>
					<key>include</key>
					<string>etc#bareword</string>
				</dict>
			</array>
		</dict>
		<key>protocols</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.other.protocol-name.curlrc</string>
					<key>match</key>
					<string>[^\s,+=-]+</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.control.permit-protocol.curlrc</string>
					<key>match</key>
					<string>\+</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.control.deny-protocol.curlrc</string>
					<key>match</key>
					<string>-</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.control.permit-protocol.only.curlrc</string>
					<key>match</key>
					<string>=</string>
				</dict>
				<dict>
					<key>include</key>
					<string>etc#comma</string>
				</dict>
			</array>
		</dict>
		<key>range</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.byte-range.curlrc</string>
					<key>match</key>
					<string>([0-9]+)(-)([0-9]+)?|(-)([0-9]+)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.integer.int.decimal.dec.range.start.curlrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.range.dash.curlrc</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.integer.int.decimal.dec.range.end.curlrc</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.range.dash.curlrc</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.integer.int.decimal.dec.range.end.curlrc</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>include</key>
					<string>etc#comma</string>
				</dict>
				<dict>
					<key>include</key>
					<string>etc#int</string>
				</dict>
			</array>
		</dict>
		<key>separators</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>etc#eql</string>
				</dict>
				<dict>
					<key>include</key>
					<string>etc#kolon</string>
				</dict>
			</array>
		</dict>
		<key>shortOptions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.option.short.curlrc</string>
					<key>begin</key>
					<string>^\s*((-)[:#012346BGIJLMNOQRSVafghijklnpqsv]*[ACDEFHKPQTUXYbcdehmortuwxyz])</string>
					<key>end</key>
					<string>(?x)
$
|

# Numbers
(?&lt;=(?#optlist_numeric)[CYmyz])
\G (?:(?! )\s)*
([-+]?[0-9.]+)

|

# Byte range
(?&lt;=(?#optlist_range)r)
\G (?:(?! )\s)*
([-0-9,]+)

|

# “key=value” pairs
(?&lt;=(?#optlist_form_data)[Fbt])
\G (?:(?! )\s)*
(?:
	((&quot;)((?:[^&quot;\\]|\\.)*)(?:(&quot;)|$))
	|
	([\S ]+)
)

|

# “key:value” pairs
(?&lt;=(?#optlist_kv_colon)[EUux])
\G (?:(?! )\s)*
((?:[^\\:\s/]| )*://)?
(
	(?:[^\\:\s]|\\.| )+
	(?::(?:[^\\:\s]|\\.| )+)*
	:?
)

|

# Headers
(?&lt;=(?#optlist_headers)H)
\G (?:(?! )\s)*
(?:
	((&quot;)((?:[^&quot;\\]|\\.| )*)(?:(&quot;)|$))
	|
	([\S ]+)
)

|

# URLs
(?&lt;=(?#optlist_urls)e)
\G (?:(?! )\s)*
(?:
	((&quot;)((?:[^&quot;\\]|\\.| )*)(?:(&quot;)|$))
	|
	([\S ]+)
)

|

# Port address
(?&lt;=(?#optlist_port)P)
\G (?:(?! )\s)*
(?:
	((&quot;)((?:[^&quot;\\]|\\.| )*)(?:(&quot;)|$))
	|
	([\S ]+)
)

|

# Anything else
(?:
	((&quot;)((?:[^&quot;\\]|\\.| )*)(?:(&quot;)|$))
	|
	([\S ]+)
)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.short.option.name.curlrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.dash.short.option.curlrc</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>etc#num</string>
								</dict>
							</array>
						</dict>
						<key>2</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#range</string>
								</dict>
							</array>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>meta.parameter-string.curlrc</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.curlrc</string>
						</dict>
						<key>5</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#params</string>
								</dict>
							</array>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.curlrc</string>
						</dict>
						<key>7</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#params</string>
								</dict>
							</array>
						</dict>
						<key>8</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#authProtocol</string>
								</dict>
							</array>
						</dict>
						<key>9</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#auth</string>
								</dict>
							</array>
						</dict>
						<key>10</key>
						<dict>
							<key>name</key>
							<string>meta.http-headers.curlrc</string>
						</dict>
						<key>11</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.curlrc</string>
						</dict>
						<key>12</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#header</string>
								</dict>
							</array>
						</dict>
						<key>13</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.curlrc</string>
						</dict>
						<key>14</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#header</string>
								</dict>
							</array>
						</dict>
						<key>15</key>
						<dict>
							<key>name</key>
							<string>meta.url-string.curlrc</string>
						</dict>
						<key>16</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.curlrc</string>
						</dict>
						<key>17</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#url</string>
								</dict>
							</array>
						</dict>
						<key>18</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.curlrc</string>
						</dict>
						<key>19</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#url</string>
								</dict>
							</array>
						</dict>
						<key>20</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.curlrc</string>
						</dict>
						<key>21</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.curlrc</string>
						</dict>
						<key>22</key>
						<dict>
							<key>name</key>
							<string>constant.other.port-address.curlrc</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>etc#esc</string>
								</dict>
							</array>
						</dict>
						<key>23</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.curlrc</string>
						</dict>
						<key>24</key>
						<dict>
							<key>name</key>
							<string>constant.other.port-address.curlrc</string>
						</dict>
						<key>25</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.curlrc</string>
						</dict>
						<key>26</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.curlrc</string>
						</dict>
						<key>27</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>etc#esc</string>
								</dict>
							</array>
						</dict>
						<key>28</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.curlrc</string>
						</dict>
						<key>29</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.curlrc</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.option.short.curlrc</string>
					<key>match</key>
					<string>^\s*((-)(?#optlist_no_parameter)[#012346:BGIJLMNORSVZafgijklnpqsv]+)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.short.option.name.curlrc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.dash.short.option.curlrc</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>string</key>
		<dict>
			<key>name</key>
			<string>string.quoted.double.curlrc</string>
			<key>begin</key>
			<string>&quot;</string>
			<key>end</key>
			<string>&quot;|(?=$)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.character.escape.backslash.curlrc</string>
					<key>match</key>
					<string>(\\)[\\&quot;tnrv]</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.escape.backslash.curlrc</string>
						</dict>
					</dict>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.curlrc</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.curlrc</string>
				</dict>
			</dict>
		</dict>
		<key>url</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#autoRefer</string>
				</dict>
				<dict>
					<key>include</key>
					<string>etc#comma</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=\G&quot;|^&quot;)((?:[^&quot;\\]|\\.)*)(?=$|&quot;|;)|(?:\G(?&lt;!&quot;)|^)([^\s,]+?)(?=$|\s|;|,)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>etc#url</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#urlNoSchema</string>
								</dict>
							</array>
						</dict>
						<key>2</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>etc#url</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#urlNoSchema</string>
								</dict>
							</array>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>include</key>
					<string>#params</string>
				</dict>
				<dict>
					<key>include</key>
					<string>etc#bareword</string>
				</dict>
			</array>
		</dict>
		<key>urlNoSchema</key>
		<dict>
			<key>match</key>
			<string>(?:\G|^)\s*([-a-zA-Z0-9]+(?:\.|@)[-a-zA-Z0-9]+.*)\s*</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.other.reference.link.underline.url.curlrc</string>
				</dict>
			</dict>
		</dict>
	</dict>
	<key>fileTypes</key>
	<array>
		<string>.curlrc</string>
		<string>_curlrc</string>
	</array>
</dict>
</plist>
