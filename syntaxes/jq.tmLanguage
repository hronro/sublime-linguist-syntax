<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>name</key>
	<string>jq</string>
	<key>scopeName</key>
	<string>source.jq</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#main</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>array</key>
		<dict>
			<key>name</key>
			<string>meta.array.jq</string>
			<key>begin</key>
			<string>\[</string>
			<key>end</key>
			<string>\]</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#self_in_round_brackets</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.bracket.round.begin.jq</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.bracket.round.end.jq</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>include</key>
					<string>#main</string>
				</dict>
				<dict>
					<key>name</key>
					<string>punctuation.separator.jq</string>
					<key>match</key>
					<string>,</string>
				</dict>
				<dict>
					<key>name</key>
					<string>invalid.illegal.identifier.jq</string>
					<key>match</key>
					<string>\S+</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.bracket.square.begin.jq</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.bracket.square.end.jq</string>
				</dict>
			</dict>
		</dict>
		<key>comment</key>
		<dict>
			<key>name</key>
			<string>comment.line.number-sign.jq</string>
			<key>begin</key>
			<string>#</string>
			<key>end</key>
			<string>$</string>
		</dict>
		<key>constant</key>
		<dict>
			<key>name</key>
			<string>constant.language.jq</string>
			<key>match</key>
			<string>(?&lt;!\.)\b(true|false|null)(?!\s*:)\b</string>
		</dict>
		<key>field</key>
		<dict>
			<key>name</key>
			<string>entity.other.attribute-name.jq</string>
			<key>match</key>
			<string>\.[a-zA-Z_]\w*</string>
		</dict>
		<key>filter</key>
		<dict>
			<key>name</key>
			<string>support.function.jq</string>
			<key>match</key>
			<string>([a-zA-Z_]\w*::)*[a-zA-Z_]\w*</string>
		</dict>
		<key>format</key>
		<dict>
			<key>name</key>
			<string>constant.other.symbol.jq</string>
			<key>match</key>
			<string>@\w+</string>
		</dict>
		<key>function</key>
		<dict>
			<key>name</key>
			<string>meta.function.jq</string>
			<key>begin</key>
			<string>(?&lt;!\.)\bdef(?!\s*:)\b</string>
			<key>end</key>
			<string>([a-zA-Z_]\w*::)*[a-zA-Z_]\w*</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>name</key>
					<string>invalid.illegal.identifier.jq</string>
					<key>match</key>
					<string>\S+</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.jq</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.jq</string>
				</dict>
			</dict>
		</dict>
		<key>keyword</key>
		<dict>
			<key>name</key>
			<string>keyword.control.jq</string>
			<key>match</key>
			<string>(?x)
(?&lt;!\.) \b
( and
| as
| break
| catch
| elif
| else
| empty
| end
| foreach
| if
| import
| include
| label
| module
| or
| reduce
| then
| try
) (?!\s*:) \b</string>
		</dict>
		<key>main</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#array</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#object</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#field</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#format</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constant</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keyword</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#filter</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#number</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#punctuation</string>
				</dict>
			</array>
		</dict>
		<key>number</key>
		<dict>
			<key>name</key>
			<string>constant.numeric.jq</string>
			<key>match</key>
			<string>([0-9.]{2,}|[0-9]+)([eE][+-]?[0-9]+)?</string>
		</dict>
		<key>object</key>
		<dict>
			<key>name</key>
			<string>meta.object.jq</string>
			<key>begin</key>
			<string>{</string>
			<key>end</key>
			<string>}</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable</string>
				</dict>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.id.jq</string>
					<key>match</key>
					<string>([a-zA-Z_]\w*::)*[a-zA-Z_]\w*</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#self_in_round_brackets</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.bracket.round.begin.jq</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.bracket.round.end.jq</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>begin</key>
					<string>:</string>
					<key>end</key>
					<string>,|(?=})</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#self_in_round_brackets</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.begin.jq</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.end.jq</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>punctuation.separator.jq</string>
					<key>match</key>
					<string>,</string>
				</dict>
				<dict>
					<key>name</key>
					<string>invalid.illegal.identifier.jq</string>
					<key>match</key>
					<string>\S+</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.bracket.curly.begin.jq</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.bracket.curly.end.jq</string>
				</dict>
			</dict>
		</dict>
		<key>operator</key>
		<dict>
			<key>name</key>
			<string>keyword.operator.jq</string>
			<key>match</key>
			<string>(?x) ( \.\.? | \?// | \? | ==? | //=? | \|=? | \+=? | -=? | \*=? | /=? | %=? | != | &lt;=? | &gt;=? )</string>
		</dict>
		<key>punctuation</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>punctuation.bracket.round.jq</string>
					<key>match</key>
					<string>\(|\)</string>
				</dict>
				<dict>
					<key>name</key>
					<string>punctuation.bracket.square.jq</string>
					<key>match</key>
					<string>\[|\]</string>
				</dict>
				<dict>
					<key>name</key>
					<string>punctuation.separator.jq</string>
					<key>match</key>
					<string>,|;|:</string>
				</dict>
			</array>
		</dict>
		<key>self_in_round_brackets</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#main</string>
						</dict>
					</array>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.bracket.round.begin.jq</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.bracket.round.end.jq</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>include</key>
					<string>#main</string>
				</dict>
			</array>
		</dict>
		<key>string</key>
		<dict>
			<key>name</key>
			<string>string.quoted.double.jq</string>
			<key>begin</key>
			<string>&quot;</string>
			<key>end</key>
			<string>&quot;</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.character.escape.jq</string>
					<key>match</key>
					<string>\\([&quot;\\/bfnrt]|u[0-9a-fA-F]{4})</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string_interpolation</string>
				</dict>
				<dict>
					<key>name</key>
					<string>invalid.illegal.unrecognized-string-escape.jq</string>
					<key>match</key>
					<string>\\.</string>
				</dict>
			</array>
		</dict>
		<key>string_interpolation</key>
		<dict>
			<key>name</key>
			<string>source.jq.embedded.source</string>
			<key>begin</key>
			<string>\\\(</string>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#self_in_round_brackets</string>
				</dict>
			</array>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.embedded.jq.begin.jq</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.embedded.jq.end.jq</string>
				</dict>
			</dict>
		</dict>
		<key>variable</key>
		<dict>
			<key>name</key>
			<string>variable.other.jq</string>
			<key>match</key>
			<string>\$([a-zA-Z_]\w*::)*[a-zA-Z_]\w*</string>
		</dict>
	</dict>
	<key>fileTypes</key>
	<array>
		<string>jq</string>
	</array>
</dict>
</plist>
